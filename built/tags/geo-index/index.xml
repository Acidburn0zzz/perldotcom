<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Geo Index on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/geo-index/</link>
    <description>Recent content in Geo Index on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 May 2019 00:31:36 +0000</lastBuildDate>
    <atom:link href="/tags/geo-index/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - April 2019</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---april-2019/</link>
      <pubDate>Tue, 07 May 2019 00:31:36 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---april-2019/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::optex::textconv&#34;&gt;App::optex::textconv&lt;/a&gt; compares .docx files by their text contents&lt;/li&gt;
&lt;li&gt;Get a mojo-based Redfish client with &lt;a href=&#34;https://metacpan.org/pod/Mojo::Redfish::Client&#34;&gt;Mojo::Redfish::Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Checkpoint Management (change control) API version 1.x client - &lt;a href=&#34;https://metacpan.org/pod/Net::Checkpoint::Management::v1&#34;&gt;Net::Checkpoint::Management::v1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/OpenStack::MetaAPI&#34;&gt;OpenStack::MetaAPI&lt;/a&gt; provides a Perl5 OpenStack API abstraction on top of OpenStack::Client&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Paubox_Email_SDK&#34;&gt;Paubox_Email_SDK&lt;/a&gt; provides an interface to the Paubox Transactional Email API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Algorithm::MinPerfHashTwoLevel&#34;&gt;Algorithm::MinPerfHashTwoLevel&lt;/a&gt; construct a &amp;ldquo;two level&amp;rdquo; minimal perfect hash&lt;/li&gt;
&lt;li&gt;Get a fast Concise Binary Object Representation parser with a liberal license - &lt;a href=&#34;https://metacpan.org/pod/CBOR::Free&#34;&gt;CBOR::Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Events&#34;&gt;DBIx::Class::Events&lt;/a&gt; stores events for your DBIC results&lt;/li&gt;
&lt;li&gt;JSON::Pointer meets PadWalker in &lt;a href=&#34;https://metacpan.org/pod/Devel::Optic&#34;&gt;Devel::Optic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::TVShow::Organize&#34;&gt;File::TVShow::Organize&lt;/a&gt; moves TVShow Files into their matching Show Folder on a media server&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Geo::Index&#34;&gt;Geo::Index&lt;/a&gt; creates in-memory indices with fast searching capabilities&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Future::IO&#34;&gt;Future::IO&lt;/a&gt; provides Future-returning IO methods&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IPC::ReadpipeX&#34;&gt;IPC::ReadpipeX&lt;/a&gt; bypasses the shell with the list form of readpipe/qx/backticks for capturing output&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PerlIO::normalize&#34;&gt;PerlIO::normalize&lt;/a&gt; provides a PerlIO layer to normalize unicode strings on input and output&lt;/li&gt;
&lt;li&gt;Get a web interface for viewing and inspecting yath test logs using &lt;a href=&#34;https://metacpan.org/pod/Test2::Harness::UI&#34;&gt;Test2::Harness::UI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AnyEvent::HTTPD::Router&#34;&gt;AnyEvent::HTTPD::Router&lt;/a&gt; adds routing to AnyEvent:HTTPD&lt;/li&gt;
&lt;li&gt;Use Furl, but wired to a PSGI app with &lt;a href=&#34;https://metacpan.org/pod/Furl::PSGI&#34;&gt;Furl::PSGI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Emit stats in your Mojo app with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Statsd&#34;&gt;Mojolicious::Plugin::Statsd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Static::Role::Compressed&#34;&gt;Mojolicious::Static::Role::Compressed&lt;/a&gt; serves pre-compressed versions of static assets&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Starwoman&#34;&gt;Starwoman&lt;/a&gt; is a fork &amp;ldquo;because Starman does the same thing over and over again expecting different results&amp;rdquo; :-)&lt;/li&gt;
&lt;li&gt;Use the AWS s3 URI scheme with URI objects using &lt;a href=&#34;https://metacpan.org/pod/URI::s3&#34;&gt;URI::s3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Yancy::Backend::Static&#34;&gt;Yancy::Backend::Static&lt;/a&gt; can build a Yancy site from static Markdown files&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

