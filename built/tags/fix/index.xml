<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fix on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/fix/</link>
    <description>Recent content in Fix on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Apr 2017 09:13:30 +0000</lastBuildDate>
    <atom:link href="/tags/fix/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - March 2017</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---march-2017/</link>
      <pubDate>Fri, 14 Apr 2017 09:13:30 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---march-2017/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/CPAN::Upload::Tiny&#34;&gt;CPAN::Upload::Tiny&lt;/a&gt; a tiny CPAN uploader&lt;/li&gt;
&lt;li&gt;Fetch streamable URLs from radio-station websites using &lt;a href=&#34;https://metacpan.org/pod/IHeartRadio::Streams&#34;&gt;IHeartRadio::Streams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;kritika.io is a code quality service for Perl, use its API with &lt;a href=&#34;https://metacpan.org/pod/App::Kritika&#34;&gt;App::Kritika&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Access the Megaport API with &lt;a href=&#34;https://metacpan.org/pod/Megaport&#34;&gt;Megaport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the Money Over IP v2 API (Brazilian) with &lt;a href=&#34;https://metacpan.org/pod/Net::Moip::V2&#34;&gt;Net::Moip::V2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Zendesk&#34;&gt;Net::Zendesk&lt;/a&gt; is a thin and lightweight interface for Zendesk&amp;rsquo;s API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Braintree&#34;&gt;WebService::Braintree&lt;/a&gt; is a fork of Net::Braintree for the Braintree Payment Services Gateway API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install the C libxml2 library on your system with &lt;a href=&#34;https://metacpan.org/pod/Alien::Libxml2&#34;&gt;Alien::Libxml2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Checkout &lt;a href=&#34;https://metacpan.org/pod/Module::Build::FFI&#34;&gt;Module::Build::FFI&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Alien::Base::ModuleBuild&#34;&gt;Alien::Base::ModuleBuild&lt;/a&gt; if you want to distribute Alien modules with Build.PL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Glib::FindMinVersion&#34;&gt;Glib::FindMinVersion&lt;/a&gt; find the minimum version of GLib needed to compile C source&lt;/li&gt;
&lt;li&gt;Manage LXC containers with &lt;a href=&#34;https://metacpan.org/pod/Linux::LXC&#34;&gt;Linux::LXC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::SSH::Putty&#34;&gt;Net::SSH::Putty&lt;/a&gt; execute SSH sessions with Putty in batch mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bytes::Random::XS&#34;&gt;Bytes::Random::XS&lt;/a&gt; generate random bytes in C!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Convert::Color::HSLuv&#34;&gt;Convert::Color::HSLuv&lt;/a&gt; convert between RGB, CIEXYZ, CIELUV, CIELCh, HSLuv, HPLuv color spaces&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::ResultSet::SetControl&#34;&gt;DBIx::Class::ResultSet::SetControl&lt;/a&gt; provides convenient looping over DBIC resultsets&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Protocol::FIX&#34;&gt;Protocol::FIX&lt;/a&gt; a Financial Information eXchange (FIX) parser/serializer&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Starch::Plugin::SecureStateID&#34;&gt;Starch::Plugin::SecureStateID&lt;/a&gt; use cryptographically secure random when making state IDs for &lt;a href=&#34;https://metacpan.org/pod/Starch&#34;&gt;Starch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Support line-oriented command interpreters with &lt;a href=&#34;https://metacpan.org/pod/Cmd::Interpreter&#34;&gt;Cmd::Interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Forks::Queue&#34;&gt;Forks::Queue&lt;/a&gt;  a queue that can be shared across processes - neat!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IO::SigGuard&#34;&gt;IO::SigGuard&lt;/a&gt; provides signal protection for sysread/syswrite EINTR errors&lt;/li&gt;
&lt;li&gt;Get a minimal mailing list manager with &lt;a href=&#34;https://metacpan.org/pod/Sietima&#34;&gt;Sietima&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Sort::HashKeys&#34;&gt;Sort::HashKeys&lt;/a&gt; provides a faster hash key sort using XS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/X::Tiny&#34;&gt;X::Tiny&lt;/a&gt; is a lightweight exception framework&lt;/li&gt;
&lt;li&gt;Declare constants and export them automatically using &lt;a href=&#34;https://metacpan.org/pod/exported::constants&#34;&gt;exported::constants&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/RPi::ADC::MCP3008&#34;&gt;RPi::ADC::MCP3008&lt;/a&gt; is an interface to the MCP3008 analog to digital converter (ADC) on Raspberry Pi&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Describe time duration in Spanish using &lt;a href=&#34;https://metacpan.org/pod/Time::Duration::es&#34;&gt;Time::Duration::es&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/NanoB2B::NER&#34;&gt;NanoB2B::NER&lt;/a&gt; - turns labeled text lines into ARFF files, as part of an effort to &amp;ldquo;automatically extract and synthesize knowledge and trends in nanotechnology research&amp;rdquo; - cool!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use websockets in Perl with &lt;a href=&#34;https://metacpan.org/pod/Net::WebSocket&#34;&gt;Net::WebSocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Web::AssetLib&#34;&gt;Web::AssetLib&lt;/a&gt; is a static asset pipeline manager - looks very capable&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Wurm&#34;&gt;Wurm&lt;/a&gt; is a new web framework based on fold-r. The docs are entertaining. Bravo!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Neutralize Shellshock by patching Bash with Perl</title>
      <link>http://localhost:1313/article/118/2014/10/5/Neutralize-Shellshock-by-patching-Bash-with-Perl/</link>
      <pubDate>Sun, 05 Oct 2014 18:13:45 +0000</pubDate>
      
      <guid>http://localhost:1313/article/118/2014/10/5/Neutralize-Shellshock-by-patching-Bash-with-Perl/</guid>
      <description>

&lt;p&gt;The safest way to protect a system from Shellshock is to upgrade to a patched version of Bash. However if you&amp;rsquo;re like me, you may find that a hectic Linux distro release &lt;a href=&#34;https://fedoraproject.org/wiki/Fedora_Release_Life_Cycle&#34;&gt;schedule&lt;/a&gt; has left your current distribution unsupported. Rather than run the risk of attack, you can patch Bash yourself. Unfortunately some versions of Bash have as many as 52 different &lt;a href=&#34;http://ftp.gnu.org/gnu/bash/bash-4.2-patches/&#34;&gt;patches&lt;/a&gt; that must be downloaded and applied. So I wrote a Perl called &lt;a href=&#34;https://github.com/sillymoose/bashfix&#34;&gt;bashfix&lt;/a&gt; to automate it.&lt;/p&gt;

&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;Bashfix has a minimal set of requirements, so you should be able to run it on any Linux platform out of the box:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perl 5.8 or higher and no extra modules required&lt;/li&gt;
&lt;li&gt;Linux with Bash version 3.* or 4.*&lt;/li&gt;
&lt;li&gt;The following C binaries: wget, curl, bison, byacc, gettext, patch, autoconf&lt;/li&gt;
&lt;li&gt;An internet connection to download Bash and associated patches from GNU&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;Using bashfix is fairly straightforward:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;$ git clone https:&lt;span style=&#34;color:#e6db74&#34;&gt;//gi&lt;/span&gt;thub&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com&lt;span style=&#34;color:#e6db74&#34;&gt;/sillymoose/&lt;/span&gt;bashfix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;git
$ cd bashfix
$ chmod &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;x bashfix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pl
$ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;./&lt;/span&gt;bashfix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pl
Bash version &lt;span style=&#34;color:#ae81ff&#34;&gt;4.2.13&lt;/span&gt; detected
Created working directory &lt;span style=&#34;color:#e6db74&#34;&gt;/tmp/&lt;/span&gt;PIRKRioxmM
Downloading Bash
Downloading Patches
Bash patched to level &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;
Bash fully patched&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
Configuring Bash &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
Building &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; testing Bash &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; New Bash binary built&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
Making backup copy of &lt;span style=&#34;color:#e6db74&#34;&gt;/usr/&lt;/span&gt;bin&lt;span style=&#34;color:#e6db74&#34;&gt;/bash at /&lt;/span&gt;usr&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;bash&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;bak
Making backup copy of &lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;bash at &lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;bash&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;bak
Bash version &lt;span style=&#34;color:#ae81ff&#34;&gt;4.2.52&lt;/span&gt; is now installed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bashfix checks that you have Bash installed, and the necessary prerequisites. It then downloads the Bash source for the same Bash version that is already installed on the system (you can patch an old Bash version to be Shellshock-proof). Note that different versions of Bash have different numbers of patches: 4.2 has 52 patches, whilst 4.1 has only 16. After that, bashfix configures, builds and tests Bash, making a backup of your existing Bash binary, before installing the newly patched version.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ve tested &lt;a href=&#34;https://github.com/sillymoose/bashfix&#34;&gt;bashfix&lt;/a&gt; on different versions of Fedora and CentOS, and expect that it works with any RHEL flavoured distro. With other Linux distros or Unix systems, your mileage may vary. If you encounter any issues - get in touch and let me know! Check out our recent &lt;a href=&#34;http://perltricks.com/article/115/2014/9/26/Shellshock-and-Perl&#34;&gt;article&lt;/a&gt; on Shellshock and Perl if you&amp;rsquo;d like to know more about the exploit.&lt;/p&gt;

&lt;p&gt;Thanks to Steve Jenkins whose detailed blog &lt;a href=&#34;http://stevejenkins.com/blog/2014/09/how-to-manually-update-bash-to-patch-shellshock-bug-on-older-fedora-based-systems/&#34;&gt;post&lt;/a&gt; on patching Fedora Bash was the inspiration for this script.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

