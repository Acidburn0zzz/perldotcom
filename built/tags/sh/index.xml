<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sh on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/sh/</link>
    <description>Recent content in Sh on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Feb 2018 20:41:57 +0000</lastBuildDate>
    <atom:link href="/tags/sh/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reading remote documentation</title>
      <link>http://localhost:1313/article/reading-remote-documentation/</link>
      <pubDate>Sun, 11 Feb 2018 20:41:57 +0000</pubDate>
      
      <guid>http://localhost:1313/article/reading-remote-documentation/</guid>
      <description>

&lt;p&gt;When I need to read Perl documentation, I use &lt;a href=&#34;http://localhost:1313/article/155/2015/2/26/Hello-perldoc--productivity-booster/&#34;&gt;perldoc&lt;/a&gt;. I spend most of my time working at the terminal, so it&amp;rsquo;s convenient to drop to a command prompt and bring up the documentation for some module or command right there in the terminal.&lt;/p&gt;

&lt;h3 id=&#34;pod-cpandoc&#34;&gt;Pod::Cpandoc&lt;/h3&gt;

&lt;p&gt;Sometimes I need to check the documentation of a module I don&amp;rsquo;t have installed on my machine, and in those cases, &lt;code&gt;perldoc&lt;/code&gt; can&amp;rsquo;t help me. Instead I could use &lt;a href=&#34;https://metacpan.org/pod/Pod::Cpandoc&#34;&gt;cpandoc&lt;/a&gt;, as it behaves like perldoc, but it will fetch remote documentation if the module is not installed on your system.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cpandoc Foo::Bar
# displays Foo::Bar pod in pager app
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As &lt;code&gt;cpandoc&lt;/code&gt; supports the same options as &lt;code&gt;perldoc&lt;/code&gt;, you can use it for useful &lt;a href=&#34;http://perladvent.org/2011/2011-12-15.html&#34;&gt;tricks&lt;/a&gt; like browsing the source code for a module without installing it.&lt;/p&gt;

&lt;h3 id=&#34;metacpan&#34;&gt;♥ Metacpan ♥&lt;/h3&gt;

&lt;p&gt;Now, reading documentation in the terminal is fine and all, but I really like &lt;a href=&#34;http://metacpan.org&#34;&gt;metacpan&amp;rsquo;s&lt;/a&gt; distribution pages, which not only include documentation, but also incorporate CPAN Testers&amp;rsquo; results, a release history, open issues, and other useful links and data. So lately I&amp;rsquo;ve taken to reading documentation on metacpan.&lt;/p&gt;

&lt;p&gt;Getting there though, can be tiresome. I open a new browser tab, start typing &amp;ldquo;metacpan&amp;rdquo;, my browser then autocompletes it to the most recent metacpan address I viewed, which is inevitably &lt;strong&gt;not&lt;/strong&gt; the one I want, so I highlight the module name in the URL, and replace it with the one I&amp;rsquo;m looking for.&lt;/p&gt;

&lt;p&gt;After having performed this routine more times than I&amp;rsquo;d like to admit, I finally wrote a shell script to do it for me:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://metacpan.org/pod/&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OSTYPE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;linux-gnu&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  xdg-open &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;amp;&amp;gt;/dev/null
&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OSTYPE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;darwin&amp;#34;&lt;/span&gt;*  &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  open &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;amp;&amp;gt;/dev/null
&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OSTYPE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cygwin&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  cygstart &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;amp;&amp;gt;/dev/null
&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OSTYPE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;msys&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  start &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OSTYPE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win32&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  start &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OSTYPE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;freebsd&amp;#34;&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  xdg-open &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;amp;&amp;gt;/dev/null
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OS not recognized&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It constructs the metacpan URL using the first argument passed to the script, and then opens the URL in a new browser tab. I named the script &lt;code&gt;pod&lt;/code&gt; and placed it in my local path (I was going to call it &lt;code&gt;mcpan&lt;/code&gt; but that&amp;rsquo;s a little similar to &lt;code&gt;cpanm&lt;/code&gt; for my tastes, plus &amp;ldquo;pod&amp;rdquo; is faster to type). So now if I want to view something on metacpan, all I have to do is type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pod Foo::Bar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the script does the rest. I&amp;rsquo;ve added commands for other operating systems, but I&amp;rsquo;ve only tested it on Linux and MacOS.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

