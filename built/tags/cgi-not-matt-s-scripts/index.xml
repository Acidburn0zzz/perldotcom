<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cgi Not Matt S Scripts on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/cgi-not-matt-s-scripts/</link>
    <description>Recent content in Cgi Not Matt S Scripts on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Jan 2002 00:00:00 -0800</lastBuildDate>
    <atom:link href="/tags/cgi-not-matt-s-scripts/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Finding CGI Scripts</title>
      <link>http://localhost:1313/pub/2002/01/23/cgi.html/</link>
      <pubDate>Wed, 23 Jan 2002 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2002/01/23/cgi.html/</guid>
      <description>

&lt;h3 id=&#34;span-id-introduction-introduction-span&#34;&gt;&lt;span id=&#34;introduction&#34;&gt;Introduction&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;No matter how much we try to convince people that Perl is a multi-purpose programming language, we&amp;rsquo;d be deluding ourselves if we didn&amp;rsquo;t admit that the majority of programmers first come into contact with Perl through their experience with CGI programs. People have a small Web site and one day they decide that they need a guest book, a form mail script or a hit counter. Because these people aren&amp;rsquo;t programmers, they go out onto the Web to see what pre-written scripts they can find.&lt;/p&gt;

&lt;p&gt;And there are plenty to choose from. Try searching on ``CGI scripts&amp;rdquo; at Google. I received about 2 million hits. The first two were those well-known sites - Matt&amp;rsquo;s Script Archive and the CGI Resource Index. Our Web site owner will visit one of these sites, find the required scripts and install them on his site. What could be simpler? See, the Web &lt;em&gt;is&lt;/em&gt; as easy as people make it out to be.&lt;/p&gt;

&lt;p&gt;In this article, I&amp;rsquo;ll take a closer look at this scenario and show that all is not as rosy as I&amp;rsquo;ve portrayed it above.&lt;/p&gt;

&lt;h3 id=&#34;span-id-cgi-script-quality-cgi-script-quality-span&#34;&gt;&lt;span id=&#34;cgi script quality&#34;&gt;CGI Script Quality&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;An important factor that Google takes into account when displaying search results is the number of links to a given site. Google assumes that if there are a large number of links to a given Web page, then it must be a well-known page and that Google&amp;rsquo;s visitors will want to visit that site first.&lt;/p&gt;

&lt;p&gt;Notice that I said ``well-known&amp;rdquo; in that previous paragraph. Not ``useful&amp;rdquo; or ``valuable.&amp;rdquo; Think about this for a second. The types of people that I described in the introduction are not programmers. They certainly aren&amp;rsquo;t Perl programmers. Therefore, they are in no position to make value judgments on the Perl code that they download from the Internet.&lt;/p&gt;

&lt;p&gt;This means that the ``most popular&amp;rdquo; site becomes a self-fulfilling prophecy. The best known site is listed first on the search engines. More people download scripts from that site, assuming that the most popular site must have the highest quality scripts and that the popular sites end up becoming more popular.&lt;/p&gt;

&lt;p&gt;At no point does any kind of quality control enter into the process.&lt;/p&gt;

&lt;p&gt;OK, so that&amp;rsquo;s not strictly true. If the scripts from a particular site just didn&amp;rsquo;t work at all, then word would soon get out and that site&amp;rsquo;s scripts would become unpopular. But what if the problems were more subtle and didn&amp;rsquo;t manifest themselves on all sites. Here is a list of some potential problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not checking the results of an &lt;code&gt;open&lt;/code&gt; call. This will work fine if the expected file exists and has the right permissions. But what happens when the file doesn&amp;rsquo;t exist? Or it exists but the CGI process doesn&amp;rsquo;t have permissions to read from it or write to it?&lt;/li&gt;
&lt;li&gt;Bad CGI parameter parsing code. CGI parameter parsing is one of those things that is easy to do badly and hard to do well. It&amp;rsquo;s simple enough to write a parser function that handles most cases, but does it handle both GET and POST requests? What about keys with multiple associated values? And does it process file uploads correctly?&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Lack of security. Installing a CGI program allows anyone with an Internet connection to run a program on your server. That&amp;rsquo;s quite a scary thing to allow. You&amp;rsquo;d better be well aware of the security implications. Of course, if people only ever run the script from your HTML form, then everything will probably be fine, but a cracker won&amp;rsquo;t do that. He&amp;rsquo;ll fire ``interesting&amp;rdquo; sets of parameters at your script in an attempt to find its weaknesses. Suddenly a form mail script is being used to send copies of vital system files to the cracker.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also worth bearing in mind that because these scripts are available on the Web, crackers can easily get the source code. They can then work out any insecurities in the scripts and exploit them. Recently, a friend&amp;rsquo;s Web site came under attack from crackers and amongst the traces left in the access log were a large number of calls to well-known CGI scripts.&lt;/p&gt;

&lt;p&gt;For this reason, it is even more important that you are careful about security when writing CGI scripts that are intended to be used by novice Webmasters.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The fact is, unfortunately, that these kinds of problems are commonplace in the scripts that you can download from many popular CGI script archives. That&amp;rsquo;s not to say that the authors of these scripts are deliberately trying to give crackers access to your servers. It&amp;rsquo;s simply evidence that Perl has moved on a great deal since the introduction of Perl 5 in 1994 and many of the CGI script authors haven&amp;rsquo;t kept their scripts up to date with current practices. In other cases, the authors know only too well how out of date their scripts are and have produced newer, improved versions, but other people are still distributing the older versions.&lt;/p&gt;

&lt;h3 id=&#34;span-id-setting-a-good-example-setting-a-good-example-span&#34;&gt;&lt;span id=&#34;setting a good example&#34;&gt;Setting a Good Example&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Although the people who are downloading these scripts aren&amp;rsquo;t usually programmers, there often comes a time when they want to start changing the way a program works and perhaps even writing their own CGI programs. When this time comes, they will go to the scripts they already have for examples of how to write them. If the original script contained bad programming practices, then these will be copied in the new scripts. This is the way that many bad programming practices have become so common among Perl scripts. I, therefore, think that it&amp;rsquo;s a good idea for any publicly distributed programs to follow best programming practices as much as possible.&lt;/p&gt;

&lt;h3 id=&#34;span-id-script-quality-a-checklist-script-quality-a-checklist-span&#34;&gt;&lt;span id=&#34;script quality  a checklist&#34;&gt;Script Quality - A Checklist&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;So now we have an obvious problem. I said before that the people who are downloading and installing these scripts aren&amp;rsquo;t qualified to make judgments on the quality of the code. Given that there are some problematic scripts out there, how are they supposed to know whether they should be using a particular script that they find on the Web?&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a difficult question to answer, but there are some clues that you can look for that give a idea of how well-written a script is. Here&amp;rsquo;s a brief checklist:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Does the script use &lt;code&gt;-w&lt;/code&gt; and &lt;code&gt;use strict&lt;/code&gt;?&lt;/strong&gt; The vast majority of Perl experts recommend using these tools when writing Perl programs of any level of complexity. They make any Perl program more robust. Anyone distributing Perl programs without them probably doesn&amp;rsquo;t know as much Perl as they think they do.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Does the script use Perl&amp;rsquo;s taint mode?&lt;/strong&gt; Accepting external data from a Web browser is a dangerous business. You can never be sure what you&amp;rsquo;ll get. If you add &lt;code&gt;-T&lt;/code&gt; to a program&amp;rsquo;s shebang line, then Perl goes into taint mode. In this mode Perl distrusts any data that it gets from external sources. You need to explicitly check this data before using it. Using &lt;code&gt;-T&lt;/code&gt; is a sign that the author is at least thinking about CGI security issues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Does the script use CGI.pm?&lt;/strong&gt; Since Perl 5.004, CGI.pm has been a part of the standard Perl distribution. This module contains a number of functions for handling various parts of the CGI protocol. The most important one is probably &lt;code&gt;param&lt;/code&gt;, which deals with the parsing of the query string to extract the CGI parameters. Many CGI scripts write their own CGI parameter parsing routine that is missing features or has bugs. The one in CGI.pm has been well-tested over many years in thousands of scripts - why attempt to reinvent it?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How often is the script updated?&lt;/strong&gt; One reason for a script not to use CGI.pm might be that it hasn&amp;rsquo;t been updated since the module was added to the Perl distribution. This is generally a bad sign. You should look for scripts that are kept up to date. If there hasn&amp;rsquo;t been been a new version of the script for several years, then you should probably avoid it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How good is the support?&lt;/strong&gt; Any program is of limited use if it&amp;rsquo;s unsupported. How do you get support for the program? Is there an e-mail address for the author? Or is there a support mailing list? Try dropping an e-mail to either the author or the mailing list and see how quickly you get a response.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, these rules will have exceptions, but if a script scores badly on most of them, then you might have second thoughts on whether you should be using the script.&lt;/p&gt;

&lt;h3 id=&#34;span-id-nms-a-new-cgi-program-archive-nms-a-new-cgi-program-archive-span&#34;&gt;&lt;span id=&#34;nms  a new cgi program archive&#34;&gt;&lt;em&gt;nms&lt;/em&gt; - A New CGI Program Archive&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Having spent most of this article being quite negative about existing CGI program archives, let&amp;rsquo;s now get a bit more positive. In the summer of 2001, a group of London Perl Mongers started to wonder what would be involved in writing a set of new CGI programs that could act as replacements for the ones in common use. After some discussion, the &lt;em&gt;nms&lt;/em&gt; project was born. The name &lt;em&gt;nms&lt;/em&gt; originally stood for a disparaging remark about one of the existing archives, but we decided that we didn&amp;rsquo;t want the kind of negativity in the name. By that time, however, the abbreviated name was in common usage so we decided to keep it - but it no longer stands for anything.&lt;/p&gt;

&lt;p&gt;The objectives for &lt;em&gt;nms&lt;/em&gt; were quite simple. We wanted to provide a set of CGI programs which fulfilled the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As easy (or easier) to use as existing CGI scripts.&lt;/li&gt;
&lt;li&gt;Use best programming practices&lt;/li&gt;
&lt;li&gt;Secure&lt;/li&gt;
&lt;li&gt;Bug-free (or, at least, well supported)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We decided that we would base our programs on the ones found in Matt&amp;rsquo;s Script Archive. This wasn&amp;rsquo;t because Matt Wright&amp;rsquo;s scripts were the worst out there, but simply that they were the most commonly used. We made a rule that our scripts would be drop-in replacements for Matt&amp;rsquo;s scripts. That meant that anyone who had existing data from using one of Matt&amp;rsquo;s scripts would be able to take our replacement and simply put it in place of the old script. This, of course, meant that we had to become familiar with the inner workings of Matt&amp;rsquo;s scripts. This actually turned out not to be a hard as I expected. The majority of Matt&amp;rsquo;s scripts are simple. It&amp;rsquo;s only really formmail, guestbook and wwwboard that are complex.&lt;/p&gt;

&lt;p&gt;Sometimes our objectives contradicted one anther. We decided early on, that part of making the scripts as easy to use as possible meant not relying on any CPAN modules. We forced ourselves to only use only modules that came as part of the standard Perl distribution. The reason for this is that our target audience probably doesn&amp;rsquo;t know anything about CPAN modules and wouldn&amp;rsquo;t find it easy to install them. A large part of our audience isprobably operating a Web site on a hosted server where they may not be able to install new modules and in many cases won&amp;rsquo;t have telnet access to their server. We felt that asking them to install extra modules would make them far less likely to use our programs. This, of course, goes against our objective of using best programming practices as in many cases there is a CPAN module that implements functionality that we use. The best example of this is in formmail where we resort to sending e-mails by talking directly to &lt;code&gt;sendmail&lt;/code&gt; rather than using one of the e-mail modules. In these cases, we decided that getting people to use the scripts (by not relying on CPAN) was more important to us than following best practices.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;nms&lt;/em&gt; is a SourceForge project. You can get the latest released versions of the scripts from &lt;a href=&#34;[http://nms-cgi.sourceforge.net&#34;&gt;http://nms-cgi.sourceforge.net&lt;/a&gt; or, if you&amp;rsquo;re feeling braver, then you can get the leading edge versions from CVS at the project page at &lt;a href=&#34;http://sourceforge.net/projects/nms-cgi/&#34;&gt;http://sourceforge.net/projects/nms-cgi/&lt;/a&gt;. Both of those pages also have links to the &lt;em&gt;nms&lt;/em&gt; mailing lists. We have two lists, one for developers and one for support questions. There is also a FAQ that will hopefully answer any further questions that you have about the project.&lt;/p&gt;

&lt;p&gt;Here is a list of the scripts available from &lt;em&gt;nms&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Countdown&lt;/strong&gt; Count down the time to a certain date&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Free For All Links&lt;/strong&gt; A simple Web link database&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Formmail&lt;/strong&gt; Send e-mails from Web forms&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Guestbook&lt;/strong&gt; A simple guest book script&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Random Image&lt;/strong&gt; Display a random image&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Random Links&lt;/strong&gt; Display a link chosen randomly from a list&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Random Text&lt;/strong&gt; Display a randomly chosen piece of text&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simple Search&lt;/strong&gt; Simple Web site search engine&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSI Random Image&lt;/strong&gt; Display a random image using SSI&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Text Clock&lt;/strong&gt; Display the time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Text Counter&lt;/strong&gt; Text counter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I should point out that this is very much a ``work in progress.&amp;rdquo; While we&amp;rsquo;re happy with the way that they work, we can always use more people looking at the code. The one advantage that Matt&amp;rsquo;s scripts have over ours is that they&amp;rsquo;ve had many years of testing on a large number of Web sites.&lt;/p&gt;

&lt;h3 id=&#34;span-id-a-plea-for-help-a-plea-for-help-span&#34;&gt;&lt;span id=&#34;a plea for help&#34;&gt;A Plea for Help&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;So now we have a source of well-written CGI programs that we can point users to. What more needs to be done? Well, the whole point of writing this article was to ask more people to help. There&amp;rsquo;s always more work to do :-)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Peer review&lt;/strong&gt;. We think we&amp;rsquo;ve done a pretty good job on the scripts, but we&amp;rsquo;re not interested in resting on our laurels. The more people that look at the scripts the more likely we&amp;rsquo;ll catch bugs and insecurities. Please download the scripts and take a look at them. Pass any bugs on to the developers mailing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;. We test the scripts on as many platforms with as many different configurations as we can, but we&amp;rsquo;ll always miss one or two. Please try to install the scripts on your systems and let us know about any problems you have.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;. Our documentation isn&amp;rsquo;t any worse than the documentation for the existing archives, but we think it could be much better. If you&amp;rsquo;d like to help out with this, then please get in touch with us.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advocacy&lt;/strong&gt;. This is the most important one. Please tell everyone that you know about &lt;em&gt;nms&lt;/em&gt;. Everywhere that you see people using other CGI scripts, please explain to them the potential problems and show them where to get the &lt;em&gt;nms&lt;/em&gt; scripts. Having written these scripts, we feel it&amp;rsquo;s important that they get as wide exposure as possible. If you have any ideas for promoting &lt;em&gt;nms&lt;/em&gt;, then please let us know.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While I don&amp;rsquo;t pretend for a minute that these are the only well-written and secure CGI programs available, I do think that the Perl community needs a well-known and trusted set of CGI programs that we can point people to. With your help, that&amp;rsquo;s what I want &lt;em&gt;nms&lt;/em&gt; to become.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

