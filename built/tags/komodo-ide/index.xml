<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Komodo Ide on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/komodo-ide/</link>
    <description>Recent content in Komodo Ide on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Oct 2002 00:00:00 -0800</lastBuildDate>
    <atom:link href="/tags/komodo-ide/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Review of Komodo</title>
      <link>http://localhost:1313/pub/2002/10/09/komodo.html/</link>
      <pubDate>Wed, 09 Oct 2002 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2002/10/09/komodo.html/</guid>
      <description>&lt;p&gt;Every time I get a new copy of &lt;a href=&#34;http://www.activestate.com/&#34;&gt;ActiveState&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;http://www.activestate.com/Products/Komodo/&#34;&gt;Komodo IDE&lt;/a&gt;, I do a review that invariably ends &amp;ldquo;this would be the perfect IDE for me if I were the sort of person who used IDEs&amp;rdquo;. And every time I get the next release, I get closer to being persuaded I should be using IDEs. With Komodo 2.0, ActiveState is getting very, very close to persuading me - but it&amp;rsquo;s not there yet. Let&amp;rsquo;s see what it got right and got wrong this time.&lt;/p&gt;

&lt;p&gt;From a Perl point of view, the syntax highlighting and background syntax checking has been greatly improved. Now, every time someone claims to do decent Perl syntax highlighting, there&amp;rsquo;ll be at least one annoying pedant who crawls out of the woodwork with some pathological case and the oft-quoted &amp;ldquo;only perl can parse Perl!&amp;rdquo;. Well, so what? For something that&amp;rsquo;s impossible, Komodo does a surprisingly fine job. Combining the background syntax checking with &lt;code&gt;use strict&lt;/code&gt; catches a reassuring amount of coding errors almost instantly.&lt;/p&gt;

&lt;p&gt;My old favourite, Rx, is still there, and is still a great way to visualize what&amp;rsquo;s going on in complicated regular expressions. One problem I found was that the Rx window changed size awkwardly while stepping through the regex match - but maybe this is a good time to mention that I&amp;rsquo;m working from a beta version of Komodo 2.0, and many of my gripes may be fixed by the time 2.0 is released for real.&lt;/p&gt;

&lt;p&gt;There are a bunch of little things too that one should come to expect from this caliber of IDE. Integration with CVS was touted as being a feature, but I couldn&amp;rsquo;t find any mention of it, although the FTP &amp;ldquo;remote editing&amp;rdquo; feature works well; combined with the CGI features of Komodo, this could be a fantastic workstation for the Windows user deploying CGI files on a remote server.&lt;/p&gt;

&lt;p&gt;The Web services integration is a nice touch, especially with its automated installer, but it would benefit from some kind of progress indicator. Integration with the ASPN Cookbooks is a nice idea, but I don&amp;rsquo;t know how much use it would see in day-to-day coding. The &amp;ldquo;external debugger&amp;rdquo; feature sounds interesting, but I couldn&amp;rsquo;t find any documentation on it.&lt;/p&gt;

&lt;p&gt;If I had to point to something that really impressed me about Komodo 2.0, then it would be the toolbox; this is actually something that I&amp;rsquo;ve been looking for in my own development environment and could be the one feature that persuades me to use Komodo. The toolbox is, simply put, somewhere to collect stuff that might be useful during your development. That&amp;rsquo;s to say, snippets of code that you can drop into place, commands that you can execute, URLs to start a browser at, and so on. For example, you can highlight a function in Perl, and have a button in the toolbox run &lt;code&gt;perldoc -f&lt;/code&gt; on it. You can drag a piece of boilerplate code directly into your file. It&amp;rsquo;s just a nice, fast way of working, making the repeated things easy - precisely what a GUI should be doing. This is combined with a macro recording facility to make it easy for you to create your own toolbox items.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s worth remembering that Komodo is not just about Perl. Komodo&amp;rsquo;s XML mode is absolutely wonderful; it offers per-tag folding, tag completion on insertion, and XSLT debugging. Since I write all of my books in XML these days, I&amp;rsquo;m seriously considering using Komodo instead of jEdit and even emacs&amp;rsquo;s psgml mode for my writing work; the only slight snag is that Komodo&amp;rsquo;s tag insertion works by divining the acceptable XML tags from the structure of the documentation, instead of loading a DTD if one is explicitly supplied. However, perhaps this is unfair - Komodo doesn&amp;rsquo;t claim to be an XML editor, just an XSLT editor, and the fact that it makes quite a good XML editor is a surprising bonus.&lt;/p&gt;

&lt;p&gt;So why won&amp;rsquo;t I switch to using Komodo? Two reasons: First, it&amp;rsquo;s not out on my favorite OS, Apple&amp;rsquo;s OS X - although I&amp;rsquo;m told that a port is in progress. Unfortunately, when that happens, Komodo will be competing with Apple&amp;rsquo;s own Project Builder.&lt;/p&gt;

&lt;p&gt;Second, speed. If I&amp;rsquo;m going to be giving up vi and emacs, then I&amp;rsquo;m going to want something that can keep up with them in terms of speed and keyboard response times. Komodo, even running a fairly beefy box, was slowing down my coding. No amount of cool syntax highlighting is worth that.&lt;/p&gt;

&lt;p&gt;As with the last time I reviewed Komodo, I&amp;rsquo;d heartily recommend it for those who enjoy programming with IDEs, but reluctantly say that it&amp;rsquo;s not for me. But it&amp;rsquo;s very, very close.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

