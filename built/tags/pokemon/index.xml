<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pokemon on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/pokemon/</link>
    <description>Recent content in Pokemon on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jun 2018 22:03:55 +0000</lastBuildDate>
    <atom:link href="/tags/pokemon/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - May 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---may-2018/</link>
      <pubDate>Sun, 03 Jun 2018 22:03:55 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---may-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Access the AcousticBrainz API using &lt;a href=&#34;https://metacpan.org/pod/WebService::AcousticBrainz&#34;&gt;WebService::AcousticBrainz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add, modify and delete products from the Bing Merchant Center platform using &lt;a href=&#34;https://metacpan.org/pod/Bing::ContentAPI&#34;&gt;Bing::ContentAPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Qgoda&#34;&gt;Qgoda&lt;/a&gt; is a new static site generator with a fancy &lt;a href=&#34;http://www.qgoda.net/&#34;&gt;website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Pokemon&#34;&gt;WebService::Pokemon&lt;/a&gt; is another interface for the Pok√©mon API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::RESTCountries&#34;&gt;WebService::RESTCountries&lt;/a&gt; provides a Perly interface to the REST Countries &lt;a href=&#34;https://restcountries.eu&#34;&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Swapi&#34;&gt;WebService::Swapi&lt;/a&gt; interfaces with the &lt;a href=&#34;https://swapi.co&#34;&gt;Star Wars API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Docker::Registry&#34;&gt;Docker::Registry&lt;/a&gt; is a client for talking to Docker Registries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IO::K8s&#34;&gt;IO::K8s&lt;/a&gt; provides objects representing things in the Kubernetes API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Kubectl::CLIWrapper&#34;&gt;Kubectl::CLIWrapper&lt;/a&gt; Module to use the Kubernetes API via the kubectl CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add support for window functions to DBIx::Class using &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Helper::ResultSet::WindowFunctions&#34;&gt;DBIx::Class::Helper::ResultSet::WindowFunctions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Path::Class::Tiny&#34;&gt;Path::Class::Tiny&lt;/a&gt; has the interface of Path::Class but uses Path::Tiny under the hood&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::UNIVERSAL::can::t&#34;&gt;Acme::UNIVERSAL::can::t&lt;/a&gt; is a brilliant module: use it to discover which methods an object &lt;em&gt;can&amp;rsquo;t&lt;/em&gt; do :-)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Prove::Plugin::TermTable&#34;&gt;App::Prove::Plugin::TermTable&lt;/a&gt; sets the size of the console for Term::Table (useful for Test2 based tests)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The beginning of a Perl universe&amp;rdquo; - &lt;a href=&#34;https://metacpan.org/pod/Dot&#34;&gt;Dot&lt;/a&gt; is a new object system for Perl&lt;/li&gt;
&lt;li&gt;Run code and optinally reverse it with &lt;a href=&#34;https://metacpan.org/pod/Eval::Reversible&#34;&gt;Eval::Reversible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JavaScript::V8::CommonJS&#34;&gt;JavaScript::V8::CommonJS&lt;/a&gt; provides module loading support to https://metacpan.org/pod/JavaScript::V8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test2::Tools::JSON::Pointer&#34;&gt;Test2::Tools::JSON::Pointer&lt;/a&gt; can compare parts of a JSON string to a data structure using JSON pointers&lt;/li&gt;
&lt;li&gt;Skip tests until a date is reached using &lt;a href=&#34;https://metacpan.org/pod/Test2::Tools::SkipUntil&#34;&gt;Test2::Tools::SkipUntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Types::Bool&#34;&gt;Types::Bool&lt;/a&gt; provides boolean object types for Perl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/RPi::RTC::DS3231&#34;&gt;RPi::RTC::DS3231&lt;/a&gt; is an interface to the DS3231 Real-Time Clock IC over I2C&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Sandy&#34;&gt;App::Sandy&lt;/a&gt; is a bioinformatic tool to generate single/paired ends for a fasta file&lt;/li&gt;
&lt;li&gt;Store and check password using Argon2 with &lt;a href=&#34;https://metacpan.org/pod/Authen::Passphrase::Argon2&#34;&gt;Authen::Passphrase::Argon2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Manage a hierarchy of Data::MuForm classes with &lt;a href=&#34;https://metacpan.org/pod/Data::MuFormX::Registry&#34;&gt;Data::MuFormX::Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::SAML&#34;&gt;Mojo::SAML&lt;/a&gt; is a SAML2 toolkit using the Mojo stack&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Stor&#34;&gt;Stor&lt;/a&gt; is file storage retrieval API implemented over HTTP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/TaskPipe&#34;&gt;TaskPipe&lt;/a&gt; is a YAML-driven framework for managing scrapers&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - November 2017</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---november-2017/</link>
      <pubDate>Fri, 22 Dec 2017 16:57:02 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---november-2017/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Compute Adler32 digests at the command line with &lt;a href=&#34;https://metacpan.org/pod/App::adler32&#34;&gt;App::adler32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get various string escaping/unescaping utilities using &lt;a href=&#34;https://metacpan.org/pod/App::EscapeUtils&#34;&gt;App::EscapeUtils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A simple tool for maintaining a shared group secret with &lt;a href=&#34;https://metacpan.org/pod/App::GroupSecret&#34;&gt;App::GroupSecret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YouTube has changed their API but you can manage your Watch Later videos with &lt;a href=&#34;https://metacpan.org/pod/App::WatchLater&#34;&gt;App::WatchLater&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::weavedoc&#34;&gt;App::weavedoc&lt;/a&gt; provides a &lt;code&gt;perldoc&lt;/code&gt; for Pod weaver&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Async::Beanstalk&#34;&gt;Net::Async::Beanstalk&lt;/a&gt; is a non-blocking beanstalk client&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::DeathByCaptcha&#34;&gt;WebService::DeathByCaptcha&lt;/a&gt; provides a Perly interface for the DeathByCaptcha API&lt;/li&gt;
&lt;li&gt;Get a simple mail.ru client with &lt;a href=&#34;https://metacpan.org/pod/Mailru::Cloud&#34;&gt;Mailru::Cloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::Globstar&#34;&gt;File::Globstar&lt;/a&gt; provides globstar (**) utils&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IPC::Pleather&#34;&gt;IPC::Pleather&lt;/a&gt; - &amp;ldquo;C has Cilk, Perl has Pleather&amp;rdquo;, love it!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Martian&#34;&gt;Martian&lt;/a&gt; extends Starman with max-memory usage cap&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooseX::ConfigCascade&#34;&gt;MooseX::ConfigCascade&lt;/a&gt; is another cascading-style config&lt;/li&gt;
&lt;li&gt;Like Capture::Tiny but with more options, &lt;a href=&#34;https://metacpan.org/pod/POSIX::Run::Capture&#34;&gt;POSIX::Run::Capture&lt;/a&gt; will run a command and capture its output&lt;/li&gt;
&lt;li&gt;Identify Perl releases and download the most recent via FTP using &lt;a href=&#34;https://metacpan.org/pod/Perl::Download::FTP&#34;&gt;Perl::Download::FTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parse files with continuation lines with &lt;a href=&#34;https://metacpan.org/pod/Text::Continuation::Parser&#34;&gt;Text::Continuation::Parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pack your Perl applications for Windows with &lt;a href=&#34;https://metacpan.org/pod/Win32::Packer&#34;&gt;Win32::Packer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Win32::Shortkeys::Kbh&#34;&gt;Win32::Shortkeys::Kbh&lt;/a&gt; is a module for hooking the keyboard on Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Pokemon::Go&#34;&gt;Data::Pokemon::Go&lt;/a&gt; aims to provide data for every Pokemon in Pokemon Go, the author is calling for contributors&lt;/li&gt;
&lt;li&gt;Represent a financial asset with &lt;a href=&#34;https://metacpan.org/pod/Finance::Underlying&#34;&gt;Finance::Underlying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IO::ReadHandle::Chain&#34;&gt;IO::ReadHandle::Chain&lt;/a&gt; can conveniently chain IO of multiple sources through a single filehandle&lt;/li&gt;
&lt;li&gt;Find the size of JPEG images with &lt;a href=&#34;https://metacpan.org/pod/Image::JPEG::Size&#34;&gt;Image::JPEG::Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Translate the latest JSON-Schema (v06) into Perl code using &lt;a href=&#34;https://metacpan.org/pod/JSV::Compiler&#34;&gt;JSV::Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Manipulate LRC karaoke timed lyrics files using &lt;a href=&#34;https://metacpan.org/pod/Music::Lyrics::LRC&#34;&gt;Music::Lyrics::LRC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read &lt;code&gt;.slob&lt;/code&gt; dictionaries (for Aard 2) using &lt;a href=&#34;https://metacpan.org/pod/Slob&#34;&gt;Slob&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Generate XML from simple Perl data structures with &lt;a href=&#34;https://metacpan.org/pod/XML::FromPerl&#34;&gt;XML::FromPerl&lt;/a&gt; - sounds a lot like XML::Simple, but uses libxml2&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Asynchronously run code concurrently in a pool of perl processes using &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::ProcessPool&#34;&gt;AnyEvent::ProcessPool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get a useful counter that signals when it reaches 0 with &lt;a href=&#34;https://metacpan.org/pod/Coro::Countdown&#34;&gt;Coro::Countdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Doit&#34;&gt;Doit&lt;/a&gt; is a framework for Perl scripting&lt;/li&gt;
&lt;li&gt;Moose has it&amp;rsquo;s clones, and now Mojo::Base has &lt;a href=&#34;https://metacpan.org/pod/Jojo::Base&#34;&gt;Jojo::Base&lt;/a&gt;, which implements a lexical &lt;code&gt;has&lt;/code&gt;. Naturally there is &lt;a href=&#34;https://metacpan.org/pod/Jojo::Role&#34;&gt;Jojo::Role&lt;/a&gt; too&lt;/li&gt;
&lt;li&gt;Create Moo classes with IO::Async event handlers using &lt;a href=&#34;https://metacpan.org/pod/MooX::EventHandler&#34;&gt;MooX::EventHandler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Sort::Naturally::ICU&#34;&gt;Sort::Naturally::ICU&lt;/a&gt; implements a fast, natural sort&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate AWS S3 signed URLs using the aptly-named &lt;a href=&#34;https://metacpan.org/pod/Amazon::S3::SignedURLGenerator&#34;&gt;Amazon::S3::SignedURLGenerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Authen::Krb5&#34;&gt;Authen::Krb5&lt;/a&gt; provides XS bindings for Kerberos 5, the secure network protocol&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Neovim::RPC::Plugin::Taskwarrior&#34;&gt;Neovim::RPC::Plugin::Taskwarrior&lt;/a&gt; provides a Neovim UI for taskwarrior&lt;/li&gt;
&lt;li&gt;Get &lt;code&gt;printf&lt;/code&gt; style functions that handle multibyte characters using &lt;a href=&#34;https://metacpan.org/pod/Text::VisualPrintf&#34;&gt;Text::VisualPrintf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use the Boutros Lab valection C library from Perl with &lt;a href=&#34;https://metacpan.org/pod/Bio::Sampling::Valection&#34;&gt;Bio::Sampling::Valection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Track events and calculate a rolling average of time &lt;a href=&#34;https://metacpan.org/pod/Time::Spent&#34;&gt;Time::Spent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Test if a cpanfile lists every used module with &lt;a href=&#34;https://metacpan.org/pod/Test::CPANfile&#34;&gt;Test::CPANfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Class::WithStrictPlan&#34;&gt;Test::Class::WithStrictPlan&lt;/a&gt; makes sure Test::Class executes the declared number of tests&lt;/li&gt;
&lt;li&gt;Declare subtests using subroutine attributes with &lt;a href=&#34;https://metacpan.org/pod/Test::Subtest::Attribute&#34;&gt;Test::Subtest::Attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test that your XS files are problem-free with XS::Check with &lt;a href=&#34;https://metacpan.org/pod/Test::XS::Check&#34;&gt;Test::XS::Check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::HTML::Recursive::DeprecatedTags&#34;&gt;Test::HTML::Recursive::DeprecatedTags&lt;/a&gt; can check HTML files for deprecated tags&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Generate pretty HTML from Perl code in a Dancer2 app using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::SyntaxHighlight::Perl&#34;&gt;Dancer2::Plugin::SyntaxHighlight::Perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Ion&#34;&gt;Ion&lt;/a&gt; aims to be a &amp;ldquo;clear and concise API for writing TCP servers and clients&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Collection::Role::UtilsBy&#34;&gt;Mojo::Collection::Role::UtilsBy&lt;/a&gt; provides List::UtilsBy methods for Mojo::Collection objects&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

