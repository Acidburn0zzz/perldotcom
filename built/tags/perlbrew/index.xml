<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Perlbrew on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/perlbrew/</link>
    <description>Recent content in Perlbrew on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Oct 2014 12:39:52 +0000</lastBuildDate>
    <atom:link href="/tags/perlbrew/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hello berrybrew, the Strawberry Perl version manager</title>
      <link>http://localhost:1313/article/119/2014/10/10/Hello-berrybrew--the-Strawberry-Perl-version-manager/</link>
      <pubDate>Fri, 10 Oct 2014 12:39:52 +0000</pubDate>
      
      <guid>http://localhost:1313/article/119/2014/10/10/Hello-berrybrew--the-Strawberry-Perl-version-manager/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://perlbrew.pl/&#34;&gt;Perlbrew&lt;/a&gt; and [plenv]() are tools for managing local Perl installations. They&amp;rsquo;re useful as they let you install and use multiple versions of Perl without administrator privileges. I have a special appreciation for them as I once tried to upgrade my mac system Perl and instead wrecked it and had to reinstall OSX.&lt;/p&gt;

&lt;p&gt;When I&amp;rsquo;m on Windows I use Strawberry Perl, so I wrote &lt;a href=&#34;https://github.com/sillymoose/berrybrew&#34;&gt;berrybrew&lt;/a&gt; to help manage Perl on Windows. It&amp;rsquo;s similar to Perlbrew and plenv; it will download, install and manage multiple versions of Strawberry Perl for you, no administrator privileges required.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;berrybrew is written in C#. If you have git you can install berrybrew by cloning the GitHub &lt;a href=&#34;https://github.com/sillymoose/berrybrew&#34;&gt;repo&lt;/a&gt; and either using the pre-compiled binary, or minting your own with Mono. The pre-compiled binary is &lt;code&gt;bin/berrybrew.exe&lt;/code&gt; and should work out of the box on Windows 7 and 8 (it might work on Windows XP if you have .Net framework 2 or higher installed).&lt;/p&gt;

&lt;p&gt;To download the project with git and compile it with &lt;a href=&#34;http://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; type the following commands at the terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; git clone https:&lt;span style=&#34;color:#e6db74&#34;&gt;//gi&lt;/span&gt;thub&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com&lt;span style=&#34;color:#e6db74&#34;&gt;/sillymoose/&lt;/span&gt;berrybrew
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mcs src&lt;span style=&#34;color:#e6db74&#34;&gt;/berrybrew.cs -lib:lib -r:ICSharpCode.SharpZipLib.dll -out:bin/&lt;/span&gt;berrybrew&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will output a fresh binary in the &lt;code&gt;bin&lt;/code&gt; directory.&lt;/p&gt;

&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;available&lt;/code&gt; command lists available Strawberry Perls and whether they&amp;rsquo;re installed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; berrybrew available

The following Strawberry Perls are available:

            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.20.1_64&lt;/span&gt; [installed]
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.20.1_32&lt;/span&gt; [installed]
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.18.4_64&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.18.4_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3_64&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.14.4_64&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.14.4_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.12.3_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1_32&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output shows that I have both versions of Perl 5.20.1 installed. I can install another version using the &lt;code&gt;install&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; berrybrew install &lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1_32&lt;/span&gt;
Downloading http:&lt;span style=&#34;color:#e6db74&#34;&gt;//s&lt;/span&gt;trawberryperl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com&lt;span style=&#34;color:#e6db74&#34;&gt;/download/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1.2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/strawberry-perl-5.10.1.2-portable.zip to C:\Users\dfarrell\AppData\Local\Temp\gp5d33yg.qjo/s&lt;/span&gt;trawberry&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pe
rl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1.2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;portable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
Confirming checksum &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
Extracting C:&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;Users&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;dfarrell&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;AppData&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;Local&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;Temp&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;gp5d33yg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;qjo&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;strawberry&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1.2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;portable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip

The following Strawberry Perls are available:

            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.20.1_64&lt;/span&gt; [installed]
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.20.1_32&lt;/span&gt; [installed]
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.18.4_64&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.18.4_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3_64&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.14.4_64&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.14.4_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.12.3_32&lt;/span&gt;
            &lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1_32&lt;/span&gt; [installed]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;berrybrew will download a temporary zip archive, confirm the checksums match, and extract the files to &lt;code&gt;C:\berrybrew&lt;/code&gt;. Finally I can use the newly installed Perl with the &lt;code&gt;switch&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; berrybrew switch &lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1_32&lt;/span&gt;
Switched to &lt;span style=&#34;color:#ae81ff&#34;&gt;5.10.1_32&lt;/span&gt;, start a &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; terminal to &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This updates my user &lt;code&gt;%PATH%&lt;/code&gt; environment variable to point at the new Perl binary. berrybrew will also warn if it finds another Perl binary in the system or user path (such as an ActiveState or vanilla Strawberry Perl). The system path can be problematic as Windows appends the user path to the system path which means it will search the system path first for any matching Perl binary and if it finds one, it will ignore the berrybrew binary. The system path also requires administrator privileges to update, which kind of goes against the spirit of berrybrew. One way to handle these would be to ask the user if they want to remove the other path, if they say yes, then berrybrew could prompt for administrator credentials, fire up another berrybrew process and remove them. For now it just warns the user and leaves the path variables untouched.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I plan to add a few more commands to berrybrew: &lt;code&gt;exec&lt;/code&gt; to run a Perl program against every installed Perl, &lt;code&gt;uninstall&lt;/code&gt; to remove a Perl and &lt;code&gt;config&lt;/code&gt; to manage berrybrew&amp;rsquo;s settings. Under the hood a feature I&amp;rsquo;d love to add but am not sure how, is to refresh the current shell&amp;rsquo;s environment variable block, so the user doesn&amp;rsquo;t have to start a new cmd.exe when switching to a new Perl version.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s early days but if you have any suggestions for new features or feedback drop me an email or fork the project on &lt;a href=&#34;https://github.com/sillymoose/berrybrew&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shazam! Use Image::Magick with Perlbrew in minutes</title>
      <link>http://localhost:1313/article/57/2014/1/1/Shazam--Use-Image--Magick-with-Perlbrew-in-minutes/</link>
      <pubDate>Wed, 01 Jan 2014 23:43:09 +0000</pubDate>
      
      <guid>http://localhost:1313/article/57/2014/1/1/Shazam--Use-Image--Magick-with-Perlbrew-in-minutes/</guid>
      <description>

&lt;p&gt;&lt;em&gt;The open source ImageMagick software provides amazing tools for creating and manipulating images in over 100 formats. Unfortunately, installing ImageMagick&amp;rsquo;s Perl module under Perlbrew can be a frustrating and time-consuming task. However it doesn&amp;rsquo;t have to be this way - with the method described below you can have the module installed in minutes, no root access required!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;update-07-01-2014&#34;&gt;&lt;em&gt;Update 07-01-2014&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Zaki (&lt;a href=&#34;https://twitter.com/zmughal&#34;&gt;@zhmughal&lt;/a&gt;) has worked up a sweet &lt;a href=&#34;https://gist.github.com/zmughal/8264712/raw/8831e421393143c5b48f22dcfa12eeda51c5cfbf/install-imagemagick-perl&#34;&gt;shell script&lt;/a&gt; to automate the installation process for you, so you can save the finger work for using ImageMagick with your next Perl program:)&lt;/p&gt;

&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll need to have Perlbrew and a local Perl installation via Perlbrew on Unix-based platform. This has been tested on Perl 5.16.3 but should work on any modern Perl version.&lt;/p&gt;

&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;

&lt;p&gt;Create a local directory: we will install ImageMagick here. Open up the terminal and enter the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;mkdir &lt;span style=&#34;color:#f92672&#34;&gt;~/&lt;/span&gt;local&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;installing-image-magick-don-t-use-cpan&#34;&gt;Installing Image::Magick - don&amp;rsquo;t use CPAN&lt;/h3&gt;

&lt;p&gt;Although the &lt;a href=&#34;https://metacpan.org/pod/Image::Magick&#34;&gt;Image::Magick&lt;/a&gt; module is available on CPAN, installing it via CPAN is usually a fruitless task as the process croaks on make. Instead download the whole &lt;a href=&#34;http://www.imagemagick.org/download/ImageMagick.tar.gz&#34;&gt;ImageMagick tarball&lt;/a&gt;. Once downloaded, navigate to the tarball&amp;rsquo;s parent directory using the terminal and un-tar the archive with the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;tar xvfz ImageMagick&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now change into the new directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;cd ImageMagick&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.8.8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enter the following command, replacing [username], [path to CORE] and [path to Perl bin] with your system&amp;rsquo;s details. Remove the &amp;ldquo;&amp;ndash;without-threads&amp;rdquo; text if your Perl was compiled with threads (here is how to check).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;LDFLAGS&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;L&lt;span style=&#34;color:#e6db74&#34;&gt;/home/&lt;/span&gt;[username]&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;[path to CORE] &lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/configure --prefix /&lt;/span&gt;home&lt;span style=&#34;color:#e6db74&#34;&gt;/[username]/&lt;/span&gt;local &lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/home/&lt;/span&gt;[username]&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;[path to Perl bin] &lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shared &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;without&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;threads&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a completed example for my system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;LDFLAGS&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;L&lt;span style=&#34;color:#e6db74&#34;&gt;/home/si&lt;/span&gt;llymoose&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/lib/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/x86_64-linux/&lt;/span&gt;CORE &lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/configure --prefix /&lt;/span&gt;home&lt;span style=&#34;color:#e6db74&#34;&gt;/sillymoose/&lt;/span&gt;local &lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/home/si&lt;/span&gt;llymoose&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;perl &lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shared &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;without&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;threads&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Running this command should cause ImageMagick to run a series of configuration checks, at the end of which it will print a configuration summary, which should look something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;ImageMagick is configured as follows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Please verify that this configuration
matches your expectations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;

Host system type: x86_64&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;unknown&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;linux&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gnu
Build system type: x86_64&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;unknown&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;linux&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gnu

                  Option                        Value
&lt;span style=&#34;color:#f92672&#34;&gt;-------------------------------------------------------------------------------&lt;/span&gt;
Shared libraries  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shared&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
Static libraries  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;static&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
Module support    &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;     no
GNU ld            &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gnu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ld&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes     yes
Quantum depth     &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;quantum&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;depth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;
High Dynamic Range Imagery
                  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;hdri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;      no

Delegate Configuration:
BZLIB             &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;bzlib&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes      yes
Autotrace         &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;autotrace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;       no
Dejavu fonts      &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dejavu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;font&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;default    &lt;span style=&#34;color:#e6db74&#34;&gt;/usr/s&lt;/span&gt;hare&lt;span style=&#34;color:#e6db74&#34;&gt;/fonts/&lt;/span&gt;dejavu&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
DJVU              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;djvu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
DPS               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dps&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
FFTW              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fftw&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
FlashPIX          &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fpx&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
FontConfig        &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fontconfig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes     &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
FreeType          &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;freetype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
GhostPCL          None              pcl6 (unknown)
GhostXPS          None              gxps (unknown)
Ghostscript       None              gs (&lt;span style=&#34;color:#ae81ff&#34;&gt;9.10&lt;/span&gt;)
Ghostscript fonts &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gs&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;font&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;default    &lt;span style=&#34;color:#e6db74&#34;&gt;/usr/s&lt;/span&gt;hare&lt;span style=&#34;color:#e6db74&#34;&gt;/fonts/&lt;/span&gt;default&lt;span style=&#34;color:#e6db74&#34;&gt;/Type1/&lt;/span&gt;
Ghostscript lib   &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gslib&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;       no
Graphviz          &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;gvc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;     
JBIG              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;jbig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
JPEG v1           &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;jpeg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
JPEG&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;jp2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        yes
LCMS v1           &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;lcms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
LCMS v2           &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;lcms2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes      &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
LQR               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;lqr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
LTDL              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ltdl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
LZMA              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;lzma&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
Magick&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;magick&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;plus&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;plus&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes   &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt; (failed tests)
MUPDF             &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mupdf&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;       no
OpenEXR           &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;openexr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
PANGO             &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;pango&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes      &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
PERL              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/home/si&lt;/span&gt;llymoose&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;perl        &lt;span style=&#34;color:#e6db74&#34;&gt;/home/si&lt;/span&gt;llymoose&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;perl
PNG               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;png&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        yes
RSVG              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rsvg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;        no
TIFF              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tiff&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes
WEBP              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;webp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;
Windows fonts     &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;windows&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;font&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;dir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  none
WMF               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wmf&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;     no
X11               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;         yes
XML               &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;xml&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes        yes
ZLIB              &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;with&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;zlib&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes       yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check that the image file formats you expect to be working with are showing as &amp;ldquo;yes&amp;rdquo;. If any are showing as &amp;ldquo;no&amp;rdquo; that you require, you&amp;rsquo;ll need to install the appropriate C library (e.g. libpng for PNG files) and re-run the previous command.&lt;/p&gt;

&lt;p&gt;To install ImageMagick and the Image::Magick Perl module, run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;confirm-installation&#34;&gt;Confirm Installation&lt;/h3&gt;

&lt;p&gt;Confirming that the Image::Magick module has installed is not quite straightforward either. With version Image Magick 6.8.8, the $VERSION variable is stored in the super class Image::Magick::Q16. Hence you&amp;rsquo;ll need to type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;perl &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;MImage::Magick::Q16&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which should yield:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;Image::Magick::Q16 version &lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt; required&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;this is only version &lt;span style=&#34;color:#ae81ff&#34;&gt;6.88&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;sources&#34;&gt;Sources&lt;/h3&gt;

&lt;p&gt;Thanks to Jason Galea - his invaluable &lt;a href=&#34;https://github.com/lecstor/DevNotes/wiki/Image-Magick-with-Perlbrew&#34;&gt;GitHub notes&lt;/a&gt; formed the basis of this solution.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run local Perl as root</title>
      <link>http://localhost:1313/article/36/2013/8/10/Run-local-Perl-as-root/</link>
      <pubDate>Sat, 10 Aug 2013 14:33:18 +0000</pubDate>
      
      <guid>http://localhost:1313/article/36/2013/8/10/Run-local-Perl-as-root/</guid>
      <description>&lt;p&gt;This is a simple trick for conveniently running local Perl as a root user on UNIX-based systems.&lt;/p&gt;

&lt;p&gt;Occasionally it&amp;rsquo;s necessary to run locally-installed Perl as root. However at the command line if you type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;sudo perl program&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default the Perl that is executed is the system Perl binary. This can be problematic as the System Perl may not have the modules required, or even be the correct version of Perl that you need to run. An easy fix for this is to use the which command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;sudo $&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt;which perl) program&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By nesting which between a dollar sign parentheses, the terminal will resolve the command first, which returns a string to the local Perl binary. Sudo then operates on this binary instead of the system Perl binary. You can prove this with the following terminal commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;which perl
&lt;span style=&#34;color:#e6db74&#34;&gt;/home/si&lt;/span&gt;llymoose&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;perl

sudo which perl
&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;perl

sudo echo $&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt;which perl)
&lt;span style=&#34;color:#e6db74&#34;&gt;/home/si&lt;/span&gt;llymoose&lt;span style=&#34;color:#e6db74&#34;&gt;/perl5/&lt;/span&gt;perlbrew&lt;span style=&#34;color:#e6db74&#34;&gt;/perls/&lt;/span&gt;perl&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.16.3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/&lt;/span&gt;perl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing Perl 5.12.0 RC 1 with App::perlbrew</title>
      <link>http://localhost:1313/pub/2010/03/testing-perl-5120-rc-1-with-appperlbrew.html/</link>
      <pubDate>Tue, 30 Mar 2010 14:22:06 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2010/03/testing-perl-5120-rc-1-with-appperlbrew.html/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m working on a project with Curtis &amp;ldquo;Ovid&amp;rdquo; Poe and Adrian Howard. We use Perl 5.10.1, but because we control which version of Perl 5 we use, there&amp;rsquo;s no reason not to test with Perl 5.12.0 &amp;ndash; and if we find bugs, we can report them and get them fixed in the proper place.&lt;/p&gt;

&lt;p&gt;This application has its own quirks for setup and installation. I managed to clean up some of the worst offenses as my first work on the project; it installs and passes tests on my server with Perl 5.10.1, so it should install cleanly if all of its dependencies work with Perl 5.12.&lt;/p&gt;

&lt;p&gt;My first approach was to manage my own parallel installation of Perl 5 with &lt;a href=&#34;https://metacpan.org/pod/local::lib&#34;&gt;local::lib&lt;/a&gt; and a custom installation of Perl 5.12, but the manual intervention required to make all of that work was enough of a hassle that I took a tip from &lt;a href=&#34;http://chris.prather.org/&#34;&gt;Chris Prather&lt;/a&gt; and installed &lt;a href=&#34;https://metacpan.org/pod/App::perlbrew&#34;&gt;App::perlbrew&lt;/a&gt; to manage my various installations (system Perl 5.10.0 built with threading, custom Perl 5.10.1 without threads, and now Perl 5.12.0 RC1).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cpan App::perlbrew
    $ perlbrew init
    $ echo &#39;source /home/chromatic/perl5/perlbrew/etc/bashrc&#39; &amp;gt;&amp;gt; ~/.bashrc
    $ source /home/chromatic/perl5/perlbrew/etc/bashrc
    $ perlbrew install perl-5.12.0-RC1 -as p512
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;-as p512&lt;/code&gt; option was optional; it lets me use &lt;code&gt;p512&lt;/code&gt; as a short name to refer to that particular installation when switching between versions.&lt;/p&gt;

&lt;p&gt;After a while with no obvious output (which is fine), the end result is the ability to switch between parallel Perl 5 installations without them stomping on each other. They&amp;rsquo;re all installed locally in my own home directory, so I can use CPAN or &lt;a href=&#34;https://metacpan.org/pod/App::cpanminus&#34;&gt;cpanminus&lt;/a&gt; to install modules without worrying about root access or messing up the system for anyone else.&lt;/p&gt;

&lt;p&gt;I had already installed &lt;a href=&#34;https://metacpan.org/pod/local::lib&#34;&gt;local::lib&lt;/a&gt;, but I&amp;rsquo;m not sure it&amp;rsquo;s necessary in this case.&lt;/p&gt;

&lt;p&gt;With the changes to my &lt;em&gt;.bashrc&lt;/em&gt;, now &lt;code&gt;perl&lt;/code&gt; is a symlink. Switching my version with &lt;code&gt;perlbrew&lt;/code&gt; swaps a symlink, so every time I invoke &lt;code&gt;perl&lt;/code&gt; directly, it uses the intended version. Shebang lines remain unaffected, so anything which invokes a program directly will use a hard-coded version of Perl. Unfortunately, this includes &lt;code&gt;cpanm&lt;/code&gt;, so I took to using an alias which does &lt;code&gt;perl `which cpanm`&lt;/code&gt; as a temporary workaround. Miyagawa suggested &lt;em&gt;not&lt;/em&gt; using CPAN to install cpanminus. Instead, he recommends:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -L http://cpanmin.us | perl - App::cpanminus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that you&amp;rsquo;ll have to do this for every new version of Perl you install with perlbrew.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the nice part of perlbrew. I can also install Perl 5.10.1 through it (replacing my custom installation) and switch between the two with a simple command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ perlbrew switch p5101
    $ perlbrew switch perl-5.10.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see what you have installed with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ perlbrew installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For those of you curious as to the results of my experiments with 5.12.0, &lt;a href=&#34;https://metacpan.org/pod/Devel::Cover&#34;&gt;Devel::Cover&lt;/a&gt; doesn&amp;rsquo;t work correctly yet, but that&amp;rsquo;s not a requirement for this project. &lt;a href=&#34;https://metacpan.org/pod/Devel::BeginLift&#34;&gt;Devel::BeginLift&lt;/a&gt; needs a patch to build. Fortunately, that&amp;rsquo;s available in the RT queue. A manual build and test worked just fine. Other than that, a little bit of babysitting on the installation satisfied all of the dependencies.&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;d had to manage the installation (and module paths and&amp;hellip;) of all of this software, I&amp;rsquo;d have spent a lot more time on the fiddly details of installing dependencies and not the interesting part. &lt;code&gt;App::perlbrew&lt;/code&gt; allowed me to concentrate on what really matters: does my software work?&lt;/p&gt;

&lt;p&gt;Perl 5.12.0 will come out soon. Use &lt;code&gt;App::perlbrew&lt;/code&gt; to test code you care about with it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

