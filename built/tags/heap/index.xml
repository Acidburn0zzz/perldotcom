<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Heap on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/heap/</link>
    <description>Recent content in Heap on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Feb 2018 18:37:45 +0000</lastBuildDate>
    <atom:link href="/tags/heap/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Real World Perl: Analyze Chrome&#39;s heap</title>
      <link>http://localhost:1313/article/real-world-perl-analyze-chrome-s-heap/</link>
      <pubDate>Mon, 19 Feb 2018 18:37:45 +0000</pubDate>
      
      <guid>http://localhost:1313/article/real-world-perl-analyze-chrome-s-heap/</guid>
      <description>&lt;p&gt;Welcome to Real World Perl, a series that aims to showcase everyday uses of Perl. Got a suggestion for a Real World Perl example? &lt;a href=&#34;mailto:perl-com-editor@perl.org&#34;&gt;email me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When ordinary tools fail, many programmers reach for Perl. Matthew Hodgson ran into trouble analyzing the Chrome Browser&amp;rsquo;s heap dump file: the programs he used kept running out of memory for large (&amp;gt; 2GB) files. So he whipped up a &amp;ldquo;quick and dirty&amp;rdquo; Perl &lt;a href=&#34;https://github.com/ara4n/heapanalyser/blob/master/heap-analyser.pl&#34;&gt;script&lt;/a&gt; to do it. Instead of parsing the entire heap dump into memory, it saves resources by processing the data one line at a time.&lt;/p&gt;

&lt;p&gt;To use the script, you first need a Chrome heap dump file. To get one, launch Chrome, go to Developer tools -&amp;gt; Memory -&amp;gt; Take heap snapshot. Save the file locally.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./heap-analyser.pl /path/to.heapsnapshot &amp;gt; heap-stats.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will save the statistics in a tab separated format in the file &lt;code&gt;heap-stats.csv&lt;/code&gt;. From there you can import the file into your favorite spreadsheet software, for further investigation. Matthew has an example of this in the project &lt;a href=&#34;https://github.com/ara4n/heapanalyser&#34;&gt;repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Cover image from &lt;a href=&#34;https://pixabay.com/en/planet-earth-cosmos-continents-1457453/&#34;&gt;pixabay&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

