<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>__Package__ on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/__package__/</link>
    <description>Recent content in __Package__ on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 May 2013 11:17:52 +0000</lastBuildDate>
    <atom:link href="/tags/__package__/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Perl tokens you should know</title>
      <link>http://localhost:1313/article/24/2013/5/11/Perl-tokens-you-should-know/</link>
      <pubDate>Sat, 11 May 2013 11:17:52 +0000</pubDate>
      
      <guid>http://localhost:1313/article/24/2013/5/11/Perl-tokens-you-should-know/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Perl has many global variables, a few of which are stored in a special literal format as: __NAME__. It&amp;rsquo;s good to be aware of these special literals, (aka tokens) as they appear frequently in Perl code and provide useful functionality.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;package&#34;&gt;PACKAGE&lt;/h3&gt;

&lt;p&gt;This token contains the name of the package which is declared at the top of any Perl module e.g:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;package&lt;/span&gt; Perltricks::Example;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;

&lt;span style=&#34;color:#66d9ef&#34;&gt;sub&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_package_name&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; __PACKAGE__ &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, the subroutine &amp;lsquo;print_package_name&amp;rsquo; would print &amp;lsquo;Perltricks::Example&amp;rsquo;. __PACKAGE__ is one of the most useful (and frequently used) tokens, as it has applications in code generation and class inheritance, where the programmer does not know the name of the package ahead of time. In a Perl program (.pl file) __PACKAGE__ returns &amp;lsquo;main&amp;rsquo;.&lt;/p&gt;

&lt;h3 id=&#34;line-file&#34;&gt;LINE, FILE&lt;/h3&gt;

&lt;p&gt;The __LINE__ token returns the value of the current line number. __FILE__ provides the filename. Similar to __PACKAGE__ these tokens can be used with string and numeric functions as appropriate (such as print).&lt;/p&gt;

&lt;h3 id=&#34;end-data&#34;&gt;END, DATA&lt;/h3&gt;

&lt;p&gt;__END__ defines the end of the Perl code in the file. Any text that appears after __END__ is ignored by the Perl compiler. Perl programmers often put module documentation after an __END__ token. Even though POD markup language is ignored by the Perl compiler, using __END__ provides the guarantee that even if the POD markup contains a syntax error, the Perl compiler will not scan that part of the file. A clear example of that can be seen in the &lt;a href=&#34;https://metacpan.org/pod/LWP&#34;&gt;LWP source code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;__DATA__ is similar to __END__ in that it defines the end of the Perl code in any file. However, any text that appears on the line immediately after __DATA__ until the end of the file, is read into the filehandle PACKAGENAME::DATA, (where package name is the name of the package that __DATA__ appeared in). The documentation for &lt;a href=&#34;https://perldoc.perl.org/SelfLoader.html&#34;&gt;SelfLoader&lt;/a&gt; discusses __DATA__ and __END__ in more detail.&lt;/p&gt;

&lt;h3 id=&#34;sub&#34;&gt;SUB&lt;/h3&gt;

&lt;p&gt;__SUB__ returns a reference to the current subroutine. It&amp;rsquo;s available in Perl 5.16 and higher via the &amp;lsquo;use feature&amp;rsquo; pragma.&lt;/p&gt;

&lt;p&gt;*This article was updated on 15th May 2013 including corrections to information relating to __SUB__. Thanks to &lt;strong&gt;Jochen Hayek&lt;/strong&gt; for the correction.*&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

