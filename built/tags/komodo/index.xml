<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Komodo on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/komodo/</link>
    <description>Recent content in Komodo on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Nov 2004 00:00:00 -0800</lastBuildDate>
    <atom:link href="/tags/komodo/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Komodo 3.0 Review</title>
      <link>http://localhost:1313/pub/2004/11/04/komodo3.html/</link>
      <pubDate>Thu, 04 Nov 2004 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2004/11/04/komodo3.html/</guid>
      <description>

&lt;p&gt;There are several different types of programmers, but I would wager that the vast majority are just like me: their mouse is a crucial input extension, and having an environment that supports the task at hand makes coding easier and, dare I say, more fun. This is where a GUI IDE (Integrated Development Environment) can help, with syntax highlighting, project management, code completion, reference documentation, support tools, and being able to use your mouse to place your cursor or to select a particular segment of code.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a GUI IDE kind of guy, and I&amp;rsquo;ve been through quite a few of them to find the one that best suits me as a Perl Web Developer. ActiveState&amp;rsquo;s &lt;a href=&#34;https://www.activestate.com/komodo-ide&#34;&gt;Komodo&lt;/a&gt; (version 3.0.1) fits the bill, though there remains room for improvement. Let&amp;rsquo;s start with the positive, and then I&amp;rsquo;ll address where Komodo can improve. * Editor&amp;rsquo;s Note (2018): Komodo is up to version 11 and many things have changed.*&lt;/p&gt;

&lt;h3 id=&#34;pluses&#34;&gt;Pluses&lt;/h3&gt;

&lt;p&gt;The last time that &lt;a href=&#34;http://localhost:1313/pub/2002/10/09/komodo.html&#34;&gt;Perl.com reviewed Komodo&lt;/a&gt; was October 2002. At that time, Komodo was at version 2.0, which was slow and whose functionality seemed only halfway implemented. It showed promise then and has made huge leaps in subsequent versions to overcome the major failings, with speed increases, functionality improvements, and adding even more features.&lt;/p&gt;

&lt;p&gt;My first criteria for any editor is (accurate) syntax highlighting. All editors have this to some extent, but when you throw some wacky Perl stuff their way (heredocs, for example), they start to choke and mislead you. Komodo has handled everything I&amp;rsquo;ve thrown at it flawlessly and has a neat preferences panel where you can customize the color scheme with your own flair (or some might say lack thereof when they see my screen).&lt;/p&gt;

&lt;p&gt;Another important feature for an IDE is project management, a way to group a list of files relevant to the project you&amp;rsquo;re working on in an easy-to-access fashion. Komodo has a Projects tab, through which you can do pretty much anything in that regard; it even includes a powerful Import from File System that&amp;rsquo;ll help you set up a project in no time. Also, within that same tab is a Code Explorer, which will parse and index the open file for subroutines&lt;/p&gt;

&lt;p&gt;Simon referred to Komodo&amp;rsquo;s Toolbox in the previous review, and that&amp;rsquo;s certainly been a great feature for me. I&amp;rsquo;ve setup some tools, such as PerlTidy, to run on an open file. Then, when I open a messy file, I can just double-click on that tool, and it&amp;rsquo;ll clean up the file. I also have other tools to insert standard snippets of HTML and HTML::Template code. Snippets are really cool because you can set the cursor placement after you&amp;rsquo;ve inserted the snippet, as well as maintain the indentation styles. You can also assign Key Bindings to pretty much anything, including the tools. When I hit Ctrl-1, the editor will insert this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- TMPL_VAR NAME=&amp;quot;&amp;quot; --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;into my code and put the cursor right there in the &lt;code&gt;NAME&lt;/code&gt; parameter, so I can keep typing. I&amp;rsquo;ve included some instructions after the review below to show you how to set these up.&lt;/p&gt;

&lt;p&gt;Simon also referred to the Rx Toolkit, which is still available and great to use to play around with regular expressions and figure out how they will work. Version 3.0 brings vast improvements to the Rx Toolkit, with different modes for Match, Match All (for multiline text to match against), Split, and Replace/Replace All. This tool is indispensable for those who are tinkering with a regular expression and trying to figure things out. ActiveState went a step further and added a Perl Interactive Shell that allows you to type or paste in lines of code and play around. This has been useful for me when figuring out data structures and how to access deeply-nested data.&lt;/p&gt;

&lt;p&gt;Komodo also supports CVS [and Perforce (version control)], such that within the IDE, you can perform versioning functionality (diff, commit, checkout, etc). It will also monitor the files and repository so that if there are any changes, the files&amp;rsquo; indicator will change accordingly, keeping you aware of what&amp;rsquo;s going on. You can also setup the CVS remotely over SSH to interact with a remote repository securely.&lt;/p&gt;

&lt;p&gt;I feel like I&amp;rsquo;ve barely scratched the surface with what Komodo can do, both in this review as well as my personal experience with the IDE. Komodo has a powerful debugger, which in an IDE setting is a great way to visualize your code executing, with the line of code in one window and a tab with call stacks, output, watched variables (that you can change midstream if you like), breakpoints, and more. Komodo presents complex watched variables in a nested tree format, allowing you to expand elements of hashes and arrays to go through the data. Komodo also supports remote debugging, allowing you to debug a remote console script or web application right inside Komodo, stepping in and out of code and watching variables right off the remote server. Personally, I could never make this work (despite ActiveState Technical Support&amp;rsquo;s best efforts), but I haven&amp;rsquo;t had the need for it in the first place.&lt;/p&gt;

&lt;p&gt;Komodo also supports different languages besides Perl, such as HTML, PHP, Python, and XML (including syntax highlighting support for 30 other languages). I do dabble in PHP from time to time, so Komodo gives me a one-stop IDE to handle that, too. I can also incorporate all of these file types into one project for easy access.&lt;/p&gt;

&lt;p&gt;Just as the power of Perl comes from its community, ActiveState also extends a sense of community with Komodo, with &lt;a href=&#34;https://community.activestate.com/product/aspn&#34;&gt;ASPN&lt;/a&gt;, a portal of sorts that encompasses mailing lists, documentation, cookbooks (code recipes), and a bugzilla. With an ActivePerl Pro Studio subscription, ASPN also integrates with Safari, such that you can search and read over 1,000 technical books from O&amp;rsquo;Reilly, Addison Wesley, and other publishers.&lt;/p&gt;

&lt;p&gt;Komodo installs a ton of helpful documentation and tutorials locally. You can easily pull up the documentation for a specific function/module by highlighting it and hitting Shift-F1 (which does a Google search on perldoc.com for the highlighted string) or Ctrl-F1 (which does a Google search on any site for the highlighted string). Komodo also comes with some sample tools in the Toolbox (that you could bind to another key combination) to run &lt;code&gt;perldoc&lt;/code&gt; locally on the highlighted function or module.&lt;/p&gt;

&lt;p&gt;ActiveState is also working on a new point release that will bring AutoComplete and CallTips to the Perl language, which will provide even more efficiency to coding and reference documentation. This next release will also address a few bugs (some of which I address below) and reinforces their dedication to responding to our feedback and pushing for even more functionality.&lt;/p&gt;

&lt;h3 id=&#34;minuses&#34;&gt;Minuses&lt;/h3&gt;

&lt;p&gt;Komodo 3.0 has a few hiccups and flaws, though. It seems the winds of version control have shifted to something called Subversion. The IDE doesn&amp;rsquo;t directly support it, though you could certainly create supporting tools in the Toolbox. As I said earlier, I also had problems with Remote Debugging, though it was never a high-enough priority for me to figure out what was going on. Komodo also allows you to access files through FTP, but not SCP/SSH, which is more secure and becoming the standard for accessing remote files.&lt;/p&gt;

&lt;p&gt;Also, when Komodo went from 2.5.2 to 3.0, they moved the Toolbox from a tab in the Projects Tab to a tab of its own, which kind of annoys me because it eats into my precious screen real estate. It would be nice to be able to customize the placements of the various tabs and what they contain. Komodo also doesn&amp;rsquo;t support code descriptions in the Code Browser for Perl (they do for PHP and Python), though that may change, hopefully with the next release.&lt;/p&gt;

&lt;p&gt;Lastly, there seem to be quite a few minor GUI flaws. There&amp;rsquo;s nothing major to prevent you from doing your work; the flaws are things like double-clicking on a subroutine name in the Code Browser goes to the line, but in a huge Perl file, it doesn&amp;rsquo;t center on the screen (you may have to scroll a bit) and more seldom, doesn&amp;rsquo;t go to the right line (the start of the subroutine). I also had a problem with copy and pasting stuff in a line-wrapped code that would then appear as if I have lost code. Reflowing the paragraphs sometimes doesn&amp;rsquo;t work (it would reflow more narrowly than it should have). When I ran the PerlTidy tool on my open file, I wouldn&amp;rsquo;t see the &amp;ldquo;File Changed on Disk&amp;rdquo; alert until I Alt-Tabbed to another application and then Alt-Tabbed back.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The great thing about ActiveState is that their developers and technical support use their mailing lists and a Bugzilla to interact with the feedback and to track down these types of flaws and address them.&lt;/p&gt;

&lt;p&gt;At the risk of sounding like a fanboy, ActiveState&amp;rsquo;s Komodo is an amazing platform, surrounding you with the power to accomplish any Perl task at hand. Despite its negative points, they aren&amp;rsquo;t enough to overcome the benefits it brings to the table, and I highly recommend it for Perl programmers of any variety. Komodo is available for Windows, Linux, and Solaris. Prices start at $29.95 for the personal edition (non-commercial/educational use) and $295 for the professional edition. Subscriptions, upgrade pricing, and a free 21-day fully-functional edition are also available off of their web site.&lt;/p&gt;

&lt;h3 id=&#34;toolbox-setup-instructions&#34;&gt;Toolbox Setup Instructions&lt;/h3&gt;

&lt;p&gt;To setup PerlTidy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure you have Perl and PerlTidy installed. For Windows, grab the ActivePerl distribution from ActiveState and then download and install the &lt;a href=&#34;http://perltidy.sourceforge.net/&#34;&gt;PerlTidy&lt;/a&gt; script from SourceForge.&lt;/li&gt;
&lt;li&gt;In your toolbox tab, click the Add Item button at the top; then select New Command.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The cursor starts off in the Command line, which you can specify as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;perl c:\path\to\perltidy -b [perltidy style prefs] %f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;*(&lt;code&gt;-b&lt;/code&gt; specifies to tidy the file in place, making a &lt;em&gt;.bak&lt;/em&gt; backup file.)*&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the advanced section, put &lt;code&gt;%D&lt;/code&gt; in the Start field to launch PerlTidy in the script&amp;rsquo;s working directory.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Rename the Command to PerlTidy in the field at the top.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;At this point, you can also go to the Key Binding tab and assign a key combination to run the command.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Save, open a Perl file and give it a shot, either using the key combination you assigned or by double clicking on the command from your Toolbox.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To setup a snippet, such as the HTML::Template tag:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In your toolbox tab, click the Add Item button at the top, and then select New Snippet.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type in the text to insert when you run the snippet. In my case, I used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- TMPL_VAR NAME=&amp;quot;&amp;quot; ESCAPE=HTML --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Be sure to place the cursor between the quote marks and select the Maintain selected text or cursor position after insertion checkbox.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Name the snippet (I used &lt;code&gt;tmplvar&lt;/code&gt;) at the top. You can also go to the Key Binding tab at the top and assign a key combination to run the snippet.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Save and then give it a shot, either using the key combination you assigned or by double clicking on the command from your Toolbox.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Affrus: An OS X Perl IDE</title>
      <link>http://localhost:1313/pub/2004/05/14/affrus.html/</link>
      <pubDate>Fri, 14 May 2004 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2004/05/14/affrus.html/</guid>
      <description>&lt;p&gt;When I &lt;a href=&#34;http://localhost:1313/pub/2002/10/09/komodo.html&#34;&gt;last reviewed&lt;/a&gt; a Perl IDE, ActiveState&amp;rsquo;s Komodo, I was nearly convinced; the only problem was that I use Mac OS X. Now, &lt;a href=&#34;http://www.latenightsw.com/&#34;&gt;Late Night Software&lt;/a&gt;, more commonly known for their AppleScript tools, have taken their Mac programming experience and applied it to create &lt;a href=&#34;http://www.latenightsw.com/affrus/index.html&#34;&gt;Affrus&lt;/a&gt;, a Perl IDE for the Mac. And I&amp;rsquo;m a little closer to being convinced.&lt;/p&gt;

&lt;p&gt;Affrus differs from Komodo in some substantial ways. Where Komodo couples its editor tightly with a Perl interpreter to allow background syntax checking and on-the-fly warnings highlighting, Affrus takes a more traditional, detached approach: syntax checks are performed on demand, with errors and warnings placed in a separate panel. Fans of &lt;code&gt;emacs&lt;/code&gt;&amp;rsquo;s debugging modes will be happier to see this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_2004_05_14_affrus/affrus-stricterror.jpg&#34; width=&#34;500&#34; height=&#34;280&#34; /&gt;
It took me quite awhile to discover the control-click contextual menu &amp;ndash; since the downside of &amp;ldquo;intuitive&amp;rdquo; applications is that we don&amp;rsquo;t get a nice manual to read any more &amp;ndash; but when I did I was amazingly impressed. Right-clicking on a package name does just what you want; it allows you to edit that package&amp;rsquo;s file, or to view its documentation with perldoc. Similarly, right-clicking on a built-in offers to bring up perldoc for that function.&lt;/p&gt;

&lt;p&gt;Right-clicking on the name of a subroutine lets you navigate to the definition of that routine &amp;ndash; even doing a remarkably good job at working out what class a method will come from. And right-clicking on a variable name takes you to where that variable was declared. Right-clicking on the navigation bar at the bottom of the window brings up a &amp;ldquo;table of contents&amp;rdquo; for the program, allowing you to navigate to any of the modules it uses and any of the subroutines it defines. If you right-click on empty space, however, you get a listing of variables and subroutine names that can be inserted at that location. Full marks for this, and the more time I spend with the Affrus editor, the more neat things like this I find.&lt;/p&gt;

&lt;p&gt;On the whole, though, the Affrus editor is relatively basic. While its syntax highlighting is more sophisticated than most, distinguishing between package, lexical, and special variables, for instance, it does not handle code folding, nor does it have &amp;ldquo;smart&amp;rdquo; auto-indenting. It&amp;rsquo;s quite comparable to the original &lt;code&gt;emacs&lt;/code&gt; &lt;code&gt;perl-mode&lt;/code&gt;. However, this isn&amp;rsquo;t necessarily a problem, due to Affrus&amp;rsquo; integration with other editors such as BBEdit and TextWrangler; additionally, Late Night&amp;rsquo;s AppleScript experience has enabled them to design Affrus to be extensible and scriptable. Script plugins provided with Affrus allow it to reformat code with &lt;code&gt;perltidy&lt;/code&gt;, as well as to insert control structures and other snippets into the current file.&lt;/p&gt;

&lt;p&gt;As well as its scriptability, the real boon in Affrus is in its debugging console; on top of the usual debugging actions of stepping over a script, jumping in and out of subroutines, setting breakpoints, and so on, it presents at every step a detailed listing of all the variables in play, allowing you to look inside complex data structures with OS X&amp;rsquo;s familiar disclosure triangles:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_2004_05_14_affrus/affrus-debug.jpg&#34; width=&#34;500&#34; height=&#34;337&#34; /&gt;
As one would expect, it automatically loads up modules and other external Perl code while debugging, allowing you to step over their code, too. You can also change the value of variables during debugging, as well as enter arbitrary Perl expressions in the &amp;ldquo;Expressions&amp;rdquo; pane.&lt;/p&gt;

&lt;p&gt;Affrus offers a few other interesting little features, such as the debugger&amp;rsquo;s ability to detect and highlight circular references, and the bundled command line tool. This utility enables you to debug a Perl program in Affrus while having complete control over the environment and standard IO redirections &amp;ndash; a major bridge between GUI-based debugging and the &amp;ldquo;real world&amp;rdquo; of complex Perl program deployments.&lt;/p&gt;

&lt;p&gt;There are a few things Affrus doesn&amp;rsquo;t do which I&amp;rsquo;d like, but to be honest they&amp;rsquo;re a part of the way I use Perl &amp;ndash; an IDE with integrated debugger and Perl-aware editor is a great environment for creating standalone Perl scripts where you&amp;rsquo;re running through a process, breaking at significant moments, inspecting the control flow and the state of the variables. However, when you work primarily at the level of Perl modules and Apache handlers, there is no real top-level &amp;ldquo;process&amp;rdquo; to step through, and a traditional debugging environment becomes much less useful.&lt;/p&gt;

&lt;p&gt;That said, in such a debugging environment, I&amp;rsquo;d love to see Affrus have a Perl debugger pane at which one could execute Perl code during a debugger run; inspecting the variables is great, but there ought to be a way to change them, too! There are other changes I&amp;rsquo;d like to see in the future, ranging from something as trivial as a color scheme palette &amp;ndash; the first thing I did on running Affrus was to spend 10 minutes configuring it with a set of colors that look nice on a black background instead of a white one! &amp;ndash; to full-blown integration with either CVS or even Apple&amp;rsquo;s Xcode IDE.&lt;/p&gt;

&lt;p&gt;On the whole, however, I&amp;rsquo;m very impressed by Affrus, and I&amp;rsquo;m convinced that, even if it&amp;rsquo;s not to your taste yet, it is certain to grow into a mature and powerful Perl IDE for OS X.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

