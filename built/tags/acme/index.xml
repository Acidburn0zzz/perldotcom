<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Acme on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/acme/</link>
    <description>Recent content in Acme on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Feb 2018 16:57:46 +0000</lastBuildDate>
    <atom:link href="/tags/acme/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - January 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---january-2018/</link>
      <pubDate>Sat, 03 Feb 2018 16:57:46 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---january-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. A full list of January&amp;rsquo;s new distributions can be found &lt;a href=&#34;https://perlancar.wordpress.com/2018/02/01/list-of-new-cpan-distributions-jan-2018/&#34;&gt;here&lt;/a&gt;. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::NDTools&#34;&gt;App::NDTools&lt;/a&gt; provides diff tools for nested structures&lt;/li&gt;
&lt;li&gt;Get a non-blocking interface to Music Player Daemon using &lt;a href=&#34;https://metacpan.org/pod/Net::Async::MPD&#34;&gt;Net::Async::MPD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Ethereum::Swarm&#34;&gt;Net::Ethereum::Swarm&lt;/a&gt; provides an API for Ethereum Swarm&lt;/li&gt;
&lt;li&gt;Lookup cryptocurrency exchange rates and query the Binance api with &lt;a href=&#34;https://metacpan.org/pod/WebService::Binance&#34;&gt;WebService::Binance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::ACME2&#34;&gt;Net::ACME2&lt;/a&gt; supports the new wildcard certificates, as author Felipe Gasper recently &lt;a href=&#34;http://localhost:1313/article/free-wildcard-tls-with-net-acme2-and-let-s-encrypt/&#34;&gt;announced&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get more methods for version numbers via &lt;a href=&#34;https://metacpan.org/pod/version::Normal&#34;&gt;version::Normal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Password::zxcvbn&#34;&gt;Data::Password::zxcvbn&lt;/a&gt; is a port of Dropbox&amp;rsquo;s password strength estimator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use Postresql&amp;rsquo;s &lt;code&gt;pg_recvlogical&lt;/code&gt; from Perl with &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::PgRecvlogical&#34;&gt;AnyEvent::PgRecvlogical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Business::cXML&#34;&gt;Business::cXML&lt;/a&gt; implements several cXML request/response messages&lt;/li&gt;
&lt;li&gt;Quickly start a database server using &lt;a href=&#34;https://metacpan.org/pod/DBIx::QuickDB&#34;&gt;DBIx::QuickDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Convert MGRS coordinates to UTM or lat/lon in C with &lt;a href=&#34;https://metacpan.org/pod/Geo::Coordinates::MGRS::XS&#34;&gt;Geo::Coordinates::MGRS::XS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Convert to and from proquints (&amp;ldquo;readable, spellable, and pronounceable identifiers&amp;rdquo;) with &lt;a href=&#34;https://metacpan.org/pod/Proquint&#34;&gt;Proquint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Marshall LibXML nodes and native objects with &lt;a href=&#34;https://metacpan.org/pod/XML::LibXML::Ferry&#34;&gt;XML::LibXML::Ferry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/XML::LibXML::Proxy&#34;&gt;XML::LibXML::Proxy&lt;/a&gt; can force LibXML to use a proxy for HTTP/HTTPS external entities&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Conveniently set breakpoints in subroutines using &lt;a href=&#34;https://metacpan.org/pod/Devel::ModuleBreaker&#34;&gt;Devel::ModuleBreaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Git::Repository::Plugin::Dirty&#34;&gt;Git::Repository::Plugin::Dirty&lt;/a&gt; provides methods to inspect the dirtiness of a git repository&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooseX::Attribute::Multibuilder&#34;&gt;MooseX::Attribute::Multibuilder&lt;/a&gt; lets&amp;rsquo; you share a &lt;code&gt;builder&lt;/code&gt; routine between attributes&lt;/li&gt;
&lt;li&gt;Report tests via Metabase, but fallback to files using &lt;a href=&#34;https://metacpan.org/pod/Test::Reporter::Transport::Metabase::Fallback&#34;&gt;Test::Reporter::Transport::Metabase::Fallback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Snapshot&#34;&gt;Test::Snapshot&lt;/a&gt; test against data stored in automatically-named file á la &amp;ldquo;snapshot testing&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Test with hires time using &lt;a href=&#34;https://metacpan.org/pod/Test::Time::HiRes&#34;&gt;Test::Time::HiRes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Util::EvalSnippet&#34;&gt;Util::EvalSnippet&lt;/a&gt; speeds up application development by avoiding reloads&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Access TP-Link Device APIs from Perl with &lt;a href=&#34;https://metacpan.org/pod/Device::TPLink&#34;&gt;Device::TPLink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://metacpan.org/pod/Algorithm::ConstructDFA2&#34;&gt;Algorithm::ConstructDFA2&lt;/a&gt; for deterministic finite automaton construction&lt;/li&gt;
&lt;li&gt;Align or re-align sequences via &lt;a href=&#34;https://metacpan.org/pod/Bio::MUST::Apps::TwoScalp&#34;&gt;Bio::MUST::Apps::TwoScalp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::SearchIO::blastxml&#34;&gt;Bio::SearchIO::blastxml&lt;/a&gt; is a SearchIO implementation of NCBI Blast XML parsing&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Crypt::Sodium::Nitrate&#34;&gt;Crypt::Sodium::Nitrate&lt;/a&gt; is a wrapper for &lt;code&gt;libsodium&lt;/code&gt;, the cryptography library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::GF&#34;&gt;Math::GF&lt;/a&gt; conducts arithmetic on Galois (finite) fields&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PDL::Algorithm::Center&#34;&gt;PDL::Algorithm::Center&lt;/a&gt; provides various methods of finding the center of a sample&lt;/li&gt;
&lt;li&gt;Parse R package DESCRIPTION (metadata) files using &lt;a href=&#34;https://metacpan.org/pod/R::DescriptionFile&#34;&gt;R::DescriptionFile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Send statistics to statsd with &lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::Statsd&#34;&gt;Plack::Middleware::Statsd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Free Wildcard TLS with Net::ACME2 and Let’s Encrypt</title>
      <link>http://localhost:1313/article/free-wildcard-tls-with-net-acme2-and-let-s-encrypt/</link>
      <pubDate>Tue, 23 Jan 2018 08:00:24 +0000</pubDate>
      
      <guid>http://localhost:1313/article/free-wildcard-tls-with-net-acme2-and-let-s-encrypt/</guid>
      <description>&lt;p&gt;Much of the credit for the recent improvement in TLS deployment across
the Internet must go to &lt;a href=&#34;http://letsencrypt.org&#34;&gt;Let’s Encrypt&lt;/a&gt; (LE),
who provide free TLS certificates via an open-access RESTful API. That
API has a large number of clients in many languages, including Perl.
(The list includes the &lt;a href=&#34;http://cpanel.com&#34;&gt;cPanel&lt;/a&gt;-derived
&lt;a href=&#34;https://metacpan.org/pod/Net::ACME&#34;&gt;Net::ACME&lt;/a&gt;
as well as &lt;a href=&#34;https://metacpan.org/pod/Crypt::LE&#34;&gt;Crypt::LE&lt;/a&gt;,
&lt;a href=&#34;https://metacpan.org/pod/Protocol::ACME&#34;&gt;Protocol::ACME&lt;/a&gt;,
&lt;a href=&#34;https://metacpan.org/pod/WWW::LetsEncrypt&#34;&gt;WWW::LetsEncrypt&lt;/a&gt;, and
&lt;a href=&#34;https://metacpan.org/pod/Mojo::ACME&#34;&gt;Mojo::ACME&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;LE has worked with the &lt;a href=&#34;http://ietf.org&#34;&gt;IETF&lt;/a&gt; to standardize their
“ACME” (Automated Certificate Management Environment) protocol as an
Internet standard. The forthcoming standard breaks compatibility with the
previous version of the protocol, which necessitates updates to the client
logic.&lt;/p&gt;

&lt;p&gt;As an incentive for clients to adopt the new protocol, though, LE will
offer free wildcard TLS via their new API.&lt;/p&gt;

&lt;p&gt;I thought I would take the opportunity to rework Net::ACME for support of
the new protocol and quickly decided that a new distribution would suit
the need best. Besides the significant protocol changes that have taken
place, I wanted to make some “deeper” changes like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I wanted to incorporate &lt;a href=&#34;https://metacpan.org/pod/X::Tiny&#34;&gt;X::Tiny&lt;/a&gt;
to reduce some logic duplication and gain the benefits of that library.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The new protocol suggests some changes to the class structure that
would have been unwieldy to incorporate in the prior version.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so, &lt;a href=&#34;https://metacpan.org/pod/Net::ACME2&#34;&gt;Net::ACME2&lt;/a&gt; is now available.
This is a generic client library for any standard ACME implementation,
though the only known public ACME implementation right now is
Let’s Encrypt’s. Their API only provides testing certificates for now,
but once there’s a production endpoint I will update Net::ACME2 to use it.&lt;/p&gt;

&lt;p&gt;Like its predecessor, Net::ACME2:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;… supports both RSA and ECDSA&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;… runs anywhere that Perl runs—no XS required except for core
modules. (cf. &lt;a href=&#34;https://metacpan.org/pod/Crypt::Perl&#34;&gt;Crypt::Perl&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;… reports detailed errors via typed exceptions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;… has minimal dependencies (no Moose, &amp;amp;c.)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve created some example &lt;a href=&#34;https://github.com/FGasper/p5-Net-ACME2/tree/master/examples&#34;&gt;scripts&lt;/a&gt; to get you started. After you&amp;rsquo;ve installed the module, clone the &lt;a href=&#34;https://github.com/FGasper/p5-Net-ACME2&#34;&gt;repo&lt;/a&gt;, change into the root project directory and run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./examples/http-01.pl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;… or:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./examples/dns-01.pl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These walk you through the following steps (with Let’s Encrypt):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Read the terms of service and, if you accept them, proceed.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create an RSA or ECC private key. Net::ACME2 will extract the public
key from it and send it to the ACME server as your account identifier.
(The example scripts create a new key for each invocation, but for a
production deployment you should reuse a key.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a certificate order by telling Net::ACME2 which domains the
certificate will include. The ACME server will respond with options for
“challenges”—i.e., how to prove that you control those domains. Currently
there are two available methods: HTTP and DNS. (NOTE: Wildcard domains
require the DNS method.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set up the verification. For HTTP that means making a specific
URL on the domain respond with specific content; for DNS it means creating
a TXT record with a specific name and content. (The example scripts use
the same challenge method for all domains, but your application can be
more flexible.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Indicate to the ACME server which challenge you’re accepting for each
domain.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finalize the certificate order. This will tell you if any challenges
failed or are still pending.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If all domains’ challenges succeeded, you’ll get a URL whose content
will be the newly-issued certificate.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Net::ACME2 is, like the ACME standard itself, still subject to
change, but it’ll get the job done for now. Give it a try!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - November 2016</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---november-2016/</link>
      <pubDate>Thu, 08 Dec 2016 08:45:26 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---november-2016/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use Google services via their API with &lt;a href=&#34;https://metacpan.org/pod/API::Google&#34;&gt;API::Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::ACME&#34;&gt;Net::ACME&lt;/a&gt; provides client methods for the ACME protocol used by Let&amp;rsquo;s Encrypt&lt;/li&gt;
&lt;li&gt;Two new modules for interacting with Azure services: &lt;a href=&#34;https://metacpan.org/pod/Net::Azure::EventHubs&#34;&gt;Net::Azure::EventHubs&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Net::Azure::NotificationHubs&#34;&gt;Net::Azure::NotificationHubs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parse Lumberjack protocol frames with &lt;a href=&#34;https://metacpan.org/pod/Net::Lumberjack&#34;&gt;Net::Lumberjack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AnyEvent::Mattermost&#34;&gt;AnyEvent::Mattermost&lt;/a&gt; is a non-blocking module for using the Mattermost API&lt;/li&gt;
&lt;li&gt;Get a non-blocking STOMP client using &lt;a href=&#34;https://metacpan.org/pod/AnyEvent::Stomper&#34;&gt;AnyEvent::Stomper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Freesound&#34;&gt;WebService::Freesound&lt;/a&gt; is a wrapper for the Freesound OAuth2 API&lt;/li&gt;
&lt;li&gt;Get library data using the Lobid API with &lt;a href=&#34;https://metacpan.org/pod/WebService::Lobid::Organisation&#34;&gt;WebService::Lobid::Organisation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Kayako::RestAPI&#34;&gt;Kayako::RestAPI&lt;/a&gt; provides a Perly interface to the Kayako API (customer service platform)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Alien::SwaggerUI&#34;&gt;Alien::SwaggerUI&lt;/a&gt; installs Swagger to render OpenAPI-spec documentation&lt;/li&gt;
&lt;li&gt;Get a REST API for CPAN Testers data using &lt;a href=&#34;https://metacpan.org/pod/CPAN::Testers::API&#34;&gt;CPAN::Testers::API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Linux users: read and write &lt;code&gt;/proc/$pid/maps&lt;/code&gt; files with &lt;a href=&#34;https://metacpan.org/pod/Linux::Proc::Maps&#34;&gt;Linux::Proc::Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Proc::Memory&#34;&gt;Proc::Memory&lt;/a&gt; let&amp;rsquo;s you peek/poke other processes&amp;rsquo; address spaces&lt;/li&gt;
&lt;li&gt;Check the version numbers of Perl modules installed on remote servers using &lt;a href=&#34;https://metacpan.org/pod/Server::Module::Comparison&#34;&gt;Server::Module::Comparison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Search emails in your inbox with &lt;a href=&#34;https://metacpan.org/pod/Email::Folder::Search&#34;&gt;Email::Folder::Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graphics::GVG&#34;&gt;Graphics::GVG&lt;/a&gt; is a lexer/parser for Game Vector Graphics&lt;/li&gt;
&lt;li&gt;Edit animated JPEG files with &lt;a href=&#34;https://metacpan.org/pod/Image::Animated::JPEG&#34;&gt;Image::Animated::JPEG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::Repair&#34;&gt;JSON::Repair&lt;/a&gt; recognizes illegal JSON and can repair it to strict compliance&lt;/li&gt;
&lt;li&gt;Easily generate XLSX spreadsheets from data with &lt;a href=&#34;https://metacpan.org/pod/Spreadsheet::GenerateXLSX&#34;&gt;Spreadsheet::GenerateXLSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Environ&#34;&gt;App::Environ&lt;/a&gt; easily build applications using service the locator pattern&lt;/li&gt;
&lt;li&gt;Get peer-to-peer messaging using &lt;a href=&#34;https://metacpan.org/pod/BeamX::Peer::Emitter&#34;&gt;BeamX::Peer::Emitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bot::ChatBots&#34;&gt;Bot::ChatBots&lt;/a&gt; is a base system for ChatBots&lt;/li&gt;
&lt;li&gt;Render management speak in IRC with &lt;a href=&#34;https://metacpan.org/pod/Bot::IRC::X::ManagementSpeak&#34;&gt;Bot::IRC::X::ManagementSpeak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sanity-check the calling context using &lt;a href=&#34;https://metacpan.org/pod/Call::Context&#34;&gt;Call::Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Getopt::Kingpin&#34;&gt;Getopt::Kingpin&lt;/a&gt; is golang kingpin-style command line options parser&lt;/li&gt;
&lt;li&gt;Generate lists lazily with &lt;a href=&#34;https://metacpan.org/pod/List::Lazy&#34;&gt;List::Lazy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Convert rt.cpan.org tickets to GitHub issues using &lt;a href=&#34;https://metacpan.org/pod/RTx::ToGitHub&#34;&gt;RTx::ToGitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::MCP4725&#34;&gt;Device::Chip::MCP4725&lt;/a&gt; is a chip driver for MCP4725&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Damianware! Code Perl in Latin using &lt;a href=&#34;https://metacpan.org/pod/Lingua::Romana::Perligata&#34;&gt;Lingua::Romana::Perligata&lt;/a&gt; (not strictly a new distribution, just a new version)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/API::CLI&#34;&gt;API::CLI&lt;/a&gt; is a framework for creating RESTful command line clients&lt;/li&gt;
&lt;li&gt;Run PerlScript/ASP on Catalyst with &lt;a href=&#34;https://metacpan.org/pod/CatalystX::ASP&#34;&gt;CatalystX::ASP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::IOLoop::HoboProcess&#34;&gt;Mojo::IOLoop::HoboProcess&lt;/a&gt; spawns subprocesses with MCE::Hobo&lt;/li&gt;
&lt;li&gt;Automatically rotate your Mojo app secrets using &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::AutoSecrets&#34;&gt;Mojolicious::Plugin::AutoSecrets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - March 2016</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---march-2016/</link>
      <pubDate>Wed, 06 Apr 2016 09:12:09 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---march-2016/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Everything old was new again in March. Apart from smatterings of cool new toys, CPAN got several new loggers, plugin loaders, templates, and configuration management tools.&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Pushover&#34;&gt;Net::Pushover&lt;/a&gt; provides a Perly interface to Pushover, the message delivery service&lt;/li&gt;
&lt;li&gt;Get a client for the TeamCity, the CI service with &lt;a href=&#34;https://metacpan.org/pod/WebService::TeamCity&#34;&gt;WebService::TeamCity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Finance::Robinhood&#34;&gt;Finance::Robinhood&lt;/a&gt; allows you to trade stocks and ETFs with RobinHood, the free brokerage startup&lt;/li&gt;
&lt;li&gt;Use the Let&amp;rsquo;s Encrypt certificate service with &lt;a href=&#34;https://metacpan.org/pod/WWW::LetsEncrypt&#34;&gt;WWW::LetsEncrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::PubNub&#34;&gt;WWW::PubNub&lt;/a&gt; provides an interface to PubNub, the streaming network service&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Footprintless&#34;&gt;Footprintless&lt;/a&gt; is a configuration management program with minimal installations&lt;/li&gt;
&lt;li&gt;Log to date/time-stamped files with &lt;a href=&#34;https://metacpan.org/pod/Log::File::Rolling&#34;&gt;Log::File::Rolling&lt;/a&gt;, a fork of Log::Dispatch::File::Rolling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Logging::Simple&#34;&gt;Logging::Simple&lt;/a&gt; aims to be a minimalist but useful logging system&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Task::Viral&#34;&gt;Task::Viral&lt;/a&gt; is a Perl configuration and installation system, like Pinto, CPAN::Mini et al.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AtteanX::Endpoint&#34;&gt;AtteanX::Endpoint&lt;/a&gt; is a SPARQL 1.1 endpoint for &lt;a href=&#34;https://metacpan.org/pod/Attean&#34;&gt;Attean&lt;/a&gt;, the semantic web framework&lt;/li&gt;
&lt;li&gt;Print nice calendars at the terminal using &lt;a href=&#34;https://metacpan.org/pod/Calendar::Gregorian&#34;&gt;Calendar::Gregorian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Tubes&#34;&gt;Data::Tubes&lt;/a&gt; is a cute data transformation module; needs iterators!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::Typist&#34;&gt;JSON::Typist&lt;/a&gt; aims to &amp;ldquo;replace mushy strings and numbers&amp;rdquo; with proper typed classes. Useful&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Template::Pure&#34;&gt;Template::Pure&lt;/a&gt; is a port of &lt;a href=&#34;http://beebole.com/pure/&#34;&gt;pure.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract a stack trace from an exception object with &lt;a href=&#34;https://metacpan.org/pod/Devel::StackTrace::Extract&#34;&gt;Devel::StackTrace::Extract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::SmokeTests&#34;&gt;Dist::Zilla::Plugin::SmokeTests&lt;/a&gt; makes it easy to run smoke tests run automated environments only&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MCE::Shared&#34;&gt;MCE::Shared&lt;/a&gt; is an extension for sharing threads and processes, also &lt;a href=&#34;https://metacpan.org/pod/MCE&#34;&gt;MCE&lt;/a&gt; is great&lt;/li&gt;
&lt;li&gt;Load plugins from files or modules with &lt;a href=&#34;https://metacpan.org/pod/Plugin::Simple&#34;&gt;Plugin::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Doctest&#34;&gt;Test::Doctest&lt;/a&gt; can extract and evaluate tests from pod fragments - curious&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Linux::IRPulses&#34;&gt;Linux::IRPulses&lt;/a&gt; Parse infra-red pulse data - also see Timm&amp;rsquo;s recent &lt;a href=&#34;http://localhost:1313/article/controlling-insanity-by-parsing-ir-codes-with-linux--irpulses/&#34;&gt;article&lt;/a&gt; on the subject&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Guess language from text using a word list with &lt;a href=&#34;https://metacpan.org/pod/Text::Guess::Language&#34;&gt;Text::Guess::Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check if text is UTF8 compatible with &lt;a href=&#34;https://metacpan.org/pod/Unicode::CheckUTF8::PP&#34;&gt;Unicode::CheckUTF8::PP&lt;/a&gt; a pure Perl module&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/ecl&#34;&gt;ecl&lt;/a&gt; executes Embedded Common Lisp code within Perl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/EMDIS::ECS&#34;&gt;EMDIS::ECS&lt;/a&gt; provides useful subroutines for the European Marrow Donor Information System standard&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get a simple local search engine for your Dancer app with &lt;a href=&#34;https://metacpan.org/pod/Dancer::SearchApp&#34;&gt;Dancer::SearchApp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::ACME&#34;&gt;Mojo::ACME&lt;/a&gt; use the Let&amp;rsquo;s Encrypt ACME API with your Mojo app&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::Pod&#34;&gt;Plack::Middleware::Pod&lt;/a&gt; can render POD files as HTML&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

