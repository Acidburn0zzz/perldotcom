<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slim Devices on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/slim-devices/</link>
    <description>Recent content in Slim Devices on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Dec 2003 00:00:00 -0800</lastBuildDate>
    <atom:link href="/tags/slim-devices/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How Perl Powers the Squeezebox</title>
      <link>http://localhost:1313/pub/2003/12/05/slimp3.html/</link>
      <pubDate>Fri, 05 Dec 2003 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2003/12/05/slimp3.html/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.slimdevices.com/&#34;&gt;Slim Devices&lt;/a&gt; made their name in 2001 with the SLIMP3, a networked MP3 and Internet radio player. The SLIMP3 won a five-out-of-five mouse rating in &lt;em&gt;Macworld&lt;/em&gt; magazine, and was featured in &lt;em&gt;GQ&lt;/em&gt; magazine and on TechTV&amp;rsquo;s &lt;em&gt;The Screen Savers&lt;/em&gt;. This year, they&amp;rsquo;re trying to repeat the success with Squeezebox, an 802.11-enabled version.&lt;/p&gt;

&lt;p&gt;The interesting thing about the SLIMP3 and the Squeezebox from our point of view, though, is that the server which drives the player is written in Perl, and developers are allowed &amp;ndash; in fact, encouraged &amp;ndash; to hack on it and make the devices do interesting things. A &lt;a href=&#34;http://www.slimdevices.com/dev_overview.html&#34;&gt;developer community&lt;/a&gt; has sprung up around the SLIMP3, and some &lt;a href=&#34;http://www.slimdevices.com/dev_third_party.html&#34;&gt;interesting third-party hacks&lt;/a&gt; have been produced.&lt;/p&gt;

&lt;p&gt;We caught up with Dean Blackketter from Slim Devices, who took some time out from moving Squeezeboxes to answer a few of our questions.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;perl.com: What made you decide, first of all, to write the server code in Perl?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dean&lt;/strong&gt;: Sean [Adams, Slim Devices founder] wrote the very first version of the software in Perl because he was able to get it up and running quickly. When I first encountered Sean and SLIMP3, I was a little afraid of Perl, having been primarily a C and C++ programmer, mostly because when I tried to read it, I got confused by idiomatic usage.&lt;/p&gt;

&lt;p&gt;I first decided to rewrite the thing in C, but I couldn&amp;rsquo;t really get started until I could read the existing code. So I bought a copy of &lt;em&gt;Learning Perl&lt;/em&gt; and read it in two evenings. Halfway through the first chapter something clicked and I said, &amp;ldquo;That&amp;rsquo;s so cool!&amp;rdquo; Then, about every 10 pages after I&amp;rsquo;d repeat, &amp;ldquo;That&amp;rsquo;s so cool!&amp;rdquo; again, but a little louder. By the end, I was sold. At that point I dug in and started making the software better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What features of Perl were particularly helpful when you were writing the SlimServer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The greatest feature of Perl, for us, is that so many people know it. Since our software is open source, we benefit from as many users as possible being able to read and improve our code base. Anybody who&amp;rsquo;s thrown together a little Perl CGI or script is a potential contributor to our software.&lt;/p&gt;

&lt;p&gt;Second, the ability for us to offer our software on a wide array of platforms (Mac OS X, Windows 98/ME/NT/2000/XP, BSD, Linux, Solaris) and also be deployed on server appliances makes it possible for us to get our product running as broadly as possible.&lt;/p&gt;

&lt;p&gt;Third, even though our product&amp;rsquo;s primary feature is playing back audio, the bulk of the software really is processing text. Our built-in HTTP server, command-line interface, device-user interface, and even music meta-information is all text-based, and Perl is nearly the perfect language for this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What issues did you have to face when considering how to distribute a Perl-based consumer application, and how did you approach them?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Distributing a Perl application on the traditional Unix-like platforms (BSD, Solaris, Linux) is easy. Things got a bit harder on Mac OS X, since command-line solutions aren&amp;rsquo;t acceptable to Mac users. Initially, I wrote a simple graphical application (in AppleScript!) that acted as a launcher for our server software, but this was really not good enough for Mac users. One of our Open Source contributors, Dave Nanian, came to the rescue and built us a System Preferences pane and installer application that work as they should on a Mac.&lt;/p&gt;

&lt;p&gt;Windows is the hardest platform for us to support. Luckily we had another Open Source contributor, Sam Saffron, who decided that building a shell application for the server software would be a great way to learn MFC, and he contributed a nice little app for this. Another contributor, Chris Eastwood, put together an installer for us. But it was the fine folks at &lt;a href=&#34;http://www.activestate.com/&#34;&gt;ActiveState&lt;/a&gt; with their &lt;a href=&#34;http://www.activestate.com/Products/Perl_Dev_Kit/&#34;&gt;Perl Dev Kit&lt;/a&gt; that really made it possible for us to release on Windows with their PerlApp (for making Perl-based .exe files) and PerlSvc (for making Perl-based Windows Services).&lt;/p&gt;

&lt;p&gt;Even with all this help, Perl on Windows is different enough in subtle ways to make it a real pain to maintain. Maybe if we had more hardcore in-house Windows experience things would be easier, but it&amp;rsquo;s a struggle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For consumer devices like the SLIMP3, the manufacturer has a choice between open and hackable, and &amp;ldquo;sealed box.&amp;rdquo; You guys went for the hackable approach, GPLing the code and setting up developers&amp;rsquo; forums. What was the rationale behind that?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I got into this, the total of my Open Source experience was running a Linux server in my basement. Sean initially released the SLIMP3 software under the GPL, which made it possible for me to help out. I quickly realized that our customers have a lot of talent and energy that they are willing to contribute to make the product better. We&amp;rsquo;re lucky to have a business model where we can make money on the hardware and give the software away. When our customers contribute, they make their own SLIMP3s (and now Squeezeboxes) more valuable to themselves and make the new units we sell to new customers more valuable as well. Everybody wins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How did you go about building a developer community behind the SlimServer project?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I like to think that the community built itself. We provided a forum (our discussion lists) and Sean and I participate on a daily basis; acting on the requests, suggestions, bug reports, and patches that people post. We&amp;rsquo;re spending more effort lately setting up our own list server and CVS system, as we had problems with our previous forums (Yahoo Groups and SourceForge, respectively), but these will give us a little more control of our virtual spaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do you decide which developer extensions to keep as third-party projects and which to integrate?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If a contribution will make the product better for a substantial portion of our customers and won&amp;rsquo;t make the product worse for any of them, then, generally speaking, it&amp;rsquo;s included. Submitted features that make the software harder or less intuitive to use, require obscure or platform-specific software or hardware to be installed, generally don&amp;rsquo;t make it in. Contributions that are useful to a large fraction of our customers and don&amp;rsquo;t diminish the product&amp;rsquo;s ability to play back music, make it in.&lt;/p&gt;

&lt;p&gt;I act as final arbiter and (hopefully) benevolent dictator, and the community has been really supportive of this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, we notice that you&amp;rsquo;ve decided to donate 10 percent of your profits to the EFF. What&amp;rsquo;s the motivation behind this?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Digital freedoms are important to the folks at Slim Devices, both personally and at a corporate level. We&amp;rsquo;ve been frustrated by not being able to offer our customers the ability to play the music that they&amp;rsquo;ve bought due to digital rights management systems and onerous licensing fees for various patents. The EFF shares our goal to free our customers&amp;rsquo; music.&lt;/p&gt;

&lt;p&gt;The Squeezebox is available from &lt;a href=&#34;http://www.slimdevices.com/&#34;&gt;Slim Devices&lt;/a&gt; and their resellers, and the server code can be downloaded from their &lt;a href=&#34;http://www.slimdevices.com/su_downloads.html&#34;&gt;downloads site&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

