<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Libyaml on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/libyaml/</link>
    <description>Recent content in Libyaml on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Sep 2013 03:18:10 +0000</lastBuildDate>
    <atom:link href="/tags/libyaml/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to Load YAML Config Files</title>
      <link>http://localhost:1313/article/29/2013/9/17/How-to-Load-YAML-Config-Files/</link>
      <pubDate>Tue, 17 Sep 2013 03:18:10 +0000</pubDate>
      
      <guid>http://localhost:1313/article/29/2013/9/17/How-to-Load-YAML-Config-Files/</guid>
      <description>

&lt;p&gt;Config files are used by programmers to store local variables as it&amp;rsquo;s usually better to update a config file than to edit source code. &lt;a href=&#34;http://www.yaml.org/spec/1.2/spec.html#Introduction&#34;&gt;YAML&lt;/a&gt; is a popular data serialization language that&amp;rsquo;s easy to read and can serialize the common Perl variables (scalars, arrays and hashes). This article describes how to read a YAML config file in Perl and access the config file&amp;rsquo;s variables.&lt;/p&gt;

&lt;h3 id=&#34;the-config-file&#34;&gt;The config file&lt;/h3&gt;

&lt;p&gt;YAML defines different types of &lt;a href=&#34;http://www.yaml.org/spec/1.2/spec.html#id2759963&#34;&gt;data collections&lt;/a&gt; that can be used to serialize (represent or store) Perl variables. Let&amp;rsquo;s define a YAML config file to store some local email data. The config.yaml file could look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
emailName: David
emailAddresses: 
    - sillymoos@cpan.org
    - perltricks.com@gmail.com
credentials:
    username: sillymoose
    password: itsasecret
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s walkthrough config.yaml: the config file starts with three hyphens (&amp;ldquo;&amp;mdash;&amp;rdquo;) to signify the start of the document, &amp;ldquo;emailName&amp;rdquo;: is a scalar mapping with the value &amp;ldquo;David&amp;rdquo;, &amp;ldquo;emailAddresses&amp;rdquo; is a sequence of email addresses and &amp;ldquo;credentials&amp;rdquo; is a mapping of scalar mappings for the email username and password.&lt;/p&gt;

&lt;h3 id=&#34;load-the-config-file&#34;&gt;Load the config file&lt;/h3&gt;

&lt;p&gt;Perl&amp;rsquo;s &lt;a href=&#34;https://metacpan.org/pod/YAML::XS&#34;&gt;YAML::XS&lt;/a&gt; module provides a &lt;code&gt;LoadFile&lt;/code&gt; subroutine that can be used to read any YAML file into a scalar variable. This script loads the &amp;ldquo;config.yaml&amp;rdquo; config file and prints it using &lt;a href=&#34;https://metacpan.org/pod/Data::Dumper&#34;&gt;Data::Dumper&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; YAML::XS &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;LoadFile&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Data::Dumper;
    
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LoadFile(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;config.yaml&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; Dumper($config);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we run this script we get the following results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;$VAR1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;emailName&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;David&amp;#39;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;credentials&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
                           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;itsasecret&amp;#39;&lt;/span&gt;,
                           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sillymoose&amp;#39;&lt;/span&gt;
                         },
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;emailAddresses&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
                              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sillymoos@cpan.org&amp;#39;&lt;/span&gt;,
                              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;perltricks.com@gmail.com&amp;#39;&lt;/span&gt;
                            ]
        };&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These results show that config.yaml has been read into &lt;code&gt;$config&lt;/code&gt; as a hash reference with three keys: &amp;ldquo;emailName&amp;rdquo;, &amp;ldquo;credentials&amp;rdquo; and &amp;ldquo;emailAddresses&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;accessing-the-config-data&#34;&gt;Accessing the config data&lt;/h3&gt;

&lt;p&gt;So far the script reads the contents of config.yaml into &lt;code&gt;$config&lt;/code&gt;. To access the config data we need to dereference the data from &lt;code&gt;$config&lt;/code&gt;. The following script shows examples of accessing the config scalar, array and hash data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; YAML::XS &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;LoadFile&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; feature &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;say&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LoadFile(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;config.yaml&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;# access the scalar emailName&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $emailName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{emailName};

&lt;span style=&#34;color:#75715e&#34;&gt;# access the array emailAddresses directly&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $firstEmailAddress &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{emailAddresses}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $secondEmailAddress&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{emailAddresses}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];

&lt;span style=&#34;color:#75715e&#34;&gt;# loop through and print emailAddresses&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (@{$config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{emailAddresses}}) { say }

&lt;span style=&#34;color:#75715e&#34;&gt;# access the credentials hash key values directly&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{credentials}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{username};
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{credentials}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{password};

&lt;span style=&#34;color:#75715e&#34;&gt;# loop through and print credentials&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (keys %{$config&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{credentials}}) {
    say &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$_: $config-&amp;gt;{credentials}-&amp;gt;{$_}&amp;#34;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;more-yaml&#34;&gt;More YAML&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/YAML::XS&#34;&gt;YAML::XS&lt;/a&gt; uses the libyaml C library and provides strong performance and adherence to the YAML specification. However if you have difficulty installing YAML::XS, there are pure Perl alternatives available: &lt;a href=&#34;https://metacpan.org/pod/YAML&#34;&gt;YAML&lt;/a&gt; is not actively maintained and has several bugs but excellent documentation and generally works, &lt;a href=&#34;https://metacpan.org/pod/YAML::Tiny&#34;&gt;YAML::Tiny&lt;/a&gt; is a newer module that implements a useful subset of the YAML specification.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

