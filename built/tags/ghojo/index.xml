<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ghojo on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/ghojo/</link>
    <description>Recent content in Ghojo on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Oct 2016 10:51:01 +0000</lastBuildDate>
    <atom:link href="/tags/ghojo/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hacktoberfest is here</title>
      <link>http://localhost:1313/article/hacktoberfest-is-here/</link>
      <pubDate>Sun, 02 Oct 2016 10:51:01 +0000</pubDate>
      
      <guid>http://localhost:1313/article/hacktoberfest-is-here/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;Hacktoberfest&lt;/a&gt; is here, and you can be part of the effort to make Perl the most popular language in the month long festival of patches and pull requests.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt; and &lt;a href=&#34;https://www.github.com/&#34;&gt;GitHub&lt;/a&gt; have teamed up to encourage new users to participate in open source. Make four pull requests to any GitHub project and they&amp;rsquo;ll give you a limited-edition Hacktoberfest t-shirt. It might not sound like much, but consider what you get besides the shirt: you&amp;rsquo;re in the commit logs of four projects and your profile has some history. That&amp;rsquo;s the first step in building your open source résumé.&lt;/p&gt;

&lt;p&gt;The sponsors suggest that projects that want to participate label their issues with &amp;ldquo;Hacktoberfest&amp;rdquo;. That&amp;rsquo;s not strictly necessary, but you can &lt;a href=&#34;https://github.com/search?q=state%3Aopen+label%3Ahacktoberfest&amp;amp;type=Issues&#34;&gt;search&lt;/a&gt; for issues that projects think are suitable for new users. I think all of my projects are suitable (I may be optimistic), so I wanted a way to label all of my issues across all of my projects.&lt;/p&gt;

&lt;p&gt;I found out about this as I was building some other GitHub tools. I looked at &lt;a href=&#34;https://metacpan.org/pod/Net::GitHub&#34;&gt;Net::GitHub&lt;/a&gt;, &lt;a href=&#34;https://metacpan.org/pod/Pithub&#34;&gt;Pithub&lt;/a&gt;, and Marchex&amp;rsquo;s &lt;a href=&#34;https://github.com/marchex/github-api-tools&#34;&gt;github-api-tools&lt;/a&gt; but I wanted to iterate through long lists of paged results and process each item as I received them. The &lt;a href=&#34;https://developer.github.com/v3/&#34;&gt;GitHub Developer API&lt;/a&gt; is quite nice and even if you are re-inventing the wheel you&amp;rsquo;re learning about wheels, making this a fun night of work.&lt;/p&gt;

&lt;p&gt;The result is &lt;a href=&#34;https://github.com/briandfoy/ghojo/blob/master/examples/hacktoberfest.pl&#34;&gt;hacktoberfest.pl&lt;/a&gt; in my &lt;a href=&#34;https://github.com/briandfoy/ghojo&#34;&gt;ghojo&lt;/a&gt; repo. It will log in, list all of my repos (there are a couple hundred), create the &amp;ldquo;Hacktoberfest&amp;rdquo; label in each, and then apply the label to each open issue.&lt;/p&gt;

&lt;p&gt;The ghojo project is still very much in its infancy (which means there&amp;rsquo;s all sorts of pull request opportunities). But I allow quite a bit of flexibility by accepting a callback for things I expect to return many items:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Ghojo;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $ghojo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ghojo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;( { token &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; } );

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $callback &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sub&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; shift;
  &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
  };

$ghojo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;repos( $repo_callback );&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each time I find a repo—and you don&amp;rsquo;t have to know how I do that—I run that callback. It&amp;rsquo;s a little bit like &lt;a href=&#34;https://metacpan.org/pod/File::Find&#34;&gt;File::Find&lt;/a&gt;&amp;rsquo;s use of the &lt;code&gt;wanted&lt;/code&gt; coderef. You don&amp;rsquo;t see the very nice API paging going on either; &lt;code&gt;repos&lt;/code&gt; keeps fetching more results as long as there are more results.&lt;/p&gt;

&lt;p&gt;That callback deals with a repo, but each repo has a list of issues. I want to process this list of issues as I run into them. So what I need is a callback to process a repo with a nested callback for the issues:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; v5&lt;span style=&#34;color:#ae81ff&#34;&gt;.24&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Ghojo;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $ghojo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ghojo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;( { token &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; } );

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $label_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hacktoberfest&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $callback &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sub&lt;/span&gt; ( $item ) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt;( $user, $repo ) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; split &lt;span style=&#34;color:#e6db74&#34;&gt;m{/}&lt;/span&gt;, $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{full_name};

  &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $repo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $ghojo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;get_repo_object( $owner, $repo );

  &lt;span style=&#34;color:#75715e&#34;&gt;# get the labels for that repo&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; %labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; map { $_&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;@{ &lt;span style=&#34;color:#e6db74&#34;&gt;qw(name color)&lt;/span&gt; } } $repo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;labels&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;@&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*;&lt;/span&gt;

  unless( exists $labels{$label_name} ) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $rc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $repo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;create_label( $label_name, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff5500&amp;#39;&lt;/span&gt; );
    say &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\tCreated $label_name label&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; $rc;
    }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $callback &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sub&lt;/span&gt; ( $item ) {
    $repo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;add_labels_to_issue( $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{number}, $label_name );
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $item;
    };

  &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $issues &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $repo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;issues( $callback );

  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $repo;
  };


$ghojo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;repos( $repo_callback );&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Curiously, within a couple of hours of uploading the program, I received my first Hacktoberfest &lt;a href=&#34;https://github.com/briandfoy/ghojo/pull/14&#34;&gt;pull request&lt;/a&gt;. &lt;a href=&#34;https://github.com/haydenty&#34;&gt;haydenty&lt;/a&gt; added the &lt;a href=&#34;https://github.com/briandfoy/ghojo/blob/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file to my ghojo repo. It&amp;rsquo;s something I&amp;rsquo;ve been meaning to add to all of my repos. Now I&amp;rsquo;m considering adding an issue to each repo to note that and label each one &amp;ldquo;Hacktoberfest&amp;rdquo;. Or someone who wants to get started with something simple can create the issues for me, or send the pull requests right off.&lt;/p&gt;

&lt;p&gt;If you have lots of repos, label your issues to help push Perl up in &lt;a href=&#34;https://github.com/search?q=state%3Aopen+label%3Ahacktoberfest&amp;amp;type=Issues&#34;&gt;the rankings&lt;/a&gt;. By the time we reach the end of the month, I&amp;rsquo;ll have a program to reverse the labeling.&lt;/p&gt;

&lt;p&gt;Some of this I&amp;rsquo;m doing for fun, and some of this I&amp;rsquo;m doing because some organizations want better GitHub tools. Somehow how October is when all of that is coming together. If you&amp;rsquo;d like me to work on this sort of stuff for you, &lt;a href=&#34;mailto:brian.d.foy@gmail.com&#34;&gt;let me know&lt;/a&gt;! But submit those pull requests first so you get that t-shirt.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

