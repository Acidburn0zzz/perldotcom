<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mojolicious on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/mojolicious/</link>
    <description>Recent content in Mojolicious on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 13:40:05 +0000</lastBuildDate>
    <atom:link href="/tags/mojolicious/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - May 2020</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---may-2020/</link>
      <pubDate>Sat, 20 Jun 2020 13:40:05 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---may-2020/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Perl Layout Executor with &lt;a href=&#34;https://metacpan.org/pod/App::plx&#34;&gt;App::plx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/FIDO::Raw&#34;&gt;FIDO::Raw&lt;/a&gt; provides bindings to the libfido2 library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Geo::LibProj::cs2cs&#34;&gt;Geo::LibProj::cs2cs&lt;/a&gt; is a wrapper for the cs2cs command line client, part of the PROJ coordinate transformation library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graph::Nauty&#34;&gt;Graph::Nauty&lt;/a&gt; provides bindings to Nauty (No AUTomorphisms, Yes?)&lt;/li&gt;
&lt;li&gt;Post OCR requests to ocr.space&amp;rsquo;s API with &lt;a href=&#34;https://metacpan.org/pod/OCR::OcrSpace&#34;&gt;OCR::OcrSpace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create reciples to declare and resolve dependencies between things with &lt;a href=&#34;https://metacpan.org/pod/Beam::Make&#34;&gt;Beam::Make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Elliptic Curve Cryptography Library with &lt;a href=&#34;https://metacpan.org/pod/Crypto::ECC&#34;&gt;Crypto::ECC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::Redis&#34;&gt;HealthCheck::Diagnostic::Redis&lt;/a&gt; provides a healthcheck for Redis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::SMTP&#34;&gt;HealthCheck::Diagnostic::SMTP&lt;/a&gt; performs a connectivity healthcheck to an SMTP mail server&lt;/li&gt;
&lt;li&gt;Show diffs of changes to files managed by Rex with &lt;a href=&#34;https://metacpan.org/pod/Rex::Hook::File::Diff&#34;&gt;Rex::Hook::File::Diff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mask secrets in log files with &lt;a href=&#34;https://metacpan.org/pod/String::Secret&#34;&gt;String::Secret&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::Groups&#34;&gt;File::Groups&lt;/a&gt; returns file extensions and media types for different files&lt;/li&gt;
&lt;li&gt;Get Digi-ID implementation with &lt;a href=&#34;https://metacpan.org/pod/DigiByte::DigiID&#34;&gt;DigiByte::DigiID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get elevation data for a given lat/lon using &lt;a href=&#34;https://metacpan.org/pod/Geo::Elevation::HGT&#34;&gt;Geo::Elevation::HGT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::Karabiner&#34;&gt;JSON::Karabiner&lt;/a&gt; can easy JSON code generaation for Karabiner-Elements, the macOS keyboard customizer&lt;/li&gt;
&lt;li&gt;Validate JSON against a schema against the latest draft with &lt;a href=&#34;https://metacpan.org/pod/JSON::Schema::Draft201909&#34;&gt;JSON::Schema::Draft201909&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Documentation and tools for using Platypus with Go: &lt;a href=&#34;https://metacpan.org/pod/FFI::Platypus::Lang::Go&#34;&gt;FFI::Platypus::Lang::Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Future::IO::Impl::Glib&#34;&gt;Future::IO::Impl::Glib&lt;/a&gt; implement Future::IO using Glib&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mu::Tiny&#34;&gt;Mu::Tiny&lt;/a&gt; is an even tinier object system&lt;/li&gt;
&lt;li&gt;Get a Try-Catch block (uses PPI) via &lt;a href=&#34;https://metacpan.org/pod/Nice::Try&#34;&gt;Nice::Try&lt;/a&gt; (great name!)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Number::Textify&#34;&gt;Number::Textify&lt;/a&gt; turns numbers into human-readable strings (customizable)&lt;/li&gt;
&lt;li&gt;Write composable, reusable tests with roles and Moo using &lt;a href=&#34;https://metacpan.org/pod/Test2::Roo&#34;&gt;Test2::Roo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::BNO055&#34;&gt;Device::Chip::BNO055&lt;/a&gt; provides a chip driver for BNO055&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PINE64::GPIO&#34;&gt;PINE64::GPIO&lt;/a&gt; provides an interface to PineA64 and PineA64+ GPIO pins&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Catalyst::View::MojoTemplate&#34;&gt;Catalyst::View::MojoTemplate&lt;/a&gt;: use Mojolicious templates in Catalyst views&lt;/li&gt;
&lt;li&gt;Store Dancer2 session data in serealized files using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Session::Sereal&#34;&gt;Dancer2::Session::Sereal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Find elements in a HTML::Element DOM using CSS selectors with &lt;a href=&#34;https://metacpan.org/pod/HTML::Selector::Element&#34;&gt;HTML::Selector::Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Place a limit on &amp;ldquo;concurrent&amp;rdquo; promises with &lt;a href=&#34;https://metacpan.org/pod/Mojo::Promise::Limiter&#34;&gt;Mojo::Promise::Limiter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add role-based access with context to a Mojo app via  &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ContextAuth&#34;&gt;Mojolicious::Plugin::ContextAuth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/POE::Component::SmokeBox::Recent::HTTP&#34;&gt;POE::Component::SmokeBox::Recent::HTTP&lt;/a&gt; is an extremely minimal HTTP client&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - April 2020</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---april-2020/</link>
      <pubDate>Wed, 20 May 2020 01:53:33 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---april-2020/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use the open, decentralizedc Matrix communication network with &lt;a href=&#34;https://metacpan.org/pod/Net::Matrix::Webhook&#34;&gt;Net::Matrix::Webhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Call Docker CLI commands from Perl using &lt;a href=&#34;https://metacpan.org/pod/Docker::CLI::Wrapper&#34;&gt;Docker::CLI::Wrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/InfluxDB::Client::Simple&#34;&gt;InfluxDB::Client::Simple&lt;/a&gt; is a lightweight InfluxDB client&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Termux::API&#34;&gt;Termux::API&lt;/a&gt; provides a Perly interface to the popular Android terminal emulator&lt;/li&gt;
&lt;li&gt;Get financial data via Yahoo Finance with &lt;a href=&#34;https://metacpan.org/pod/Yahoo::Finance&#34;&gt;Yahoo::Finance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Grant Street Group added more healthcheck modules:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::DBHCheck&#34;&gt;HealthCheck::Diagnostic::DBHCheck&lt;/a&gt; checks a database handle has read/write permissions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::SFTP&#34;&gt;HealthCheck::Diagnostic::SFTP&lt;/a&gt; checks secure FTP access&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::WebRequest&#34;&gt;HealthCheck::Diagnostic::WebRequest&lt;/a&gt; checks HTTP/HTTPS connectivity&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Moo-ify DBIx::Class rows using &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Moo::ResultClass&#34;&gt;DBIx::Class::Moo::ResultClass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Random::Structure::UTF8&#34;&gt;Data::Random::Structure::UTF8&lt;/a&gt; can fill a data structure with random UTF-8 data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::Schema::Generate&#34;&gt;JSON::Schema::Generate&lt;/a&gt; generates JSON schemas from data structures&lt;/li&gt;
&lt;li&gt;Use named (instead of positional) placeholders with SQL queries via &lt;a href=&#34;https://metacpan.org/pod/SQL::Bind&#34;&gt;SQL::Bind&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Docker::Names::Random&#34;&gt;Docker::Names::Random&lt;/a&gt; generates random strings like Docker does for container names (e.g. &amp;ldquo;lazy_fermat&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;A class based approach for scripting options: &lt;a href=&#34;https://metacpan.org/pod/Getopt::Class&#34;&gt;Getopt::Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get simple, non-blocking IPC with &lt;a href=&#34;https://metacpan.org/pod/IPC::Simple&#34;&gt;IPC::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooseX::amine&#34;&gt;MooseX::amine&lt;/a&gt; ++ for module naming, it let&amp;rsquo;s you examine the methods and properties of Moose objects&lt;/li&gt;
&lt;li&gt;Return from multiple blocks in one go with &lt;a href=&#34;https://metacpan.org/pod/Return::Deep&#34;&gt;Return::Deep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Ability&#34;&gt;Test::Ability&lt;/a&gt; provides property-based testing routines&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/fs::Promises&#34;&gt;fs::Promises&lt;/a&gt; provides a promises interface to non-blocking file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Manage passwords in Dancer2 with Argon2 using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Argon2&#34;&gt;Dancer2::Plugin::Argon2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the Minion job queue in your Dancer2 apps with &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Minion&#34;&gt;Dancer2::Plugin::Minion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Override any method in your Kelp application with &lt;a href=&#34;https://metacpan.org/pod/KelpX::Hooks&#34;&gt;KelpX::Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Log::Role::Color&#34;&gt;Mojo::Log::Role::Color&lt;/a&gt; adds color to your interactive mojo logs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::UserAgent::Role::Signature&#34;&gt;Mojo::UserAgent::Role::Signature&lt;/a&gt; automatically signs request transactions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Multipart::Encoder&#34;&gt;Multipart::Encoder&lt;/a&gt; is an encoder for mime-type multipart/form-data.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - March 2020</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---march-2020/</link>
      <pubDate>Wed, 29 Apr 2020 01:05:57 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---march-2020/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Get a colorful calendar in the terminal with &lt;a href=&#34;https://metacpan.org/pod/week&#34;&gt;App::week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Google::reCAPTCHA::v3&#34;&gt;Google::reCAPTCHA::v3&lt;/a&gt; is another Google captcha module&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/GraphQL::Client&#34;&gt;GraphQL::Client&lt;/a&gt; … is a GraphQL client&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Masscan::Scanner&#34;&gt;Masscan::Scanner&lt;/a&gt; makes it easy to use the masscan port scanner.&lt;/li&gt;
&lt;li&gt;Make non-blocking requests to LastFM with &lt;a href=&#34;https://metacpan.org/pod/Mojo::WebService::LastFM&#34;&gt;Mojo::WebService::LastFM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use Telegram&amp;rsquo;s Bot API with &lt;a href=&#34;https://metacpan.org/pod/Net::API::Telegram&#34;&gt;Net::API::Telegram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::OpenVAS&#34;&gt;Net::OpenVAS&lt;/a&gt; let&amp;rsquo;s you program Greenbone&amp;rsquo;s OpenVAS platform with Perl&lt;/li&gt;
&lt;li&gt;Use Elasticsearch 6.x APIs with &lt;a href=&#34;https://metacpan.org/pod/Search::Elasticsearch::Client::6_0&#34;&gt;Search::Elasticsearch::Client::6_0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Block::NJH&#34;&gt;Block::NJH&lt;/a&gt; is interesting; add it to your CPAN distribution to &amp;ldquo;prevent your tests from running on NJH&amp;rsquo;s broken smokers&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Config::Structured&#34;&gt;Config::Structured&lt;/a&gt; provides &amp;ldquo;generalized and structured configuration value access&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Ping a database handle to check its health using &lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::DBHPing&#34;&gt;HealthCheck::Diagnostic::DBHPing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::FilePermissions&#34;&gt;HealthCheck::Diagnostic::FilePermissions&lt;/a&gt; checks filepaths for expected permissions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DB::Object&#34;&gt;DB::Object&lt;/a&gt; is a database abstraction built on top of DBI&lt;/li&gt;
&lt;li&gt;Inspect DBIC objects in a compact format using &lt;a href=&#34;https://metacpan.org/pod/Data::Tersify::Plugin::DBIx::Class&#34;&gt;Data::Tersify::Plugin::DBIx::Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MIME::Base32::XS&#34;&gt;MIME::Base32::XS&lt;/a&gt; is a faster Base32 encoder/decoder&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Statistics::Covid&#34;&gt;Statistics::Covid&lt;/a&gt; fetches and manages Covid-19 statistics&lt;/li&gt;
&lt;li&gt;Get a Postgresql mock server for testing via &lt;a href=&#34;https://metacpan.org/pod/Test::PostgreSQL::Docker&#34;&gt;Test::PostgreSQL::Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bind Perl data structures into XML with &lt;a href=&#34;https://metacpan.org/pod/XML::BindData&#34;&gt;XML::BindData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/XML::Minifier&#34;&gt;XML::Minifier&lt;/a&gt; is a configurable XML minifier&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::Wherefore&#34;&gt;Devel::Wherefore&lt;/a&gt; helps debug Perl: &amp;ldquo;Where the heck did these subroutines come from?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Create relative symbolic links &lt;a href=&#34;https://metacpan.org/pod/File::Symlink::Relative&#34;&gt;File::Symlink::Relative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Module::Generic&#34;&gt;Module::Generic&lt;/a&gt; is another class library, it uses AUTOLOAD for getter/setter methods&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/new&#34;&gt;new&lt;/a&gt; saves you from typing module names twice in one liners&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::DB::Taxonomy::sqlite&#34;&gt;Bio::DB::Taxonomy::sqlite&lt;/a&gt; stores and manages NCBI data using sqlite&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::Polynomial::Chebyshev&#34;&gt;Math::Polynomial::Chebyshev&lt;/a&gt; creates Chebyshev polynomials&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Store Catalyst sessions in Redis with &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::Session::Store::RedisFast&#34;&gt;Catalyst::Plugin::Session::Store::RedisFast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Not a traditional distribution, but &lt;a href=&#34;https://metacpan.org/pod/Mojo::Server::AWSLambda&#34;&gt;Mojo::Server::AWSLambda&lt;/a&gt; contains a simple example of how to define an AWS Lambda function which uses Mojo&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Sticker&#34;&gt;Mojolicious::Plugin::Sticker&lt;/a&gt; combines Mojo apps into a single app&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - January 2020</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---january-2020/</link>
      <pubDate>Mon, 10 Feb 2020 01:28:47 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---january-2020/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::geoip&#34;&gt;App::geoip&lt;/a&gt; show geological data based on hostname or IP addresses&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::url&#34;&gt;App::url&lt;/a&gt; format a URL according to a sprintf-like template&lt;/li&gt;
&lt;li&gt;Push metrics to prometheus exporter with &lt;a href=&#34;https://metacpan.org/pod/Net::Prometheus::Pushgateway&#34;&gt;Net::Prometheus::Pushgateway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Shout&#34;&gt;Shout&lt;/a&gt; is a thin wrapper around libshout, the live streaming library&lt;/li&gt;
&lt;li&gt;Report bad actors to AbuseDB via their v2 API: &lt;a href=&#34;https://metacpan.org/pod/WebService::AbuseIPDB&#34;&gt;WebService::AbuseIPDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Mailgun&#34;&gt;WebService::Mailgun&lt;/a&gt; is an API client for Mailgun&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Clear the terminal using &lt;a href=&#34;https://metacpan.org/pod/Term::Clear&#34;&gt;Term::Clear&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Return an endless stream of distinct RGB colors with &lt;a href=&#34;https://metacpan.org/pod/Chart::Colors&#34;&gt;Chart::Colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::BackupCopy&#34;&gt;File::BackupCopy&lt;/a&gt; makes backing up files easier&lt;/li&gt;
&lt;li&gt;Calculate the mean and variance of a set (Welford&amp;rsquo;s algorithm) using &lt;a href=&#34;https://metacpan.org/pod/Math::StdDev&#34;&gt;Math::StdDev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/TOML::Tiny&#34;&gt;TOML::Tiny&lt;/a&gt; is a minimal, pure perl TOML parser and serializer&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Express yourself through moo with &lt;a href=&#34;https://metacpan.org/pod/MooX::Pression&#34;&gt;MooX::Pression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Object::Adhoc&#34;&gt;Object::Adhoc&lt;/a&gt; can mint objects without the hassle of defining a class first&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Sub::HandlesVia&#34;&gt;Sub::HandlesVia&lt;/a&gt; provies another way to define &lt;code&gt;handles_via&lt;/code&gt; in Moo/Moose/Mouse&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Detect User-Agents using &lt;a href=&#34;https://metacpan.org/pod/Duadua&#34;&gt;Duadua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/FTN::Crypt&#34;&gt;FTN::Crypt&lt;/a&gt; can encrypt/decrypt Fido Technology Nets netmail&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Systemd&#34;&gt;Mojolicious::Plugin::Systemd&lt;/a&gt; lets you configure your mojo app with systemd&lt;/li&gt;
&lt;li&gt;The Mozilla Public Suffix List: &lt;a href=&#34;https://metacpan.org/pod/Net::PublicSuffixList&#34;&gt;Net::PublicSuffixList&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - December 2019</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---december-2019/</link>
      <pubDate>Sun, 05 Jan 2020 20:19:30 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---december-2019/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Quickly create a REST accessible AWS Lambda functions with &lt;a href=&#34;https://metacpan.org/pod/AWS::Lambda::Quick&#34;&gt;AWS::Lambda::Quick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Advanced Entry Point (for docker and other containers) &lt;a href=&#34;https://metacpan.org/pod/App::aep&#34;&gt;App::aep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::lrrr&#34;&gt;App::lrrr&lt;/a&gt; watches one or more directories and re-runs a given command when the contents change&lt;/li&gt;
&lt;li&gt;Get an auth token for GitHub with &lt;a href=&#34;https://metacpan.org/pod/GitHub::Apps::Auth&#34;&gt;GitHub::Apps::Auth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Neovim::Ext&#34;&gt;Neovim::Ext&lt;/a&gt; provides Perl bindings for neovim&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Thumbalizr&#34;&gt;WebService::Thumbalizr&lt;/a&gt; provides an interface to the web service to create screenshots of web pages&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Get the path to the source file or parent directory using &lt;a href=&#34;https://metacpan.org/pod/Path::This&#34;&gt;Path::This&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use libarchive from Perl with &lt;a href=&#34;https://metacpan.org/pod/Archive::Raw&#34;&gt;Archive::Raw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::NamedParams&#34;&gt;DBIx::NamedParams&lt;/a&gt; let&amp;rsquo;s you use execute SQL queries using named parameters (instead of &amp;lsquo;?&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Read and validate CSVs with &lt;a href=&#34;https://metacpan.org/pod/Data::Validate::CSV&#34;&gt;Data::Validate::CSV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Nanoid&#34;&gt;Nanoid&lt;/a&gt; is a port of the JavaScript unique string generator library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Validate::Simple&#34;&gt;Validate::Simple&lt;/a&gt; is a generic data validation module&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://metacpan.org/pod/OSSEC&#34;&gt;OSSEC&lt;/a&gt; (intrusion detection) with Perl&lt;/li&gt;
&lt;li&gt;Faster promises with &lt;a href=&#34;https://metacpan.org/pod/Promise::XS&#34;&gt;Promise::XS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::CI&#34;&gt;Test::CI&lt;/a&gt;: get details about the current CI environment&lt;/li&gt;
&lt;li&gt;Write object-oriented tests that work with Test2 using &lt;a href=&#34;https://metacpan.org/pod/Test::Class::Tiny&#34;&gt;Test::Class::Tiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::TraceCalls&#34;&gt;Test::TraceCalls&lt;/a&gt; outputs all subroutines called by a test script in JSON&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/overload::open&#34;&gt;overload::open&lt;/a&gt; let&amp;rsquo;s you hook into the &lt;code&gt;open&lt;/code&gt; function&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/ISAL::Crypto&#34;&gt;ISAL::Crypto&lt;/a&gt; can &amp;ldquo;run multiple hash calculations at the same time on one cpu using vector registers&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::Polynomial::Cyclotomic&#34;&gt;Math::Polynomial::Cyclotomic&lt;/a&gt; s a &amp;ldquo;cyclotomic polynomials generator&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Throttle::Adaptive&#34;&gt;Throttle::Adaptive&lt;/a&gt; implements the &amp;ldquo;adaptive throttling&amp;rdquo; algorithm described in Google&amp;rsquo;s SRE book&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Make a Dancer2 app mobile-aware using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::MobileDevice&#34;&gt;Dancer2::Plugin::MobileDevice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mail::Qmail::Filter&#34;&gt;Mail::Qmail::Filter&lt;/a&gt; filters incoming e-mails when using qmail as an MTA&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::DB::Results::Role::Struct&#34;&gt;Mojo::DB::Results::Role::Struct&lt;/a&gt; returns database query results as structs&lt;/li&gt;
&lt;li&gt;Apply roles to Mojo database results with &lt;a href=&#34;https://metacpan.org/pod/Mojo::DB::Role::ResultsRoles&#34;&gt;Mojo::DB::Role::ResultsRoles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - October 2019</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---october-2019/</link>
      <pubDate>Sat, 16 Nov 2019 00:09:25 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---october-2019/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Azure::Storage::Blob::Client&#34;&gt;Azure::Storage::Blob::Client&lt;/a&gt; can store blogs via the Azure API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Google::RestApi&#34;&gt;Google::RestApi&lt;/a&gt; opens an Oauth2 connection to Google APIs and includes modules for working with Drive and Sheets&lt;/li&gt;
&lt;li&gt;Find corresponding GitHub issues for RT numbers with &lt;a href=&#34;https://metacpan.org/pod/Perl::RT2Github&#34;&gt;Perl::RT2Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Kafka&#34;&gt;Net::Kafka&lt;/a&gt; aims to be a high-performant client for Apache Kafka&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Deduce::Ingest&#34;&gt;WWW::Deduce::Ingest&lt;/a&gt; is an interface to the (undocumented?) Deduce Ingestion API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Generate bash tools from YAML with &lt;a href=&#34;https://metacpan.org/pod/distribution/App-Spec-Bash/lib/appspec-bash.pod&#34;&gt;appspec-bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dir::Flock&#34;&gt;Dir::Flock&lt;/a&gt; provides a typical file locking mechanism, but on directories. Bonus! it works on NFS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::ParseError&#34;&gt;DBIx::Class::ParseError&lt;/a&gt; parses database errors into DBIx::Class::Exception objects&lt;/li&gt;
&lt;li&gt;Eval(!) Perl code found in JSON using &lt;a href=&#34;https://metacpan.org/pod/JSON::Eval&#34;&gt;JSON::Eval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MySQL::Dump::Parser::XS&#34;&gt;MySQL::Dump::Parser::XS&lt;/a&gt; is a fast mysqldump parser&lt;/li&gt;
&lt;li&gt;Parse a typical search engine query string using &lt;a href=&#34;https://metacpan.org/pod/Parqus&#34;&gt;Parqus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Escapes strings into RTF with &lt;a href=&#34;https://metacpan.org/pod/RTF::Encode&#34;&gt;RTF::Encode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;IIIF Image API implementation - &lt;a href=&#34;https://metacpan.org/pod/IIIF&#34;&gt;IIIF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get bindings for librtmidi the Realtime MIDI library with &lt;a href=&#34;https://metacpan.org/pod/MIDI::RtMidi::FFI&#34;&gt;MIDI::RtMidi::FFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MP4::LibMP4v2&#34;&gt;MP4::LibMP4v2&lt;/a&gt; provides a Perl interface to libmp4v2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/With::Roles&#34;&gt;With::Roles&lt;/a&gt; can compose roles into classes, objects and compound roles&lt;/li&gt;
&lt;li&gt;Import methods to be used like keywords using &lt;a href=&#34;https://metacpan.org/pod/methods::import&#34;&gt;methods::import&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Algorithm::Odometer::Tiny&#34;&gt;Algorithm::Odometer::Tiny&lt;/a&gt; generates &amp;ldquo;base-N odometer&amp;rdquo; permutations&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::DCT&#34;&gt;Math::DCT&lt;/a&gt; can do 1D and NxN 2D Fast Discreet Cosine Transforms (DCT-II)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::HTTPStatus&#34;&gt;Mojo::HTTPStatus&lt;/a&gt; exports readable constants for HTTP response status codes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Promise::Role::Repeat&#34;&gt;Mojo::Promise::Role::Repeat&lt;/a&gt; provides a Promise looping construct with break&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Command::bcrypt&#34;&gt;Mojolicious::Command::bcrypt&lt;/a&gt; bcrypt a password using the settings in your Mojolicious app.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - August 2019</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---august-2019/</link>
      <pubDate>Tue, 10 Sep 2019 17:18:24 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---august-2019/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::GoShippo&#34;&gt;WebService::GoShippo&lt;/a&gt; is a simple client for Shippo&amp;rsquo;s shipping and handling API&lt;/li&gt;
&lt;li&gt;Use Google&amp;rsquo;s CloudTasks API to queue up tasks with &lt;a href=&#34;https://metacpan.org/pod/Google::CloudTasks&#34;&gt;Google::CloudTasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Manage machines and software using the Puppet Enterprise API with &lt;a href=&#34;https://metacpan.org/pod/Puppet::Classify&#34;&gt;Puppet::Classify&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Puppet::Orchestrator&#34;&gt;Puppet::Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Configure 433 MHz HC-12 Radio Frequency serial transceivers with &lt;a href=&#34;https://metacpan.org/pod/RF::HC12&#34;&gt;RF::HC12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::PlantUML&#34;&gt;WWW::PlantUML&lt;/a&gt; is a simple client for retrieving diagram URLs from a plantuml server&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Parse ldap config files with &lt;a href=&#34;https://metacpan.org/pod/Config::Parser::ldap&#34;&gt;Config::Parser::ldap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use XOAUTH2 authentication with Net::POP3 via &lt;a href=&#34;https://metacpan.org/pod/Net::POP3::XOAuth2&#34;&gt;Net::POP3::XOAuth2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/OpenBSD::Checkpass&#34;&gt;OpenBSD::Checkpass&lt;/a&gt; provides an interface to OpenBSD crypt_checkpass(3)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Helper::WindowFunctions&#34;&gt;DBIx::Class::Helper::WindowFunctions&lt;/a&gt; adds basic support for window functions to DBIx::Class&lt;/li&gt;
&lt;li&gt;Clean data so it is safe to output to JSON using &lt;a href=&#34;https://metacpan.org/pod/Data::Clean::ForJSON&#34;&gt;Data::Clean::ForJSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dita::PCD&#34;&gt;Dita::PCD&lt;/a&gt; is an implementation of the Please Change Dita Language&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Puppet::DB&#34;&gt;Puppet::DB&lt;/a&gt; retrieves data (facts, reports) from a Puppet DB&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Code::Quality&#34;&gt;Code::Quality&lt;/a&gt; uses static analysis  (clang, lizard) to compute a &amp;ldquo;code quality&amp;rdquo; metric for a program&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Curses::Readline&#34;&gt;Curses::Readline&lt;/a&gt; provides readline for curses&lt;/li&gt;
&lt;li&gt;Perform continuous database migration using &lt;a href=&#34;https://metacpan.org/pod/Geoffrey&#34;&gt;Geoffrey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Partially apply parameters to functions with &lt;a href=&#34;https://metacpan.org/pod/PartialApplication&#34;&gt;PartialApplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Profile database queries run during tests using &lt;a href=&#34;https://metacpan.org/pod/Test2::Plugin::DBIProfile&#34;&gt;Test2::Plugin::DBIProfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Collect and display test memory usage information with &lt;a href=&#34;https://metacpan.org/pod/Test2::Plugin::MemUsage&#34;&gt;Test2::Plugin::MemUsage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/parent::versioned&#34;&gt;parent::versioned&lt;/a&gt; establishes ISA relationships with base classes at compile time, with version checking&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Layout&#34;&gt;Text::Layout&lt;/a&gt; can create documents/graphics using the Pango style markup formatting (PDFs, cairo)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;gaming&#34;&gt;Gaming&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Run Conway&amp;rsquo;s Game of Life faster using &lt;a href=&#34;https://metacpan.org/pod/Game::Life::Faster&#34;&gt;Game::Life::Faster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Command::static&#34;&gt;Mojolicious::Command::static&lt;/a&gt; stands up a simple static file server&lt;/li&gt;
&lt;li&gt;Test Mojo under Test2 with &lt;a href=&#34;https://metacpan.org/pod/Test2::MojoX&#34;&gt;Test2::MojoX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Weasel::DriverRole&#34;&gt;Weasel::DriverRole&lt;/a&gt; provides an API definition for Weasel&amp;rsquo;s driver wrappers&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - March 2019</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---march-2019/</link>
      <pubDate>Thu, 11 Apr 2019 01:41:28 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---march-2019/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::PhotoDB&#34;&gt;App::PhotoDB&lt;/a&gt; manages photography data&lt;/li&gt;
&lt;li&gt;Get command line utils for identifying module dependencies, function names and more with &lt;a href=&#34;https://metacpan.org/pod/App::perlutils&#34;&gt;App::perlutils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::rsync::retry&#34;&gt;App::rsync::retry&lt;/a&gt; wraps Rsync to retry on transfer errors&lt;/li&gt;
&lt;li&gt;Print horizontal rules of different styles ot the terminal with &lt;a href=&#34;https://metacpan.org/pod/App::term::hr&#34;&gt;App::term::hr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run Perl scripts in AWS Lambda with &lt;a href=&#34;https://metacpan.org/pod/AWS::Lambda&#34;&gt;AWS::Lambda&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DNS::Unbound&#34;&gt;DNS::Unbound&lt;/a&gt; provides an interface to NLNetLabs&amp;rsquo;s recursive DNS resolver&lt;/li&gt;
&lt;li&gt;Download a deck from speakerdeck.com with &lt;a href=&#34;https://metacpan.org/pod/WWW::Speakerdeck::Download&#34;&gt;WWW::Speakerdeck::Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Tk::JThumbnail&#34;&gt;Tk::JThumbnail&lt;/a&gt; is a file browser implemented in Tk&lt;/li&gt;
&lt;li&gt;Pixela is an activity tracking service, use it from Perl with &lt;a href=&#34;https://metacpan.org/pod/WebService::Pixela&#34;&gt;WebService::Pixela&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Slack::WebHook&#34;&gt;Slack::WebHook&lt;/a&gt; can post to a Slack webhook with preset layouts and colors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::ValidSign&#34;&gt;WebService::ValidSign&lt;/a&gt; provides a REST API client for ValidSign, the digital signature app&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/distribution/App-ucpan/script/ucpan&#34;&gt;App::ucpan&lt;/a&gt; updates CPAN modules with easy-to-read information&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dotenv&#34;&gt;Dotenv&lt;/a&gt; supports per-environment configurations, which is the &lt;em&gt;only&lt;/em&gt; way to do them in 12 factor apps&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Chart::GGPlot&#34;&gt;Chart::GGPlot&lt;/a&gt; is an ambitious port of ggplot2 to Perl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Faker::Country&#34;&gt;Data::Faker::Country&lt;/a&gt; provides country and ISO country code data generation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graph::Traverse&#34;&gt;Graph::Traverse&lt;/a&gt; adds a traverse() method for the Graph module&lt;/li&gt;
&lt;li&gt;Syndicate in JSON using &lt;a href=&#34;https://metacpan.org/pod/JSON::Feed&#34;&gt;JSON::Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Protocol::Database::PostgreSQL&#34;&gt;Protocol::Database::PostgreSQL&lt;/a&gt; is a PostgreSQL wire protocol implementation for Database::Async&lt;/li&gt;
&lt;li&gt;Quickly test if two arrays are identical using &lt;a href=&#34;https://metacpan.org/pod/Arrays::Same&#34;&gt;Arrays::Same&lt;/a&gt; (implemented in XS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Control the GPIO pins on the original NTC Chip with &lt;a href=&#34;https://metacpan.org/pod/Device::NTCChip::GPIO&#34;&gt;Device::NTCChip::GPIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Yeelight&#34;&gt;Device::Yeelight&lt;/a&gt; is a controller for Yeelight smart devices&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Giblog&#34;&gt;Giblog&lt;/a&gt; is an HTML blog builder backed by Git&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HTTP::Simple&#34;&gt;HTTP::Simple&lt;/a&gt; provides a simple procedural interface to HTTP::Tiny&lt;/li&gt;
&lt;li&gt;Remove the Server header from the Mojolicious response using &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::NoServerHeader&#34;&gt;Mojolicious::Plugin::NoServerHeader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::TextExceptions&#34;&gt;Mojolicious::Plugin::TextExceptions&lt;/a&gt; renders exceptions as text for command line user agents&lt;/li&gt;
&lt;li&gt;Use Wordpress as a headless CMS with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Wordpress&#34;&gt;Mojolicious::Plugin::Wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Catch unreachable code after a Catalyst &lt;code&gt;detach&lt;/code&gt; using &lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::Catalyst::ProhibitUnreachableCode&#34;&gt;Perl::Critic::Policy::Catalyst::ProhibitUnreachableCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - January 2019</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---january-2019/</link>
      <pubDate>Tue, 05 Feb 2019 01:48:21 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---january-2019/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Perlambda&#34;&gt;App::Perlambda&lt;/a&gt; manages Perl AWS lambda functions - woot!&lt;/li&gt;
&lt;li&gt;Tidy your MacOS Time Machine backups with &lt;a href=&#34;https://metacpan.org/pod/distribution/App-tmclean/script/tmclean&#34;&gt;App::tmclean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the Cisco Broadworks OCI-P API with &lt;a href=&#34;https://metacpan.org/pod/Broadworks::OCIP&#34;&gt;Broadworks::OCIP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Kubernetes::REST&#34;&gt;Kubernetes::REST&lt;/a&gt; is a client for the Kubernetes REST API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::DailyConnect&#34;&gt;WebService::DailyConnect&lt;/a&gt; provides a client to download events from Daily Connect, the daycare information service&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Auth0&#34;&gt;WebService::Auth0&lt;/a&gt; is a client for auth0.com, the identification platform&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Win32::Backup::Robocopy&#34;&gt;Win32::Backup::Robocopy&lt;/a&gt; is a simple backup solution with a wrapper around robocopy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Dothe&#34;&gt;App::Dothe&lt;/a&gt; is a YAML-based task runner inspired by go-task&lt;/li&gt;
&lt;li&gt;Generate and provide a CPAN::SQLite database using &lt;a href=&#34;https://metacpan.org/pod/WWW::CPAN::SQLite&#34;&gt;WWW::CPAN::SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dir::Manifest&#34;&gt;Dir::Manifest&lt;/a&gt; can manage files conveniently via a manifest&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Monitor &lt;code&gt;@INC&lt;/code&gt; modification with &lt;a href=&#34;https://metacpan.org/pod/Acme::AtIncPolice&#34;&gt;Acme::AtIncPolice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yet another class accessor generator: &lt;a href=&#34;https://metacpan.org/pod/Class::Data::Lite&#34;&gt;Class::Data::Lite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Devel::Probe&#34;&gt;Devel::Probe&lt;/a&gt; is a quick &amp;amp; dirty code probe implementation&lt;/li&gt;
&lt;li&gt;Trace calls in your code, optionally filtering CORE calls with &lt;a href=&#34;https://metacpan.org/pod/Devel::TRay&#34;&gt;Devel::TRay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Generate unique, expiring keys for your software with &lt;a href=&#34;https://metacpan.org/pod/Enterprise::Licence&#34;&gt;Enterprise::Licence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Measure how long blocking/non-blocking Mojo ops take with &lt;a href=&#34;https://metacpan.org/pod/Devel::MojoProf&#34;&gt;Devel::MojoProf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Encode/decode short urls via bijection using &lt;a href=&#34;https://metacpan.org/pod/Short::URL&#34;&gt;Short::URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parse Kubernetes swagger/OpenAPI schema files with &lt;a href=&#34;https://metacpan.org/pod/Swagger::Schema::Kubernetes&#34;&gt;Swagger::Schema::Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Mojo::Role::StopOnFail&#34;&gt;Test::Mojo::Role::StopOnFail&lt;/a&gt; stops Mojo tests after the first failure&lt;/li&gt;
&lt;li&gt;Make URI parse unix websockets (ws+unix) using &lt;a href=&#34;https://metacpan.org/pod/URI::ws_Punix&#34;&gt;URI::ws_Punix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - November 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---november-2018/</link>
      <pubDate>Tue, 18 Dec 2018 21:08:15 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---november-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Get a perly interface to Cisco Firepower Management Center using &lt;a href=&#34;https://metacpan.org/pod/Net::Cisco::FMC::v1&#34;&gt;Net::Cisco::FMC::v1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mail::DataFeed::Abusix&#34;&gt;Mail::DataFeed::Abusix&lt;/a&gt; can send SMTP transaction data to the Abusix transaction feed&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Neo4j::Driver&#34;&gt;Neo4j::Driver&lt;/a&gt; is an unofficial implementation of the Neo4j Driver API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/REST::Client::CrossRef&#34;&gt;REST::Client::CrossRef&lt;/a&gt; provides a client for the CrossRef API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Parse a distribution name using &lt;a href=&#34;https://metacpan.org/pod/Parse::Distname&#34;&gt;Parse::Distname&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Smooth&#34;&gt;DBIx::Class::Smooth&lt;/a&gt; provides more sugar for DBIx::Class&lt;/li&gt;
&lt;li&gt;Bools aren&amp;rsquo;t just for JSON! Use them everywhere with &lt;a href=&#34;https://metacpan.org/pod/Data::Bool&#34;&gt;Data::Bool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Dict&#34;&gt;Data::Dict&lt;/a&gt; supplies a hash-based dictionary object&lt;/li&gt;
&lt;li&gt;Parse the tabular data format generated by database SELECTs with &lt;a href=&#34;https://metacpan.org/pod/Table::BoxFormat&#34;&gt;Table::BoxFormat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Graphics::Skullplot&#34;&gt;Graphics::Skullplot&lt;/a&gt; can plot the result of a SQL select query&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::AsyncAwait&#34;&gt;Mojo::AsyncAwait&lt;/a&gt; is an Async/Await implementation for the Mojolicious ecosystem&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Path::Tiny::Glob&#34;&gt;Path::Tiny::Glob&lt;/a&gt; is a file globbing utility which supports &lt;code&gt;**&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enforce using the /a or /aa modifier with regular expressions with &lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::RegularExpressions::RequireDefault&#34;&gt;Perl::Critic::Policy::RegularExpressions::RequireDefault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t permit reuse of names for different types of variables using &lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::Variables::NameReuse&#34;&gt;Perl::Critic::Policy::Variables::NameReuse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::Chip::ADT7470&#34;&gt;Device::Chip::ADT7470&lt;/a&gt; is a chip driver for the ADT7470&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Parse the HTTP header &amp;lsquo;Accept-Charset&amp;rsquo; using &lt;a href=&#34;https://metacpan.org/pod/HTTP::AcceptCharset&#34;&gt;HTTP::AcceptCharset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Validate mails against DMARC policy asynchronously using &lt;a href=&#34;https://metacpan.org/pod/Mail::DMARC::Iterator&#34;&gt;Mail::DMARC::Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Export a Mojolicious website to static files using &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Command::export&#34;&gt;Mojolicious::Command::export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::Debug::RefCounts&#34;&gt;Plack::Middleware::Debug::RefCounts&lt;/a&gt; debug Plack apps with refcounts&lt;/li&gt;
&lt;li&gt;Super-convenient blogging with Markdown and Dropbox: &lt;a href=&#34;https://metacpan.org/pod/Plerd&#34;&gt;Plerd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Perl and CGI</title>
      <link>http://localhost:1313/article/perl-and-cgi/</link>
      <pubDate>Mon, 12 Nov 2018 10:36:08 +0000</pubDate>
      
      <guid>http://localhost:1313/article/perl-and-cgi/</guid>
      <description>

&lt;p&gt;CGI stands for &lt;a href=&#34;https://tools.ietf.org/html/rfc3875#section-6.2.1&#34;&gt;Common Gateway Interface&lt;/a&gt;, it&amp;rsquo;s a protocol for executing scripts via web requests, and in the late 1990&amp;rsquo;s was the main way to write dynamic programs for the Web. It&amp;rsquo;s also the name of the Perl &lt;a href=&#34;https://metacpan.org/pod/CGI&#34;&gt;module&lt;/a&gt; we used (and for me, still use) to code for the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; you probably don&amp;rsquo;t want to use CGI for modern web development, see &lt;a href=&#34;#why-not-to-use-cgi&#34;&gt;Why Not to Use CGI&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cgi-and-http&#34;&gt;CGI and HTTP&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ve probably heard of HTTP (HyperText Transfer Protocol), which is the communications protocol used by most Internet services. Broadly speaking, CGI programs receive HTTP requests, and return HTTP responses. An HTTP response header must include the status and the content-type. CGI (the interface) makes this easy.&lt;/p&gt;

&lt;p&gt;We could hardcode a Perl script to return an HTTP response header and HTML in the body:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env perl&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;;
Status: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;
Content&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;type: text&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;html

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;!&lt;/span&gt;doctype html&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; HTML Goes Here &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But CGI.pm can handle the header for us:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env perl&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; CGI;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $cgi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CGI&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;();
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;header;

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;!&lt;/span&gt;doctype html&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; HTML Goes Here &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you don&amp;rsquo;t have to just send HTML text.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env perl&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; CGI;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $cgi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CGI&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;();
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;header( &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;type &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt; );

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;;
This is now text
&lt;span style=&#34;color:#66d9ef&#34;&gt;END&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But that is not the limit, by far. The content-type is a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types&#34;&gt;Multipurpose Internet Mail Extension (MIME) type&lt;/a&gt;, and it determines how the browser handles the message once it returns. The above example treats the &amp;ldquo;This is now text&amp;rdquo; message as text, and displays it as such. If the content-type was &amp;ldquo;text/html&amp;rdquo;, it would be parsed for HTML like a web page. If it was &amp;ldquo;application/json&amp;rdquo;, it might be displayed like text, or formatted into a browsable form, depending on your browser or extensions. If it was &amp;ldquo;application/vnd.ms-excel&amp;rdquo; or even &amp;ldquo;text/csv&amp;rdquo;, the browser would likely open in in Excel or another spreadsheet program, or possibly directly into a gene sequencer, like happens to those I generate at work.&lt;/p&gt;

&lt;p&gt;And, if the program was this &amp;ndash;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env perl&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; CGI;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $cgi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CGI&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;();
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;header( &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;type &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;image/jpg&amp;#39;&lt;/span&gt; );
open &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $img, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user/images/author/dave-jacoby.jpg&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;$img&amp;gt;&lt;/span&gt;) { &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;ndash; you would get this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/author/dave-jacoby.jpg&#34; alt=&#34;/images/author/dave-jacoby.jpg&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;processing-input&#34;&gt;Processing input&lt;/h2&gt;

&lt;p&gt;The first way to pass data is with the query string, (the portion of a URI beginning with &lt;code&gt;?&lt;/code&gt;), which you see in URLs like &lt;code&gt;https://example.com/?foo=bar&lt;/code&gt;. This uses the &amp;ldquo;GET&amp;rdquo; request method, and becomes available to the program as &lt;code&gt;$ENV-&amp;gt;{QUERY_STRING}&lt;/code&gt;, which in this case is &lt;code&gt;foo=bar&lt;/code&gt; (CGI programs receive their arguments as environment variables). But CGI provides the &lt;code&gt;param&lt;/code&gt; method which parses the query string into key value pairs, so you can work with them like a hash:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; CGI;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $cgi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CGI&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; %param &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; map { $_ &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; scalar $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;param($_) } $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;param() ;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;header( &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;type &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt; );
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;qq{PARAM:\N}&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $k ( sort keys %param ) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; join &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;: &amp;#34;&lt;/span&gt;, $k, $param{$k};
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;;
}
&lt;span style=&#34;color:#75715e&#34;&gt;# PARAM:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# foo: bar&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, now, let&amp;rsquo;s make a web page like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/url/of/simple.cgi&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And click submit. The browser will send an HTTP &amp;ldquo;POST&amp;rdquo; request, with the form input as key value pairs in the request body. CGI handles this and places the data in &lt;code&gt;$cgi-&amp;gt;param&lt;/code&gt;, just like with &amp;ldquo;GET&amp;rdquo;. Only, with &amp;ldquo;POST&amp;rdquo; the size of input can be much larger (URL&amp;rsquo;s are generally limited to 2048 bytes by browsers).&lt;/p&gt;

&lt;h2 id=&#34;generating-html&#34;&gt;Generating HTML&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make that form above, using the HTML-generation techniques that come with CGI.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $output;
$output &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;start_form(
    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;method &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;action &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/path/to/simple.cgi&amp;#34;&lt;/span&gt;
);
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;textfield( &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt; );
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;submit;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;end_form;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem with this, is the code to generate HTML with CGI can get very long and unreadable. The maintainers of CGI agree, which is why this is at the top of &lt;a href=&#34;https://metacpan.org/pod/CGI#HTML-Generation-functions-should-no-longer-be-used&#34;&gt;the documentation for CGI.pm&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All HTML generation functions within CGI.pm are no longer being maintained. [&amp;hellip;] The rationale for this is that the HTML generation functions of CGI.pm are an obfuscation at best and a maintenance nightmare at worst. You should be using a template engine for better separation of concerns. See &lt;a href=&#34;https://metacpan.org/pod/CGI::Alternatives&#34;&gt;CGI::Alternatives&lt;/a&gt; for an example of using CGI.pm with the &lt;a href=&#34;https://metacpan.org/pod/Template::Toolkit&#34;&gt;Template::Toolkit&lt;/a&gt; module.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using Template Toolkit, that form might look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; strict;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; warnings;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; CGI;
&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Template;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $cgi      &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CGI&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Template&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;();
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $input    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;DATA&amp;gt;&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $data     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { action &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/url/of/program&amp;#39;&lt;/span&gt;} ;

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; $cgi&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;header;
$template&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;process(&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;$input,$data)
    &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; die &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Template process failed&amp;#34;&lt;/span&gt;, $template&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;error();

__DATA__
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;form method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt; action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[% action %]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;input type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;input type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I use Template Toolkit for all my server-side web work. It&amp;rsquo;s also the default in many of Perl&amp;rsquo;s web frameworks.&lt;/p&gt;

&lt;h2 id=&#34;configuring-cgi-on-apache&#34;&gt;Configuring CGI on Apache&lt;/h2&gt;

&lt;p&gt;To use CGI, your web server should have &lt;a href=&#34;http://httpd.apache.org/docs/current/mod/mod_cgi.html&#34;&gt;mod_cgi&lt;/a&gt; installed. Once installed, you will have to to configure your server to execute CGI programs.&lt;/p&gt;

&lt;p&gt;The first way is to have &lt;code&gt;cgi-bin&lt;/code&gt; directories where every file gets executed instead of transferred.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Directory &amp;quot;/home/*/www/cgi-bin&amp;quot;&amp;gt;
    Options ExecCGI
    SetHandler cgi-script
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The other is to allow CGI to be enabled per directory, with a configuration that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Directory &amp;quot;/home/*/www&amp;quot;&amp;gt;
    Options +ExecCGI
    AddHandler cgi-script .cgi
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then add a &lt;code&gt;.htaccess&lt;/code&gt; file in each directory that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AddHandler cgi-script .cgi
Options +ExecCGI
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So that &lt;code&gt;foo.pl&lt;/code&gt; will transfer but &lt;code&gt;foo.cgi&lt;/code&gt; will run, even if both are executable.&lt;/p&gt;

&lt;h2 id=&#34;why-not-to-use-cgi&#34;&gt;Why not to use CGI&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.nntp.perl.org/group/perl.perl5.porters/2013/05/msg202130.html&#34;&gt;In May 2013, Ricardo Signes, then Perl5 Pumpking, sent this to the Perl5 Porters list&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think it&amp;rsquo;s time to seriously consider removing CGI.pm from the core distribution. It is no longer what I&amp;rsquo;d point &lt;em&gt;anyone&lt;/em&gt; at for writing &lt;em&gt;any&lt;/em&gt; sort of web code. It is in the core, as far as I know, because once it was the state of the art, and a major reason for many people to use the language. I don&amp;rsquo;t think either is true now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It was marked deprecated with 5.20 and removed from Core with 5.22. This is not catastrophic; it is still available in CPAN, so you would have to install it, or have your administrator install it, depending on your circumstances.&lt;/p&gt;

&lt;p&gt;So, why did CGI drop from &amp;ldquo;state of the art&amp;rdquo; to discouraged by its own maintainers?&lt;/p&gt;

&lt;p&gt;There are two big issues with CGI: speed and complexity. Every HTTP request triggers the forking of a new process on the web server, which is costly for server resources. A more efficient and faster way is to use a multi-process daemon which does its forking on startup and maintains a pool of processes to handle requests.&lt;/p&gt;

&lt;p&gt;CGI isn&amp;rsquo;t good at managing the complexity of larger web applications: it has no MVC architecture to help developers separate concerns. This tends to lead to hard-to-maintain programs.&lt;/p&gt;

&lt;p&gt;The rise of web frameworks such as Ruby on Rails, and the application servers they run on, have done much to solve both problems. There are many web frameworks written in Perl; among the most popular are &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Manual&#34;&gt;Catalyst&lt;/a&gt;, &lt;a href=&#34;https://metacpan.org/pod/Dancer2&#34;&gt;Dancer&lt;/a&gt;, and &lt;a href=&#34;https://metacpan.org/pod/Mojolicious&#34;&gt;Mojolicious&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CGI also contains a security &lt;a href=&#34;https://metacpan.org/pod/distribution/CGI/lib/CGI.pod#Fetching-the-value-or-values-of-a-single-named-parameter&#34;&gt;vulnerability&lt;/a&gt; which must be coded around to avoid parameter injection.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;The &amp;ldquo;good&amp;rdquo; parts of CGI.pm, the header creation and parameter parsing, are well-explained in the module&amp;rsquo;s &lt;a href=&#34;https://metacpan.org/pod/CGI&#34;&gt;documentation&lt;/a&gt;. As for the deprecated HTML generation functions, they are documented &lt;a href=&#34;https://metacpan.org/pod/CGI::HTML::Functions&#34;&gt;separately&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lincoln Stein, the creator of CGI.pm also wrote the &lt;a href=&#34;https://www.amazon.com/Official-Guide-Programming-CGI-pm-Lincoln/dp/0471247448&#34;&gt;Official Guide&lt;/a&gt;. The book is 20 years old, and out of date but remains a clear and concise resource about CGI.pm.&lt;/p&gt;

&lt;p&gt;Lee Johnson, the current maintainer of CGI.pm wrote a long form blog &lt;a href=&#34;https://leejo.github.io/2016/02/22/all_software_is_legacy/&#34;&gt;post&lt;/a&gt; about the history of CGI, its current state and future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - September 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---september-2018/</link>
      <pubDate>Tue, 09 Oct 2018 20:42:27 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---september-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Simple ASCII charting using &lt;a href=&#34;https://metacpan.org/pod/App::AsciiChart&#34;&gt;App::AsciiChart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::JsonLogUtils&#34;&gt;App::JsonLogUtils&lt;/a&gt; provides command line utilities for dealing with JSON-formatted log files&lt;/li&gt;
&lt;li&gt;Simple interface to the OneSky API: &lt;a href=&#34;https://metacpan.org/pod/Net::OneSky&#34;&gt;Net::OneSky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Communicate with the patron data store, Hetula using &lt;a href=&#34;https://metacpan.org/pod/Hetula::Client&#34;&gt;Hetula::Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Signer::AWSv4&#34;&gt;Signer::AWSv4&lt;/a&gt; can sign AWS requests with v4 signatures without needing an HTTP::Request object&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Exchange&#34;&gt;Data::Exchange&lt;/a&gt; can exchange files and update issues from your colleagues via an S3 bucket&lt;/li&gt;
&lt;li&gt;Manage cards and decks using &lt;a href=&#34;https://metacpan.org/pod/Ordeal::Model&#34;&gt;Ordeal::Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Convert OpenAPI (swagger) schemas to SQL::Translator schemas with &lt;a href=&#34;https://metacpan.org/pod/SQL::Translator::Parser::OpenAPI&#34;&gt;SQL::Translator::Parser::OpenAPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Types::PGPLOT&#34;&gt;Types::PGPLOT&lt;/a&gt; Type::Tiny compatible types for the PGPLOT library&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/XML::Invisible&#34;&gt;XML::Invisible&lt;/a&gt; transform &amp;ldquo;invisible XML&amp;rdquo; documents into XML using a grammar&lt;/li&gt;
&lt;li&gt;Get a faster backend for YAML::PP via &lt;a href=&#34;https://metacpan.org/pod/YAML::PP::LibYAML&#34;&gt;YAML::PP::LibYAML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Git::IssueManager&#34;&gt;Git::IssueManager&lt;/a&gt; can manage issues in a git branch within your repository&lt;/li&gt;
&lt;li&gt;Get JSON API-style error objects with &lt;a href=&#34;https://metacpan.org/pod/JSON::API::Error&#34;&gt;JSON::API::Error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Protocol::DBus&#34;&gt;Protocol::DBus&lt;/a&gt; D-Bus in pure Perl!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Astro::Coord::ECI::VSOP87D&#34;&gt;Astro::Coord::ECI::VSOP87D&lt;/a&gt; implements the VSOP87D position model of planetary motion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://metacpan.org/pod/Email::Address::UseXS&#34;&gt;Email::Address::UseXS&lt;/a&gt; to avoid choking on badly formatted input&lt;/li&gt;
&lt;li&gt;Validate HTML with &lt;a href=&#34;https://metacpan.org/pod/HTML::T5&#34;&gt;HTML::T5&lt;/a&gt;, a fork of HTML::Lint&lt;/li&gt;
&lt;li&gt;Complete with the first fulfilled promise using &lt;a href=&#34;https://metacpan.org/pod/Mojo::Promise::Role::HigherOrder&#34;&gt;Mojo::Promise::Role::HigherOrder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ForwardedFor&#34;&gt;Mojolicious::Plugin::ForwardedFor&lt;/a&gt; retrieves the remote address from X-Forwarded-For&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::PNGCast&#34;&gt;Mojolicious::Plugin::PNGCast&lt;/a&gt; can display a screencast from a headless browser or any PNG websocket stream&lt;/li&gt;
&lt;li&gt;Perform concurrent HTTP requests using libcurl with &lt;a href=&#34;https://metacpan.org/pod/Net::Curl::Parallel&#34;&gt;Net::Curl::Parallel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - July 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---july-2018/</link>
      <pubDate>Sun, 05 Aug 2018 18:40:15 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---july-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::SlowQuitApps&#34;&gt;App::SlowQuitApps&lt;/a&gt; - simplify the configuration of SlowQuitApps app on MacOS&lt;/li&gt;
&lt;li&gt;Get a &amp;ldquo;cointoss&amp;rdquo; command for Bernoulli and binomial distributions &lt;a href=&#34;https://metacpan.org/pod/App::cointoss&#34;&gt;App::cointoss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::colorplus&#34;&gt;App::colorplus&lt;/a&gt; can manipulate ANSI color escape sequences&lt;/li&gt;
&lt;li&gt;Get info about a character with &lt;a href=&#34;https://metacpan.org/pod/App::unichar&#34;&gt;App::unichar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JavaScript::V8::XS&#34;&gt;JavaScript::V8::XS&lt;/a&gt; provides XS bindings for the V8 JavaScript engine. Woo!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Prometheus::Tiny&#34;&gt;Prometheus::Tiny&lt;/a&gt; is a tiny client for the time series database&lt;/li&gt;
&lt;li&gt;Perform queries using the Yandex Maps API with &lt;a href=&#34;https://metacpan.org/pod/Yandex::Geo&#34;&gt;Yandex::Geo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Parser for HAProxy configuration file using &lt;a href=&#34;https://metacpan.org/pod/Config::HAProxy&#34;&gt;Config::HAProxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/File::AddInc&#34;&gt;File::AddInc&lt;/a&gt; is a &amp;ldquo;FindBin&amp;rdquo; for modulinos&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::IP::Checker&#34;&gt;Net::IP::Checker&lt;/a&gt; validates IP addresses &lt;em&gt;correctly&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Send data to the statsd plugin telegraf using &lt;a href=&#34;https://metacpan.org/pod/Net::Statsd::Client::Telegraf&#34;&gt;Net::Statsd::Client::Telegraf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get a ready-made WordPress database schema with &lt;a href=&#34;https://metacpan.org/pod/WordPress::DBIC::Schema&#34;&gt;WordPress::DBIC::Schema&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Write a heap dump file for later analysis with &lt;a href=&#34;https://metacpan.org/pod/Devel::MAT::Dumper&#34;&gt;Devel::MAT::Dumper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Git::LowLevel&#34;&gt;Git::LowLevel&lt;/a&gt; performs blob/tree/commit operations on a Git repo&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HO::class&#34;&gt;HO::class&lt;/a&gt; is a class builder for hierarchical (arrayref) objects&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooX::Enumeration&#34;&gt;MooX::Enumeration&lt;/a&gt; provides shortcuts for working with enum attributes in Moo&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/POE::Filter::ThruPut&#34;&gt;POE::Filter::ThruPut&lt;/a&gt; is a POE filter that passes data through unchanged whilst counting bytes sent and received&lt;/li&gt;
&lt;li&gt;Get a language Server for Perl with &lt;a href=&#34;https://metacpan.org/pod/Perl::LanguageServer&#34;&gt;Perl::LanguageServer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::ANSI::Fold&#34;&gt;Text::ANSI::Fold&lt;/a&gt; can split text by length but preserve ANSI sequences and multibyte characters&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Perl interface to MXNet Gluon ModelZoo with &lt;a href=&#34;https://metacpan.org/pod/AI::MXNet::Gluon::ModelZoo&#34;&gt;AI::MXNet::Gluon::ModelZoo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/BioSAILs::Command&#34;&gt;BioSAILs::Command&lt;/a&gt; is a command line wrapper for the BioX-Workflow-Command and HPC-Runner-Command libraries&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extract email addresses from webpages with &lt;a href=&#34;https://metacpan.org/pod/Email::Extractor&#34;&gt;Email::Extractor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do low-cost desktop software development via loopback and &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Loco&#34;&gt;Mojolicious::Plugin::Loco&lt;/a&gt;f&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::LogStderr&#34;&gt;Plack::Middleware::LogStderr&lt;/a&gt; can redirect all STDERR output to another logger&lt;/li&gt;
&lt;li&gt;Scrape, store and analyze data from NHL.com with &lt;a href=&#34;https://metacpan.org/pod/Sport::Analytics::NHL&#34;&gt;Sport::Analytics::NHL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - March 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---march-2018/</link>
      <pubDate>Mon, 02 Apr 2018 21:48:15 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---march-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::diceware&#34;&gt;App::diceware&lt;/a&gt; is a simple Diceware passphrase generator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Google::ContentAPI&#34;&gt;Google::ContentAPI&lt;/a&gt; provides an interface for Google&amp;rsquo;s Content API for Shopping&lt;/li&gt;
&lt;li&gt;Perl XS binding for the Duktape Javascript embeddable engine with &lt;a href=&#34;https://metacpan.org/pod/JavaScript::Duktape::XS&#34;&gt;JavaScript::Duktape::XS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get an HTTP Client for Firebase Cloud Messaging using &lt;a href=&#34;https://metacpan.org/pod/WWW::FCM::HTTP&#34;&gt;WWW::FCM::HTTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bash::Completion::Plugins::Sqitch&#34;&gt;Bash::Completion::Plugins::Sqitch&lt;/a&gt; provides bash completion for Sqitch commands&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Font::FreeType&#34;&gt;Font::FreeType&lt;/a&gt; can read font files and render glyphs from Perl using FreeType2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Release::Checklist&#34;&gt;Release::Checklist&lt;/a&gt; is a QA checklist for CPAN releases&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A Perl interface to the Big List of Naughty Strings with &lt;a href=&#34;https://metacpan.org/pod/Data::BLNS&#34;&gt;Data::BLNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create ICC profiles and use associated color functions using &lt;a href=&#34;https://metacpan.org/pod/ICC::Profile&#34;&gt;ICC::Profile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Markua::Parser&#34;&gt;Markua::Parser&lt;/a&gt; can parse Markua files for writing books&lt;/li&gt;
&lt;li&gt;Easily provide JSON-LD mark-up for your objects using &lt;a href=&#34;https://metacpan.org/pod/MooX::Role::JSON_LD&#34;&gt;MooX::Role::JSON_LD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/SkewHeap&#34;&gt;SkewHeap&lt;/a&gt; is a fast heap structure for Perl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/YAML::Dump&#34;&gt;YAML::Dump&lt;/a&gt; is a simplified YAML dumper with boolean support&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AnyEvent::Connector&#34;&gt;AnyEvent::Connector&lt;/a&gt; provides &lt;code&gt;tcp_connect&lt;/code&gt; á la AnyEvent::Socket with transparent proxy handling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Caller::Easy&#34;&gt;Caller::Easy&lt;/a&gt; provides a much nicer (than builtin) interface to the call stack&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/List::Util::MaybeXS&#34;&gt;List::Util::MaybeXS&lt;/a&gt; it&amp;rsquo;s List::Util but with a pure Perl fallback&lt;/li&gt;
&lt;li&gt;Create prototypes with &lt;a href=&#34;https://metacpan.org/pod/Package::Prototype&#34;&gt;Package::Prototype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This Perl Critic policy checks for loops on hashes: &lt;a href=&#34;https://metacpan.org/pod/Perl::Critic::Policy::Variables::ProhibitLoopOnHash&#34;&gt;Perl::Critic::Policy::Variables::ProhibitLoopOnHash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Sys::Linux::Syscall::Execve&#34;&gt;Sys::Linux::Syscall::Execve&lt;/a&gt; provides a raw &lt;code&gt;execve()&lt;/code&gt; wrapper that preserves memory addresses&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test2::Tools::xUnit&#34;&gt;Test2::Tools::xUnit&lt;/a&gt; is a Perl xUnit framework built on Test2::Workflow&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Control a typical stepper motor with the Raspberry Pi using &lt;a href=&#34;https://metacpan.org/pod/RPi::StepperMotor&#34;&gt;RPi::StepperMotor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get IP address encryption for pseudo anonymization with &lt;a href=&#34;https://metacpan.org/pod/Net::Address::IP::Cipher&#34;&gt;Net::Address::IP::Cipher&lt;/a&gt;. Might be useful for GDPR compliance?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get HTML validation via &lt;a href=&#34;https://metacpan.org/pod/HTML::Tidy5&#34;&gt;HTML::Tidy5&lt;/a&gt; (the author&amp;rsquo;s intended replacement for HTML::Lint)&lt;/li&gt;
&lt;li&gt;Automatically reload open browser windows when your application changes using &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::AutoReload&#34;&gt;Mojolicious::Plugin::AutoReload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::Middleware::ServerTiming&#34;&gt;Plack::Middleware::ServerTiming&lt;/a&gt; adds the Server-Timing header to HTTP responses&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/RT::Authen::OAuth2&#34;&gt;RT::Authen::OAuth2&lt;/a&gt; is another OAuth2 implementation&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - October 2017</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---october-2017/</link>
      <pubDate>Thu, 09 Nov 2017 09:07:44 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---october-2017/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::tt&#34;&gt;App::tt&lt;/a&gt; is a time tracking application for the terminal&lt;/li&gt;
&lt;li&gt;Get bindings for Bitbucket Server REST APIs via &lt;a href=&#34;https://metacpan.org/pod/WebService::BitbucketServer&#34;&gt;WebService::BitbucketServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WWW::Oxontime&#34;&gt;WWW::Oxontime&lt;/a&gt; can get live Oxford UK bus departure times&lt;/li&gt;
&lt;li&gt;Inspect Apache errors log with &lt;a href=&#34;https://metacpan.org/pod/App::Elog&#34;&gt;App::Elog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Yandex::Disk&#34;&gt;Yandex::Disk&lt;/a&gt; is a simple API for Yandex Disk&lt;/li&gt;
&lt;li&gt;Parse network device configurations with &lt;a href=&#34;https://metacpan.org/pod/ncp&#34;&gt;ncp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Directory::Scanner&#34;&gt;Directory::Scanner&lt;/a&gt; is a streaming searcher that won&amp;rsquo;t prefetch the results to save resources&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/OTRS::OPM::Installer&#34;&gt;OTRS::OPM::Installer&lt;/a&gt; installs dependencies for the ticket manager app&lt;/li&gt;
&lt;li&gt;Format strings with terminal escape codes using &lt;a href=&#34;https://metacpan.org/pod/String::Tagged::Terminal&#34;&gt;String::Tagged::Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Win32::Net::Info&#34;&gt;Win32::Net::Info&lt;/a&gt; can retrieve Windows network adapter information&lt;/li&gt;
&lt;li&gt;Use icon libraries in Wx with &lt;a href=&#34;https://metacpan.org/pod/Wx::Perl::IconDepot&#34;&gt;Wx::Perl::IconDepot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::SeaBASS&#34;&gt;Data::SeaBASS&lt;/a&gt; can read/write &lt;a href=&#34;https://seabass.gsfc.nasa.gov/wiki/System_Description&#34;&gt;SeaBASS&lt;/a&gt; ocean data files&lt;/li&gt;
&lt;li&gt;Get globstar (&lt;code&gt;**&lt;/code&gt;) globbing with &lt;a href=&#34;https://metacpan.org/pod/File::Globstar&#34;&gt;File::Globstar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Geo::Coder::Free&#34;&gt;Geo::Coder::Free&lt;/a&gt; provides geocoding functionality using free databases&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Geo::Coder::US::Census&#34;&gt;Geo::Coder::US::Census&lt;/a&gt; provides a geocoding functionality US census.gov data&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Display the cumulative test running time with &lt;a href=&#34;https://metacpan.org/pod/App::Prove::Plugin::CumulativeTimer&#34;&gt;App::Prove::Plugin::CumulativeTimer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Defined::KV&#34;&gt;Defined::KV&lt;/a&gt; provides a drop-in replacement function for a common idiom&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Git::RequireUnixEOL&#34;&gt;Dist::Zilla::Plugin::Git::RequireUnixEOL&lt;/a&gt; enforces Unix line endings in your distribution&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/List::Breakdown&#34;&gt;List::Breakdown&lt;/a&gt; can conveniently breakdown lists into sublists&lt;/li&gt;
&lt;li&gt;Easily create named, parameterized types using &lt;a href=&#34;https://metacpan.org/pod/Type::TinyX::Facets&#34;&gt;Type::TinyX::Facets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/roles&#34;&gt;roles&lt;/a&gt; is a simple pragma for composing roles&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;language-international&#34;&gt;Language &amp;amp; International&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Convert between braille character sets using &lt;a href=&#34;https://metacpan.org/pod/App::Brl2Brl&#34;&gt;App::Brl2Brl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Translates Portuguese words to Galician using fuzzy replacements with &lt;a href=&#34;https://metacpan.org/pod/Lingua::FuzzyTrans::PT2GL&#34;&gt;Lingua::FuzzyTrans::PT2GL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/PGPLOT::Device&#34;&gt;PGPLOT::Device&lt;/a&gt; can autogenerate PGPLOT device names&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Math::Base85&#34;&gt;Math::Base85&lt;/a&gt; provides support for base 85 numbers as defined by RFC 1924&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Log Catalyst DBIC querylogs to the console using &lt;a href=&#34;https://metacpan.org/pod/Catalyst::Plugin::DBIC::ConsoleQueryLog&#34;&gt;Catalyst::Plugin::DBIC::ConsoleQueryLog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::WebSocket&#34;&gt;Dancer2::Plugin::WebSocket&lt;/a&gt; adds a websocket interface to Dancer2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HTML::Untidy&#34;&gt;HTML::Untidy&lt;/a&gt; is another way to generate HTML quickly and programmatically&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::ClientIP::Pluggable&#34;&gt;Mojolicious::Plugin::ClientIP::Pluggable&lt;/a&gt; provides convenient client IP header handling for Mojolicious requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

