<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>People Behind Perl Artur Bergman Arthur on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/people-behind-perl-artur-bergman-arthur/</link>
    <description>Recent content in People Behind Perl Artur Bergman Arthur on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Aug 2001 00:00:00 -0800</lastBuildDate>
    <atom:link href="/tags/people-behind-perl-artur-bergman-arthur/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>People Behind Perl : Artur Bergman</title>
      <link>http://localhost:1313/pub/2001/08/01/artur.html/</link>
      <pubDate>Wed, 01 Aug 2001 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2001/08/01/artur.html/</guid>
      <description>

&lt;p&gt;We continue our series on the People Behind Perl by interviewing Artur Bergman. Artur is a recent addition to the legion of Perl developers, but he&amp;rsquo;s already making extremely big waves. Artur picked up the gauntlet of the new threading model introduced in Perl 5.6.0 and has set about making it usable for the ordinary Perl programmer. Here&amp;rsquo;s what Artur has to say.&lt;/p&gt;

&lt;h3 id=&#34;who-are-you-and-what-is-your-day-job&#34;&gt;Who are you, and what is your day job?&lt;/h3&gt;

&lt;p&gt;My name is Artur Bergman. I work on a content management system as a system developer/designer at Contiller AB in Sweden. I am usually found on #perl, which is also my only real longstanding contact with the Perl community.&lt;/p&gt;

&lt;p&gt;I used to work with Stock Exchange systems, and have designed and programmed a number of trade execution engines in Perl for both stocks, power and interest-rate markets.&lt;/p&gt;

&lt;h3 id=&#34;how-long-have-you-been-programming-in-perl&#34;&gt;How long have you been programming in Perl?&lt;/h3&gt;

&lt;p&gt;Since &amp;lsquo;95. I needed to make a Web page dynamic, so I had to learn a programming language; it ended up being Perl.&lt;/p&gt;

&lt;h3 id=&#34;what-got-you-into-perl&#34;&gt;What got you into Perl?&lt;/h3&gt;

&lt;p&gt;My online friends recommended me to use Perl. I had tried Basic (of course) and C, but I didn&amp;rsquo;t stick with them.&lt;/p&gt;

&lt;h3 id=&#34;why-do-you-still-prefer-perl-what-other-languages-apart-from-perl-do-you-program-in-and-how-do-they-compare&#34;&gt;Why do you still prefer Perl? What other languages apart from Perl do you program in, and how do they compare?&lt;/h3&gt;

&lt;p&gt;Perl does what I want with a minumum of fuss. I can generally write nice clean code, but when I need to do something clever or impossible I can still do it. I feel like I am making steady progress while programming Perl.&lt;/p&gt;

&lt;p&gt;Currently the only other language I use is C; it doesn&amp;rsquo;t compare! I wouldn&amp;rsquo;t dream of using C for most stuff I do in Perl; I do dream of using &lt;code&gt;Inline::C&lt;/code&gt; to optimize some stuff - I rarely do but it happens.&lt;/p&gt;

&lt;h3 id=&#34;what-sort-of-things-do-you-do-with-perl-now-what-was-the-last-perl-program-you-wrote&#34;&gt;What sort of things do you do with Perl now? What was the last Perl program you wrote?&lt;/h3&gt;

&lt;p&gt;Content Mangement, which generally means dealing with text. The last Perl program I wrote was a OODBMS that is based on BerkeleyDB complete with transactions, version and release management, scheduled tasks and monitors. It uses POE, of course.&lt;/p&gt;

&lt;h3 id=&#34;what-got-you-into-perl-development&#34;&gt;What got you into Perl development?&lt;/h3&gt;

&lt;p&gt;I was getting bored. I needed a chellange! I also wanted to refresh my C knowledge. Perl is a very interesting project to work on: the great range of platforms it supports, the large source and the very intelligent people working on it. I have learned a lot during the past three months,&lt;/p&gt;

&lt;h3 id=&#34;do-you-remember-the-first-patch-you-submitted-was-it-applied&#34;&gt;Do you remember the first patch you submitted? Was it applied?&lt;/h3&gt;

&lt;p&gt;I do not remember it, but yes it was applied and Richard Soderberg found it for me; it was a tiny documentation patch a couple of years ago.&lt;/p&gt;

&lt;h3 id=&#34;what-do-you-do-for-perl-development-now&#34;&gt;What do you do for Perl development now?&lt;/h3&gt;

&lt;p&gt;Mainly threading. I have released two modules on CPAN (&lt;code&gt;threads&lt;/code&gt; and &lt;code&gt;threads::shared&lt;/code&gt;) that give access to Perl&amp;rsquo;s newer threading system. To make these work I have had to add some stuff to how Perl deals with threads. I am also starting to get involved into attribute stuff, and in my threads path I have stumbled over the regex/Perl interface and been working on making it work better. More work will surely be done in this area.&lt;/p&gt;

&lt;h3 id=&#34;why-do-you-work-particularly-with-threads&#34;&gt;Why do you work particularly with threads?&lt;/h3&gt;

&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;100%&#34; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;p&gt;People Behind Perl&lt;/p&gt;
&lt;p&gt;Interested in reading more from our series of interviews with Perl luminaries? Read our &lt;a href=&#34;http://localhost:1313/pub/2001/07/03/nat.html&#34;&gt;discussion with Nathan Torkington&lt;/a&gt;, a long-time Perl developer and mainstay of the Perl community.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Because I have a real need for threads. I have a system that ideally should scale on a SMP system, it should also work both with Win32 and Unix. I am not a great fan of &lt;code&gt;fork()&lt;/code&gt;, so I want threads. As Gurusamy Sarathy already provided a lot of the work on &lt;code&gt;USEITHREADS&lt;/code&gt;, I decided to try to finish it.&lt;/p&gt;

&lt;p&gt;I am very interested in concurrency issues and have worked on and with POE quite a lot.&lt;/p&gt;

&lt;h3 id=&#34;people-often-say-that-threading-in-perl-is-unusable-what-do-you-say-to-that-and-how-is-it-getting-better&#34;&gt;People often say that threading in Perl is unusable. What do you say to that, and how is it getting better?&lt;/h3&gt;

&lt;p&gt;Sure, tell that to all the people who use &lt;code&gt;fork()&lt;/code&gt; on Win32 for all kinds of stuff!&lt;/p&gt;

&lt;p&gt;Actually, I agree. 5.6.1 is very unusable for all kind of complex applications with a lot of external APIs; it is unusable for people on unsafe C libraries. (From what I have been told, Win32 and Digital Unix have safe C libraries, so that might explain why it works better in Win32).&lt;/p&gt;

&lt;p&gt;The main problem has been the regex interface and match variables. This has now been solved. A lot of bugs have been fixed and I think 5.8 will be safe enough to start developing applications that are multithreaded. Of course, some people have been working on multithreaded applications since 5.5.3!&lt;/p&gt;

&lt;h3 id=&#34;what-do-you-envisage-perl-6-s-threading-model-to-look-like&#34;&gt;What do you envisage Perl 6&amp;rsquo;s threading model to look like?&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;We conducted this interview before the State of the Onion, in which Larry confirmed that the threading model would look like ithreads - Simon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Something very similar to &lt;code&gt;threads.pm&lt;/code&gt;/ithreads. I like the idea of only sharing what is explicitly declared to be shared. I think the idea could be taken a stop further, and only guarantee the value of shared variables after a synchronization.&lt;/p&gt;

&lt;h3 id=&#34;finally-what-s-the-best-thing-about-perl-and-what-s-the-worst-thing-about-perl&#34;&gt;Finally, what&amp;rsquo;s the best thing about Perl and what&amp;rsquo;s the worst thing about Perl?&lt;/h3&gt;

&lt;p&gt;Perl is fun, Perl has CPAN! Bad things? I would like an optional strict typing system.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

