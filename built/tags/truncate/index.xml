<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Truncate on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/truncate/</link>
    <description>Recent content in Truncate on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Oct 2016 08:37:00 +0000</lastBuildDate>
    <atom:link href="/tags/truncate/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to empty a file with Perl</title>
      <link>http://localhost:1313/article/how-to-empty-a-file-with-perl/</link>
      <pubDate>Wed, 26 Oct 2016 08:37:00 +0000</pubDate>
      
      <guid>http://localhost:1313/article/how-to-empty-a-file-with-perl/</guid>
      <description>

&lt;p&gt;Have you ever had the experience of doing something a certain way for a long time, and then you discover a better way? This happened to me last week, when I was working on some code that needed to empty a file. Emptying a file is a common operation - maybe you have a session log file to write to, or want to limit disk space use, or whatever. Here&amp;rsquo;s how I usually do it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# empty the file&lt;/span&gt;
{ open &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $session_file, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;path/to/sessionfile&amp;#39;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This opens a write filehandle on the file, effectively setting its length to zero. I put the call to &lt;a href=&#34;https://perldoc.perl.org/functions/open.html&#34;&gt;open&lt;/a&gt; between curly braces in order to minimize the scope of the filehandle, &lt;code&gt;$session_file&lt;/code&gt;. After that statement, the block closes, and &lt;code&gt;$session_file&lt;/code&gt; variable goes out of scope, automatically closing the filehandle. As the block looks a little strange, I include an explanatory comment.&lt;/p&gt;

&lt;p&gt;The other day though, I came across the &lt;a href=&#34;https://perldoc.perl.org/functions/truncate.html&#34;&gt;truncate&lt;/a&gt; function. This does exactly what you&amp;rsquo;d think it does: truncates files. It takes two arguments: the file path (or filehandle), and the length. So if you need to truncate a file, you can do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;truncate &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;path/to/sessionfile&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This doesn&amp;rsquo;t use a lexical variable, so no scoping is required. It&amp;rsquo;s unambiguous so no comment is needed either. I like it, it&amp;rsquo;s a better way.&lt;/p&gt;

&lt;p&gt;N.B. on Windows &lt;code&gt;truncate&lt;/code&gt; requires the file to not be open elsewhere on the system, and if called with a filehandle it must be in append mode.&lt;/p&gt;

&lt;h3 id=&#34;looking-up-perl-functions&#34;&gt;Looking up Perl functions&lt;/h3&gt;

&lt;p&gt;Do you know Perl has around 220 built in functions? You can read about them all in &lt;a href=&#34;https://perldoc.perl.org/perlfunc.html&#34;&gt;perlfunc&lt;/a&gt;, or at the terminal with &lt;code&gt;perldoc perlfunc&lt;/code&gt;. Read more about the &lt;a href=&#34;https://perldoc.perl.org/functions/truncate.html&#34;&gt;truncate&lt;/a&gt; function at the terminal with &lt;code&gt;perldoc -f truncate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vim users&lt;/strong&gt; if you&amp;rsquo;re editing Perl code and want to lookup a function, place the cursor on the function word and type &lt;code&gt;Shift-k&lt;/code&gt; to lookup the function in perldoc (works for Python, Ruby, C etc too).&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

