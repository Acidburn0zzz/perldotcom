<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/tags/docker/</link>
    <description>Recent content in Docker on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 May 2020 01:53:33 +0000</lastBuildDate>
    <atom:link href="/tags/docker/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>What&#39;s new on CPAN - April 2020</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---april-2020/</link>
      <pubDate>Wed, 20 May 2020 01:53:33 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---april-2020/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h2 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use the open, decentralizedc Matrix communication network with &lt;a href=&#34;https://metacpan.org/pod/Net::Matrix::Webhook&#34;&gt;Net::Matrix::Webhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Call Docker CLI commands from Perl using &lt;a href=&#34;https://metacpan.org/pod/Docker::CLI::Wrapper&#34;&gt;Docker::CLI::Wrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/InfluxDB::Client::Simple&#34;&gt;InfluxDB::Client::Simple&lt;/a&gt; is a lightweight InfluxDB client&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Termux::API&#34;&gt;Termux::API&lt;/a&gt; provides a Perly interface to the popular Android terminal emulator&lt;/li&gt;
&lt;li&gt;Get financial data via Yahoo Finance with &lt;a href=&#34;https://metacpan.org/pod/Yahoo::Finance&#34;&gt;Yahoo::Finance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Grant Street Group added more healthcheck modules:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::DBHCheck&#34;&gt;HealthCheck::Diagnostic::DBHCheck&lt;/a&gt; checks a database handle has read/write permissions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::SFTP&#34;&gt;HealthCheck::Diagnostic::SFTP&lt;/a&gt; checks secure FTP access&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HealthCheck::Diagnostic::WebRequest&#34;&gt;HealthCheck::Diagnostic::WebRequest&lt;/a&gt; checks HTTP/HTTPS connectivity&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Moo-ify DBIx::Class rows using &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Moo::ResultClass&#34;&gt;DBIx::Class::Moo::ResultClass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Data::Random::Structure::UTF8&#34;&gt;Data::Random::Structure::UTF8&lt;/a&gt; can fill a data structure with random UTF-8 data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::Schema::Generate&#34;&gt;JSON::Schema::Generate&lt;/a&gt; generates JSON schemas from data structures&lt;/li&gt;
&lt;li&gt;Use named (instead of positional) placeholders with SQL queries via &lt;a href=&#34;https://metacpan.org/pod/SQL::Bind&#34;&gt;SQL::Bind&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Docker::Names::Random&#34;&gt;Docker::Names::Random&lt;/a&gt; generates random strings like Docker does for container names (e.g. &amp;ldquo;lazy_fermat&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;A class based approach for scripting options: &lt;a href=&#34;https://metacpan.org/pod/Getopt::Class&#34;&gt;Getopt::Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get simple, non-blocking IPC with &lt;a href=&#34;https://metacpan.org/pod/IPC::Simple&#34;&gt;IPC::Simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/MooseX::amine&#34;&gt;MooseX::amine&lt;/a&gt; ++ for module naming, it let&amp;rsquo;s you examine the methods and properties of Moose objects&lt;/li&gt;
&lt;li&gt;Return from multiple blocks in one go with &lt;a href=&#34;https://metacpan.org/pod/Return::Deep&#34;&gt;Return::Deep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Ability&#34;&gt;Test::Ability&lt;/a&gt; provides property-based testing routines&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/fs::Promises&#34;&gt;fs::Promises&lt;/a&gt; provides a promises interface to non-blocking file system operations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Manage passwords in Dancer2 with Argon2 using &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Argon2&#34;&gt;Dancer2::Plugin::Argon2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the Minion job queue in your Dancer2 apps with &lt;a href=&#34;https://metacpan.org/pod/Dancer2::Plugin::Minion&#34;&gt;Dancer2::Plugin::Minion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Override any method in your Kelp application with &lt;a href=&#34;https://metacpan.org/pod/KelpX::Hooks&#34;&gt;KelpX::Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::Log::Role::Color&#34;&gt;Mojo::Log::Role::Color&lt;/a&gt; adds color to your interactive mojo logs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::UserAgent::Role::Signature&#34;&gt;Mojo::UserAgent::Role::Signature&lt;/a&gt; automatically signs request transactions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Multipart::Encoder&#34;&gt;Multipart::Encoder&lt;/a&gt; is an encoder for mime-type multipart/form-data.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN - May 2018</title>
      <link>http://localhost:1313/article/what-s-new-on-cpan---may-2018/</link>
      <pubDate>Sun, 03 Jun 2018 22:03:55 +0000</pubDate>
      
      <guid>http://localhost:1313/article/what-s-new-on-cpan---may-2018/</guid>
      <description>

&lt;p&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure. Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;apis-apps&#34;&gt;APIs &amp;amp; Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Access the AcousticBrainz API using &lt;a href=&#34;https://metacpan.org/pod/WebService::AcousticBrainz&#34;&gt;WebService::AcousticBrainz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add, modify and delete products from the Bing Merchant Center platform using &lt;a href=&#34;https://metacpan.org/pod/Bing::ContentAPI&#34;&gt;Bing::ContentAPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Qgoda&#34;&gt;Qgoda&lt;/a&gt; is a new static site generator with a fancy &lt;a href=&#34;http://www.qgoda.net/&#34;&gt;website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Pokemon&#34;&gt;WebService::Pokemon&lt;/a&gt; is another interface for the Pok√©mon API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::RESTCountries&#34;&gt;WebService::RESTCountries&lt;/a&gt; provides a Perly interface to the REST Countries &lt;a href=&#34;https://restcountries.eu&#34;&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/WebService::Swapi&#34;&gt;WebService::Swapi&lt;/a&gt; interfaces with the &lt;a href=&#34;https://swapi.co&#34;&gt;Star Wars API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-devops&#34;&gt;Config &amp;amp; Devops&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Docker::Registry&#34;&gt;Docker::Registry&lt;/a&gt; is a client for talking to Docker Registries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/IO::K8s&#34;&gt;IO::K8s&lt;/a&gt; provides objects representing things in the Kubernetes API&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Kubectl::CLIWrapper&#34;&gt;Kubectl::CLIWrapper&lt;/a&gt; Module to use the Kubernetes API via the kubectl CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add support for window functions to DBIx::Class using &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Helper::ResultSet::WindowFunctions&#34;&gt;DBIx::Class::Helper::ResultSet::WindowFunctions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Path::Class::Tiny&#34;&gt;Path::Class::Tiny&lt;/a&gt; has the interface of Path::Class but uses Path::Tiny under the hood&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-version-control&#34;&gt;Development &amp;amp; Version Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Acme::UNIVERSAL::can::t&#34;&gt;Acme::UNIVERSAL::can::t&lt;/a&gt; is a brilliant module: use it to discover which methods an object &lt;em&gt;can&amp;rsquo;t&lt;/em&gt; do :-)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Prove::Plugin::TermTable&#34;&gt;App::Prove::Plugin::TermTable&lt;/a&gt; sets the size of the console for Term::Table (useful for Test2 based tests)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The beginning of a Perl universe&amp;rdquo; - &lt;a href=&#34;https://metacpan.org/pod/Dot&#34;&gt;Dot&lt;/a&gt; is a new object system for Perl&lt;/li&gt;
&lt;li&gt;Run code and optinally reverse it with &lt;a href=&#34;https://metacpan.org/pod/Eval::Reversible&#34;&gt;Eval::Reversible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JavaScript::V8::CommonJS&#34;&gt;JavaScript::V8::CommonJS&lt;/a&gt; provides module loading support to https://metacpan.org/pod/JavaScript::V8&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test2::Tools::JSON::Pointer&#34;&gt;Test2::Tools::JSON::Pointer&lt;/a&gt; can compare parts of a JSON string to a data structure using JSON pointers&lt;/li&gt;
&lt;li&gt;Skip tests until a date is reached using &lt;a href=&#34;https://metacpan.org/pod/Test2::Tools::SkipUntil&#34;&gt;Test2::Tools::SkipUntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Types::Bool&#34;&gt;Types::Bool&lt;/a&gt; provides boolean object types for Perl&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/RPi::RTC::DS3231&#34;&gt;RPi::RTC::DS3231&lt;/a&gt; is an interface to the DS3231 Real-Time Clock IC over I2C&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;science-mathematics&#34;&gt;Science &amp;amp; Mathematics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::Sandy&#34;&gt;App::Sandy&lt;/a&gt; is a bioinformatic tool to generate single/paired ends for a fasta file&lt;/li&gt;
&lt;li&gt;Store and check password using Argon2 with &lt;a href=&#34;https://metacpan.org/pod/Authen::Passphrase::Argon2&#34;&gt;Authen::Passphrase::Argon2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Manage a hierarchy of Data::MuForm classes with &lt;a href=&#34;https://metacpan.org/pod/Data::MuFormX::Registry&#34;&gt;Data::MuFormX::Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::SAML&#34;&gt;Mojo::SAML&lt;/a&gt; is a SAML2 toolkit using the Mojo stack&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Stor&#34;&gt;Stor&lt;/a&gt; is file storage retrieval API implemented over HTTP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/TaskPipe&#34;&gt;TaskPipe&lt;/a&gt; is a YAML-driven framework for managing scrapers&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Analyzing GitHub with the search API</title>
      <link>http://localhost:1313/article/112/2014/9/5/Analyzing-GitHub-with-the-search-API/</link>
      <pubDate>Fri, 05 Sep 2014 12:11:51 +0000</pubDate>
      
      <guid>http://localhost:1313/article/112/2014/9/5/Analyzing-GitHub-with-the-search-API/</guid>
      <description>

&lt;p&gt;The Net::GitHub module provides a perly interface to GitHub&amp;rsquo;s feature-rich API. You can do everything with it, from creating new repos to managing issues and initiating pull requests. Today I&amp;rsquo;m going to focus on search.&lt;/p&gt;

&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;

&lt;p&gt;Grab yourself a copy of &lt;a href=&#34;https://metacpan.org/pod/Net::GitHub&#34;&gt;Net::GitHub&lt;/a&gt; (make sure it&amp;rsquo;s version 0.68 or higher). The CPAN Testers &lt;a href=&#34;http://matrix.cpantesters.org/?dist=Net-GitHub+0.68&#34;&gt;results&lt;/a&gt; show that it builds on all major platforms, including Windows. You can install it via from CPAN at the command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;$ cpan Net::GitHub&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;first-steps&#34;&gt;First steps&lt;/h3&gt;

&lt;p&gt;First we need to create a search object. You can search GitHub anonymously up to 5 times per minute or if you authenticate, 20 times per minute. The module &lt;a href=&#34;https://metacpan.org/pod/Net::GitHub&#34;&gt;documentation&lt;/a&gt; shows examples of how to authenticate, so we&amp;rsquo;ll proceed here unauthenticated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Net::GitHub::V3;

&lt;span style=&#34;color:#75715e&#34;&gt;# unauthenticated&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $gh &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Net::GitHub::V3&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $search &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $gh&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;search;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; %data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;repositories({ &lt;span style=&#34;color:#e6db74&#34;&gt;q =&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;docker&amp;#39;&lt;/span&gt;});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above creates a &lt;code&gt;$search&lt;/code&gt; object, and initiates a repo search for docker. The &lt;code&gt;%data&lt;/code&gt; hash contains the search results. Let&amp;rsquo;s have a look at them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;incomplete_results&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; bless( &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)}, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;JSON::XS::Boolean&amp;#39;&lt;/span&gt; ),
 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;total_count&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12830&lt;/span&gt;,
 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;items&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [ {
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;open_issues_count&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;771&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://api.github.com/repos/docker/docker&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;has_downloads&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; bless( &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;\&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)}, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;JSON::XS::Boolean&amp;#39;&lt;/span&gt; ),
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags_url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://api.github.com/repos/docker/docker/tags&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;forks_count&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2794&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;has_issues&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $VAR1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;items&amp;#39;&lt;/span&gt;}[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;has_downloads&amp;#39;&lt;/span&gt;},
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clone_url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://github.com/docker/docker.git&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;docker&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;private&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $VAR1&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;incomplete_results&amp;#39;&lt;/span&gt;},
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;watchers_count&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14846&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pushed_at&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014-09-05T00:32:46Z&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;description&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Docker - the open-source application container engine&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014-09-04T21:59:25Z&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;html_url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://github.com/docker/docker&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stargazers_count&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14846&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;size&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;135198&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;watchers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14846&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2013-01-18T18:10:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                   &amp;#39;&lt;/span&gt;open_issues&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; =&amp;gt; 771,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                   &amp;#39;&lt;/span&gt;language&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; =&amp;gt; &amp;#39;&lt;/span&gt;Go&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                   &amp;#39;&lt;/span&gt;git_url&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; =&amp;gt; &amp;#39;&lt;/span&gt;git:&lt;span style=&#34;color:#e6db74&#34;&gt;//gi&lt;/span&gt;thub&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com&lt;span style=&#34;color:#e6db74&#34;&gt;/docker/&lt;/span&gt;docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;full_name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;docker/docker&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;homepage&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://www.docker.com&amp;#39;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;forks&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2794&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;score&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;89.950935&amp;#39;&lt;/span&gt;,
                    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
                   },
            ]
};&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ve truncated the results for the sake of brevity, to show the top level key values and one simplified repo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;incomplete_results&lt;/code&gt; is a key value pair that returns a boolean true if the are more search results than those returned by the search&lt;/li&gt;
&lt;li&gt;&lt;code&gt;total_count&lt;/code&gt; shows the total number of repos returned by the search&lt;/li&gt;
&lt;li&gt;&lt;code&gt;items&lt;/code&gt; is the interesting one - it&amp;rsquo;s an arrayref of repo hashes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;getting-more-results&#34;&gt;Getting more results&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s update the code to pull more results. GitHub permits up to 100 results per API call and a 1,000 results per search.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Net::GitHub::V3;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $gh &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Net::GitHub::V3&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $search &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $gh&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;search;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; @data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @{ $search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;repositories({ &lt;span style=&#34;color:#e6db74&#34;&gt;q =&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;docker&amp;#39;&lt;/span&gt;,
                                      per_page &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; })&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{items} };

&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ($search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;has_next_page) {
    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# 5 queries max per minute&lt;/span&gt;
    push @data, @{ $search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;next_page&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{items} };
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above executes the same search as before, except now I&amp;rsquo;m passing the &lt;code&gt;per_page&lt;/code&gt; parameter to get 100 results per call. I also extract the &lt;code&gt;items&lt;/code&gt; arrayref directly into the &lt;code&gt;@data&lt;/code&gt; array. The while loop will continue to call the search API until no further results are returned or we hit the 1,000 result limit.&lt;/p&gt;

&lt;h3 id=&#34;analyzing-the-data&#34;&gt;Analyzing the data&lt;/h3&gt;

&lt;p&gt;So now we have a full set of results in , what can we do with it? One analysis that could be interesting is a count by programming language. Every repo hash contains a &lt;code&gt;language&lt;/code&gt; key value pair, so we can extract and count it. Lets see which language most docker-related repos are written in.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; Net::GitHub::V3;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $gh &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Net::GitHub::V3&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $search &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $gh&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;search;

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; @data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; @{ $search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;repositories({ &lt;span style=&#34;color:#e6db74&#34;&gt;q =&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;docker+created:&amp;gt;2014-09-01&amp;#39;&lt;/span&gt;,
                                      per_page &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; })&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{items} };

&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ($search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;has_next_page) {
    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# 5 queries max per minute&lt;/span&gt;
    push @data, @{ $search&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;next_page&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{items} };
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; %languages;

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $repo (@data) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;my&lt;/span&gt; $language &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $repo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{language} ? $repo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{language} : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Other&amp;#39;&lt;/span&gt;;
    $languages{ $language }&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (sort { $languages{$b} &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; $languages{$a} } keys %languages) {
    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%10s: %5i\n&amp;#34;&lt;/span&gt;, $_, $languages{$_};
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s walk through this code. First of all, I changed the search argument to limit results to repos created since September 2014 using the &lt;code&gt;created&lt;/code&gt; qualifier. This was to ensure we didn&amp;rsquo;t hit the 1,000 result search limit. The GitHub search API supports a whole range of useful &lt;a href=&#34;https://developer.github.com/v3/search/#parameters&#34;&gt;search qualifiers&lt;/a&gt; (although it&amp;rsquo;s not documented, &lt;code&gt;created&lt;/code&gt; will take a full timestamp like &lt;code&gt;2014-09-01T00:00:00Z&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Next I declared the &lt;code&gt;%languages&lt;/code&gt; hash and iterated through the results, extracting each repo&amp;rsquo;s language. Where language was &lt;code&gt;undef&lt;/code&gt;, I labelled the repo &amp;ldquo;Other&amp;rdquo;. Finally I sorted the results and printed them using &lt;a href=&#34;https://perldoc.perl.org/functions/printf.html&#34;&gt;printf&lt;/a&gt;to get a nicely formatted output. Here are the results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;     Shell:   &lt;span style=&#34;color:#ae81ff&#34;&gt;238&lt;/span&gt;
     Other:    &lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;
    Python:    &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;
      Ruby:    &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
JavaScript:     &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
        Go:     &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
      Perl:     &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
       PHP:     &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
   Clojure:     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      Java:     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perhaps as is to be expected, the results show shell programs dominating the Docker space in September.&lt;/p&gt;

&lt;h3 id=&#34;further-info&#34;&gt;Further Info&lt;/h3&gt;

&lt;p&gt;GitHub&amp;rsquo;s search API supports more than just repo search. You can search issues, code and users as well. Check out the official GitHub search API &lt;a href=&#34;https://developer.github.com/v3/search/&#34;&gt;documentation&lt;/a&gt; for more examples.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::GitHub&#34;&gt;Net::GitHub&lt;/a&gt; provides an interface for far more than just search though. It&amp;rsquo;s a full-featured API - you can literally manage your GitHub account via Perl code with Net::GitHub. The developer Fayland Lam has provided loads of documentation, and I found him helpful responsive to enquiries. Thanks Fayland!&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re looking for more than just search, you may also want to look at Ingy d√∂t Net&amp;rsquo;s awesome &lt;a href=&#34;https://github.com/ingydotnet/git-hub&#34;&gt;git-hub&lt;/a&gt;, which provides the full power of GitHub at the command line.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s new on CPAN July 2014</title>
      <link>http://localhost:1313/article/106/2014/8/1/What-s-new-on-CPAN-July-2014/</link>
      <pubDate>Fri, 01 Aug 2014 12:38:59 +0000</pubDate>
      
      <guid>http://localhost:1313/article/106/2014/8/1/What-s-new-on-CPAN-July-2014/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Welcome to &amp;ldquo;What&amp;rsquo;s new on CPAN&amp;rdquo;, a curated look at last month&amp;rsquo;s new CPAN uploads for your reading and programming pleasure.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;apis&#34;&gt;APIs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/AntTweakBar&#34;&gt;AntTweakBar&lt;/a&gt; provides Perl bindings for the GUI library&lt;/li&gt;
&lt;li&gt;Use PayPoint&amp;rsquo;s merchant engine with &lt;a href=&#34;https://metacpan.org/pod/Business::PayPoint::MCPE&#34;&gt;Business::PayPoint::MCPE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Device::PCDuino&#34;&gt;Device::PCDuino&lt;/a&gt; is a hardware interface for the pcDuino, by Timm Murray author of UAV::Pilot&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HBase::JSONRest&#34;&gt;HBase::JSONRest&lt;/a&gt; is a RESTful interface to Apache HBase&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Net::Amazon::Utils&#34;&gt;Net::Amazon::Utils&lt;/a&gt; provides helper utils for AWS&lt;/li&gt;
&lt;li&gt;Access Desk.com&amp;rsquo;s API with &lt;a href=&#34;https://metacpan.org/pod/WWW::Desk&#34;&gt;WWW::Desk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apps&#34;&gt;Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Test GnuPG email sign/encrypt with &lt;a href=&#34;https://metacpan.org/pod/App::Eduard&#34;&gt;App::Eduard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/App::plackbench&#34;&gt;App::plackbench&lt;/a&gt; is a benchmarking tool for Plack applications&lt;/li&gt;
&lt;li&gt;Ensure that you only run a command once with &lt;a href=&#34;https://metacpan.org/pod/App::single&#34;&gt;App::single&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;data&#34;&gt;Data&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Bio::Lite&#34;&gt;Bio::Lite&lt;/a&gt; is a lightweight implementation of useful bio Perl functions&lt;/li&gt;
&lt;li&gt;Convert email addresses into the DNS rname format and vice versa using &lt;a href=&#34;https://metacpan.org/pod/DNS::RName::Converter&#34;&gt;DNS::RName::Converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Hash::Ordered&#34;&gt;Hash::Ordered&lt;/a&gt; provides a simple implementation of an ordered hash with robust performance. Author David Golden &lt;a href=&#34;https://www.youtube.com/watch?v=p4U6FWyRBoQ&amp;amp;feature=youtu.be&#34;&gt;presented&lt;/a&gt; the module and comparison benchmarks recently at NY.pm (&lt;a href=&#34;http://www.dagolden.com/wp-content/uploads/2009/04/Adventures-in-Optimization-NYpm-July-2014.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Generate sets of English names with &lt;a href=&#34;https://metacpan.org/pod/Mock::Person::EN&#34;&gt;Mock::Person::EN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Pod::Markdown::Github&#34;&gt;Pod::Markdown::Github&lt;/a&gt; converts POD to Github-sepcific markdown&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;development-system-administration&#34;&gt;Development &amp;amp; System Administration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Benchmark::Report::GitHub&#34;&gt;Benchmark::Report::GitHub&lt;/a&gt; generates benchmark reports from Travis-CI and publishes them on GitHub wiki&lt;/li&gt;
&lt;li&gt;Augment your DBIx::Class schema objects with additional logic using &lt;a href=&#34;https://metacpan.org/pod/DBIx::Class::Wrapper&#34;&gt;DBIx::Class::Wrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla::Plugin::Git::Contributors&#34;&gt;Dist::Zilla::Plugin::Git::Contributors&lt;/a&gt; pulls all of the author names from your Git commit history and adds them to your module&amp;rsquo;s metadata&lt;/li&gt;
&lt;li&gt;Looking for a drop-in replacement for Getop::Long with tab completion? Check out &lt;a href=&#34;https://metacpan.org/pod/Getopt::Long::Complete&#34;&gt;Getopt::Long::Complete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JCONF is a JSON format optimized for configuration files. &lt;a href=&#34;https://metacpan.org/pod/JCONF::Writer&#34;&gt;JCONF::Writer&lt;/a&gt; produces JCONF files from Perl data structures&lt;/li&gt;
&lt;li&gt;Enable OAuth2 support in command line applications with &lt;a href=&#34;https://metacpan.org/pod/OAuth::Cmdline&#34;&gt;OAuth::Cmdline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Pegex::Forth&#34;&gt;Pegex::Forth&lt;/a&gt; is a Forth parser and interpreter built on Pegex&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Refine&#34;&gt;Refine&lt;/a&gt; is a clever module that let&amp;rsquo;s you add methods to objects (not classes) at runtime&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://metacpan.org/pod/Type::Tiny::XS&#34;&gt;Type::Tiny::XS&lt;/a&gt; for an even faster Type::Tiny&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fun&#34;&gt;Fun&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Map::Tube::London&#34;&gt;Map::Tube::London&lt;/a&gt; will tell you the shortest route between two stations on the London Underground&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Text::Pangram&#34;&gt;Text::Pangram&lt;/a&gt; identifies strings which are pangrams&lt;/li&gt;
&lt;li&gt;Access your Zombies Run! stats using &lt;a href=&#34;https://metacpan.org/pod/WebService::ZombiesRun&#34;&gt;WebService::ZombiesRun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;mojolicious&#34;&gt;Mojolicious&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mojo::UserAgent::UnixSocket&#34;&gt;Mojo::UserAgent::UnixSocket&lt;/a&gt; enables Mojo::UserAgent to interact with sockets&lt;/li&gt;
&lt;li&gt;Use HTML::Template::Pro templates in your application with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::HTMLTemplateProRenderer&#34;&gt;Mojolicious::Plugin::HTMLTemplateProRenderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support RESTful operations with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::REST&#34;&gt;Mojolicious::Plugin::REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Log webpage user events with &lt;a href=&#34;https://metacpan.org/pod/Mojolicious::Plugin::Surveil&#34;&gt;Mojolicious::Plugin::Surveil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Subtests&#34;&gt;Test::Subtests&lt;/a&gt; is interesting: it wraps Test::More tests into subtests and can allow some of them to fail&lt;/li&gt;
&lt;li&gt;Write RSpec - like tests for Rex with &lt;a href=&#34;https://metacpan.org/pod/Rex::Test::Spec&#34;&gt;Rex::Test::Spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Deep::DateTime::RFC3339&#34;&gt;Test::Deep::DateTime::RFC3339&lt;/a&gt; tests that RFC3339 timestamps are within a certain tolerance&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test::Docker::MySQL&#34;&gt;Test::Docker::MySQL&lt;/a&gt; launches MySQL docker containers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;web&#34;&gt;Web&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Reuse your Kelp routes with &lt;a href=&#34;https://metacpan.org/pod/KelpX::AppBuilder&#34;&gt;KelpX::AppBuilder&lt;/a&gt; (Kelp is a Plack based web micro-framework)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Plack::App::CGIBin::Streaming&#34;&gt;Plack::App::CGIBin::Streaming&lt;/a&gt; enables CGI applcaitions to use the Palck streaming protocol&lt;/li&gt;
&lt;li&gt;Tie variables to DuckDuckGo search using &lt;a href=&#34;https://metacpan.org/pod/Tie::DuckDuckGo&#34;&gt;Tie::DuckDuckGo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;This article was originally posted on &lt;a href=&#34;http://perltricks.com&#34;&gt;PerlTricks.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

