<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robert Kiesling on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/authors/robert-kiesling/</link>
    <description>Recent content in Robert Kiesling on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Jun 2001 00:00:00 -0800</lastBuildDate>
    <atom:link href="/authors/robert-kiesling/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Beginner&#39;s Attitude of Perl: What Attitude?</title>
      <link>http://localhost:1313/pub/2001/06/12/anti_begin.html/</link>
      <pubDate>Tue, 12 Jun 2001 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/2001/06/12/anti_begin.html/</guid>
      <description>&lt;p&gt;A recent article here, &lt;a href=&#34;http://localhost:1313/pub/2001/05/29/tides.html&#34;&gt;Turning the Tides of Perl&amp;rsquo;s Attitude Toward Beginners&lt;/a&gt;,&amp;rdquo; described places on the Internet where beginners could get help without fear of being flamed mercilessly by insensitive, elitist Perl experts. Experienced programmers, in short, must be more patient with newbies.&lt;/p&gt;

&lt;p&gt;The article&amp;rsquo;s undertone seemed to scold programmers for not being good role models for the young, not having their photographs on Corn Flakes boxes and not helping build strong bodies 12 different ways.&lt;/p&gt;

&lt;p&gt;I think that Perl is a great programming language and that everybody should learn it. But I don&amp;rsquo;t agree that experienced Perl programmers have to feel guilty about being more creative and efficient than other programmers and submit to sensitivity training.&lt;/p&gt;

&lt;p&gt;Being critical toward beginners is part of the Internet culture. It&amp;rsquo;s not Perl&amp;rsquo;s fault. Try reading a Newsgroup for the X Window System, for example. Perl Newsgroups are positively civil, in comparison.&lt;/p&gt;

&lt;p&gt;If Perl has an image problem, it&amp;rsquo;s probably due to nature of the language. Its label as a &amp;ldquo;scripting&amp;rdquo; language gives the impression that Perl is best suited for writing shell scripts and batch files, and that it&amp;rsquo;s about as complicated as LOGO.&lt;/p&gt;

&lt;p&gt;Perl is anything but a simple language. For example, here are two (completely fictitious) statements, approximately similar in function, the first in C, the second in Perl, which return a dynamic function call:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func *p = *functable[i * (sizeof func *)];

$func = ${*{&amp;quot;$pkg&amp;quot;}}{&amp;quot;$key&amp;quot;};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perl&amp;rsquo;s use of data references is at least as sophisticated as so-called system languages - the difference being that languages such as C allow Type-T programmers to fragment memory at will, while Perl interprets code in its own memory space that makes it safer for use in networked environments.&lt;/p&gt;

&lt;p&gt;But complex data references can cause side-effects, which can cause programming gaffes in Perl at least as quickly as in C, Perl being an &amp;ldquo;interpreted language&amp;rdquo; and all.&lt;/p&gt;

&lt;p&gt;In addition, Perl is famous - or infamous - for its flexibility. So there are a half-dozen ways to do any one task, and that sort of freedom can be confusing to beginners, if not downright frightening. A Perl is a Perl is a Perl &amp;hellip;.&lt;/p&gt;

&lt;p&gt;Right. Anyway, with the advent of dynamic module loading in Perl, just about anyone can write a library module to perform his or her task in his or her own manner. That kind of freedom can be very liberating and empowering, but it can also lead to confusion and panic. Perl development efforts often have the character of shirts-and-skins basketball games rather than a cloistered garden of object orientedness.&lt;/p&gt;

&lt;p&gt;You can use objects in Perl, but they&amp;rsquo;re really just references to things called associative arrays, or hashes, which are composed of sets of other things.&lt;/p&gt;

&lt;p&gt;All of these objects belong to a class hierarchy. Even if the programmer doesn&amp;rsquo;t care, they still belong to a class in Perl, because the considerate language designers worked in a generic, syntactically consistent UNIVERSAL class for any piece of data that doesn&amp;rsquo;t wear its heart on its sleeve.&lt;/p&gt;

&lt;p&gt;I think E.E. Cummings might have done well as a Perl programmer.&lt;/p&gt;

&lt;p&gt;But back to object orientedness - instead of using objects, you can just tell the Perl interpreter what module some piece of data is being loaded from. You don&amp;rsquo;t have to cope with high-sounding and bothersome object oriented terminology if you don&amp;rsquo;t want to.&lt;/p&gt;

&lt;p&gt;However, to say that Perl has polymorphism - the ability of data to assume different characteristics depending on its context - is like saying that getting hit by a Greyhound bus might be hazardous to your health.&lt;/p&gt;

&lt;p&gt;Not that I&amp;rsquo;ve experienced that personally. In this instance, I&amp;rsquo;ll take somebody else&amp;rsquo;s word for it.&lt;/p&gt;

&lt;p&gt;With all of Perl&amp;rsquo;s flexibility, sophistication and hordes of contributed library modules, it&amp;rsquo;s easy to understand how a beginner might feel lost, frustrated and downright intimidated by the volume of material that&amp;rsquo;s available online. If it weren&amp;rsquo;t for a handful of dedicated CPAN archivists, the entire body of the community&amp;rsquo;s library source code would have succumbed to anti-matter and chaos long ago.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not certain how a contribution of mine might work in the context of my Web site, which is mainly about Linux, except that knowing how to use Perl is an essential system administration skill, and contributes mightily to the understanding of other system administration topics.&lt;/p&gt;

&lt;p&gt;If a beginning system administrator learns how to use Perl, then he or she will have a better understanding of how the operating system works and will be less likely to pull some bonehead newbie trick like, say, setting the umask to 0.&lt;/p&gt;

&lt;p&gt;So the purpose of this proposal is to argue that any effort to provide beginners with answers to their Perl questions must have equal prominence as the efforts of fully fledged programmers. A mailing list reference ought to appear prominently on Web pages, right up there with module listings and search engine forms, where beginners can find it right away.&lt;/p&gt;

&lt;p&gt;Besides, you wouldn&amp;rsquo;t want to feel superior to them.&lt;/p&gt;

&lt;p&gt;If you have any suggestions as to how best to help beginners learn Perl, visit &lt;a href=&#34;http://www.mainmatter.com/&#34;&gt;http://www.mainmatter.com/&lt;/a&gt;, and if the idea still sounds good, then email me, at &lt;a href=&#34;mailto:rkiesling@mainmatter.com&#34;&gt;rkiesling@mainmatter.com/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

