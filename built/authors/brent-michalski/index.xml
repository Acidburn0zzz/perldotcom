<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brent Michalski on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/authors/brent-michalski/</link>
    <description>Recent content in Brent Michalski on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Sep 1999 00:00:00 -0800</lastBuildDate>
    <atom:link href="/authors/brent-michalski/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>White Camel Awards</title>
      <link>http://localhost:1313/pub/1999/09/whitecamel/index.html/</link>
      <pubDate>Thu, 16 Sep 1999 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1999/09/whitecamel/index.html/</guid>
      <description>

&lt;p&gt;The Perl Conference brought us the first &amp;ldquo;White Camel&amp;rdquo; awards. The White Camel Awards were created to honor individuals who devote remarkable creativity, energy, and time to the non-technical work that supports Perl&amp;rsquo;s active and loyal user community. The awards were conceived of and administered by &lt;a href=&#34;http://www.pm.org&#34;&gt;Perl Mongers&lt;/a&gt;, a not-for-profit organization whose mission is to establish Perl user groups. In addition to Perl Mongers, O&amp;rsquo;Reilly and &lt;a href=&#34;http://www.sourceXchange.com&#34;&gt;sourceXchange&lt;/a&gt;, sponsored the awards.&lt;/p&gt;

&lt;p&gt;I recently had the chance to talk with the winners and ask them a few questions about the White Camel awards and their contributions to the Perl community.&lt;/p&gt;

&lt;h3 id=&#34;kevin-lenzo&#34;&gt;Kevin Lenzo&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;You won the &amp;ldquo;Perl Community&amp;rdquo; White Camel Award for YAPC. Briefly (50 pages or less), what was YAPC and what went into planning it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yet Another Perl Conference is a grassroots Perl conference, and the first one (YAPC 1999) was hosted at Carnegie Mellon University. YAPC 19100 will stay in Pittsburgh, incubating here for another year, and then I&amp;rsquo;d like to find another host city somewhere in Eastern North America&amp;amp;#151probably somewhere there&amp;rsquo;s a Perl Monger&amp;rsquo;s stronghold near a university.&lt;/p&gt;

&lt;p&gt;The conference was cheap: $60 conference cost, including food, covering the two-day event. We actually ran a little short on the budget in the end, but this was pried out of me in the closing session, and the community had $1000 on the stage in about 30 minutes! You don&amp;rsquo;t see that very often. The next one will probably cost a wee bit more, just to avoid the shortfall, but the whole thing is intended to be zero profit.&lt;/p&gt;

&lt;p&gt;The aim of YAPC is to be an affordable, regional conference, that people can get to, and that students, hobbyists and enthusiasts can get to without selling their computers. We had some great speakers show up and volunteer their time, also&amp;amp;#151I think the speakers did a great job, even when the mechanics of the conference occasionally broke down.&lt;/p&gt;

&lt;p&gt;Next year, we have some interesting challenges&amp;amp;#151we&amp;rsquo;re not the best-kept secret anymore. Even with double the capacity, I think we will have to turn people away, and we&amp;rsquo;ll surely get more talk submissions than we&amp;rsquo;ll be able to show. One goal I have is to bring some discussion of the internals and directions of Perl itself more to the next YAPC, and from the response so far, I&amp;rsquo;d say we&amp;rsquo;ll be seeing it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does receiving the White Camel award mean to you personally?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s pretty overwhelming&amp;amp;#151and I&amp;rsquo;ve felt that way ever since the conference. In a way it&amp;rsquo;s a physical symbol of the goodwill that almost broke me up at the end of YAPC. It&amp;rsquo;s not something one can scheme to get!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Does the award mean more to you because you were chosen by your peers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quite. I feel like I&amp;rsquo;ve been elected as a Tribune by my peers, and it&amp;rsquo;s my responsibility to carry that trust, and use any power it may grant to battle evil magistrates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Has receiving the award renewed your enthusiasm or have you always been active in the Perl community?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve had increasing activity in the Perl community over the last five or so years. I&amp;rsquo;d like to point out that Internet Relay Chat, newsgroups, and mailing lists have been really important to me, and I&amp;rsquo;d say the EFNet IRC channel #perl really helped catalyze YAPC. If I have any great involvement, that was the gateway to it.&lt;/p&gt;

&lt;p&gt;As far as renewing my enthusiasm&amp;amp;#151it had never waned. We do have some serious issues ahead of us in carrying Perl to the next level, as a language and as a platform. Perhaps my enthusiasm is tempered by the looming due diligence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do you think the White Camels will affect the Perl community?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think the awards certainly help raise awareness, both inside and out, of the Perl community&amp;amp;#151which appears to be becoming self-aware. This sort of recongition certainly helps me when I ask major speakers to come and speak at YAPC. The award has, in some ways, legitimized me with respect to Perl, so that I can ask about things and speak of it as &amp;ldquo;for Perl.&amp;rdquo; I think these awards are strong indicators to the places folks work, for instance, that their involvement with Perl is justified, and I know Carnegie Mellon University took it quite seriously. It has both freed me to officially focus, but also has brought certain responsibilties. The award made me look &amp;ldquo;presidential,&amp;rdquo; as they say in election years, and that apparent legitimacy helps me work for Perl.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you have any exciting plans for your new found fame and fortune?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, just gearing up for the next YAPC. If you&amp;rsquo;ve seen any of the Infobot work, you know I have an interest in group communication and discussion. Well, I&amp;rsquo;d really like to expose the planning process of YAPC itself through interactive means and web sites that can be group-authored. I&amp;rsquo;d like to see the community helping to structure the conference, and give feedback during the planning stages&amp;amp;#151to bring groupware to the whole conference planning process. It is a community event, after all.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to mention one other thing I&amp;rsquo;m working on here at CMU, though&amp;amp;#151 we&amp;rsquo;re about to release Sphinx, a major speech recognition engine as open source, and I&amp;rsquo;m intending to make a Perl module to go with it, so you can start talking to your desktops. Speech isn&amp;rsquo;t good for everything, and there are lots of things it&amp;rsquo;s inappropriate for, but it&amp;rsquo;s nice to say &amp;ldquo;turn on the lights in the kitchen.&amp;rdquo; Desktop agents, global communication using the net, and speech interaction are going to change the way we work and talk, and I&amp;rsquo;d like to see speech technology available in Perl.&lt;/p&gt;

&lt;h3 id=&#34;adam-turoff&#34;&gt;Adam Turoff&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;You won the &amp;ldquo;Perl User Group&amp;rdquo; White Camel Award. What were some of the things you did for the Perl community to earn this award?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Founding member of NY.pm&lt;/li&gt;
&lt;li&gt;Founded PHL.pm, with the monthly &amp;ldquo;social&amp;rdquo; dinners&lt;/li&gt;
&lt;li&gt;Started the monthly tech meeting series for PHL.pm&lt;/li&gt;
&lt;li&gt;Started the biweekly perl reading group for PHL.pm
(at this point, we meet 4 weeks/month)&lt;/li&gt;
&lt;li&gt;Started the (mostly) weekly reading group at ISI (my employer).&lt;/li&gt;
&lt;li&gt;Organized the signup lists at TPC2.0 (helping ~2-4 dozen groups form or grow IIRC)&lt;/li&gt;
&lt;li&gt;Perl evangelism at general tech events (conferences, LUG meetings)&lt;/li&gt;
&lt;li&gt;Free Stuff!! (Mostly FreeBSD goodies at large events.)&lt;/li&gt;
&lt;li&gt;Hardware scout for pm.org. (Many thousand thank you&amp;rsquo;s to our anonymous donor, Elaine Ashton.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What does receiving the White Camel award mean to you personally?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think it means that the Perl Community is hitting the next level. Two years ago, the Perl Community wasn&amp;rsquo;t very well formed, except for groups like p5p and other people interested in extending Perl technically. Today, we have three categories where people can be rewarded for making non-technical contributions to the Perl Community.&lt;/p&gt;

&lt;p&gt;Taking Perl to the next level means bringing Perl to new audiences and in new directions. One way to do that is to promote Perl user groups where we are interested in discussing common CGI idioms, venting about Microsoft, swapping Twilight Zone stories, talking about Postmodernism or sharing really cool observations about Perl. All at the same time, of course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Has receiving the award renewed your enthusiasm or have you always been active in the Perl community?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been active in the Perl Community since TPC 1.0. [TPC 1.0 is &lt;em&gt;The Perl Conference 1.0]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do you think the White Camels will affect the Perl community?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Perl community is both quite social, very eclectic. I hope that the White Camels (specifically the user groups and community awards) will help to highlight and encourage user groups everywhere to continue these traditions.&lt;/p&gt;

&lt;p&gt;One of the themes that has been circulating since the conference is that of the quiet majority of Perl users. We may not be as big or as vocal as the Java or Win* communities, but we use Perl and get the job done without making lots of noise. That makes it more difficult to advocate Perl and help it to grow in new directions. I hope that over the next few years, Perl advocacy grows and becomes more effective and more visible. I can&amp;rsquo;t wait to see the White Camel awards for Advocacy over the next few years.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you have any exciting plans for your new found fame and fortune?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Taking phl.pm out to dinner, and buying an exotic computer or two.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;These were some of the first people who distinguished themselves enough in the Perl community to earn the White Camel Awards. These awards were an excellent idea, the presence of peer awards such as these will undoubtably affect the Perl community. Any Perl programmer out there would be very proud to display their own White Camel award.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dispatch from YAPC</title>
      <link>http://localhost:1313/pub/1999/06/yapc.html/</link>
      <pubDate>Wed, 30 Jun 1999 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1999/06/yapc.html/</guid>
      <description>&lt;p&gt;Yet Another Perl Conference, also known as YAPC, wasn&amp;rsquo;t just &lt;em&gt;another&lt;/em&gt; conference, it was incredible.&lt;/p&gt;

&lt;table&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1999_06_yapc/kevin.jpg&#34; alt=&#34;Photo of Kevin Lenzo&#34; width=&#34;123&#34; height=&#34;168&#34; /&gt;&lt;br /&gt;
&lt;em&gt;Kevin Lenzo&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;YAPC was thought up and coordinated by Kevin Lenzo of Carnegie Mellon University. The idea was to have a &amp;ldquo;grass roots&amp;rdquo; Perl conference that everyone could afford. Kevin made it so affordable—just $60 per person—that nearly 300 people attended.&lt;/p&gt;

&lt;p&gt;You may be asking, what kind of conference could someone possibly host for $60 a person? Well, Kevin did such a remarkable job that it will be hard to top it, &lt;em&gt;ever&lt;/em&gt;. Not only were there great facilities, AV equipment, and non-stop talks and tutorials, he also managed to feed everyone! Did it stop there? No, Kevin&amp;rsquo;s Mom even made cookies for the whole gang! By the way, thank you Mrs. Lenzo, the cookies were excellent!!!&lt;/p&gt;

&lt;p&gt;To me, YAPC didn&amp;rsquo;t feel like just &lt;em&gt;another&lt;/em&gt; conference. There weren&amp;rsquo;t thousands of people trying to cram themselves here and there, or fighting over swag. YAPC was almost like a family reunion, it was very cozy. Nearly all of the people who are deeply involved with the development and support of Perl were there. I was even able to sit down with Larry Wall and talk with him over lunch without him being mobbed by a crowd. YAPC was also a place where you could finally put a face with a name/handle. I finally know &lt;em&gt;who&lt;/em&gt; &lt;code&gt;abigail&lt;/code&gt; is! You will have to come next year to find out for yourself&amp;hellip;&lt;/p&gt;

&lt;p&gt;Travel seemed to be a little bit of a problem, but of course that wasn&amp;rsquo;t Kevin&amp;rsquo;s fault. There were a few cancelled flights and I heard many stories of misdirected luggage. In fact, Larry Wall had to give his opening speech about his home X-10 setup without any of his X-10 props, they were somewhere in Indiana.&lt;/p&gt;

&lt;table&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1999_06_yapc/larry_x10_1.jpg&#34; alt=&#34;Photo of Larry Wall holding up imaginary X-10 components.&#34; width=&#34;189&#34; height=&#34;231&#34; /&gt;&lt;br /&gt;
&lt;em&gt;Larry Wall encouraging the audience&lt;br /&gt;
to use their imaginations&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Although his X-10 hardware was somewhere else, Larry did have his notebook computers with him and instead of using real X-10 components as props, Larry made us use our imaginations, holding up imaginary X-10 components for us to see. I got the impression that at Larry&amp;rsquo;s house it can be quite noisy because he has sounds play through the P.A. system for just about every event imaginable.&lt;/p&gt;

&lt;p&gt;The talks and tutorials were as good at YAPC as the talks and tutorials at any of the other big-name conferences. I think in many cases they were better because the presenters were not paid for their talks. I felt that this also added to the &lt;em&gt;grass-roots&lt;/em&gt; feeling of the conference. The presenters were not doing this for money, they were doing it for their love of the Perl language and to benefit the Perl community.&lt;/p&gt;

&lt;p&gt;Their were talks and tutorials on topics including learning Perl, the history of Perl, Perl and XML, using CGI.pm and infobots.&lt;/p&gt;

&lt;p&gt;Jon Orwant gave a presentation called &lt;em&gt;Rebuilding Post-Apocalyptic Civilization with Perl&lt;/em&gt;. Jon is an excellent speaker and his presentation was hilarious. His conclusion: When the apocalypse is over, the Perl programmers survive—of course.&lt;/p&gt;

&lt;table&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1999_06_yapc/dick_hardt_1.jpg&#34; alt=&#34;Photo of Dick Hardt &#34; width=&#34;191&#34; height=&#34;203&#34; /&gt;&lt;br /&gt;
&lt;em&gt;Dick Hardt&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;One of the more crowded talks was by Dick Hardt of &lt;a href=&#34;http://www.activestate.com&#34;&gt;ActiveState&lt;/a&gt;. There has been a lot of buzz because Microsoft recently announced that they were funding Perl development for Windows through ActiveState. Some people immediately thought that this was a bad thing and that Microsoft would somehow &amp;ldquo;taint&amp;rdquo; Perl (pun intended). According to Dick, this is not the case. As he pointed out, this is not the first time that Microsoft has funded Perl development. Microsoft has been funding Perl development through ActiveState since 1995. He assured the audience that Perl will still be openly developed and would not have a bunch of proprietary features thrown in. Dick also pointed out that Perl no longer has separate source trees for Windows and Unix. Because of this single source-tree, the ActiveState/Microsoft agreement will benefit the entire Perl community by providing outside money to fund the continual development of Perl, he said.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.pm.org&#34;&gt;Perl Mongers&lt;/a&gt; were out in full force at YAPC. YAPC was a great way to get in touch, in person, with many of the Perl Monger group leaders. brian d foy, the founder of The Perl Mongers was there working as many deals as he could with others in the Perl industry. It amazes me how much business gets done in side conversations between sessions. There was also a talk on Effective Perl Mongering given by Adam Turoff. Adam&amp;rsquo;s talk was designed to help others with their Perl Monger groups and advocacy.&lt;/p&gt;

&lt;p&gt;Elaine Ashton presented us with &lt;em&gt;&lt;a href=&#34;http://chaos.wustl.edu/perlhistory/&#34;&gt;The Timeline of Perl and its Culture&lt;/a&gt;&lt;/em&gt;. Not only was this a great talk, but Elaine has created &lt;em&gt;the&lt;/em&gt; guide to Perl history by researching and summarizing Perl from the beginning. I truly hope that at next year&amp;rsquo;s YAPC, Elaine will present her talk again, but in a larger time-slot. She had 45 minutes for the presentation, but really needed about twice that long to present all of the information.&lt;/p&gt;

&lt;p&gt;YAPC also gave many of the &lt;code&gt;#perl&lt;/code&gt; IRC regulars a chance to meet face-to-face. We even went out and took a &lt;code&gt;#perl&lt;/code&gt; family picture:
&lt;img src=&#34;http://localhost:1313/images/_pub_1999_06_yapc/perl_1.jpg&#34; alt=&#34;Group photo of #perl IRC members&#34; width=&#34;403&#34; height=&#34;276&#34; /&gt;
Though the formal conference ended at 5:00 each day, that didn&amp;rsquo;t mean the fun had to end. Perl Mongers know how to go out and have a great time, and that is just what they did—every night. I honestly think that some of the best ideas in Perl have come when you start mixing alcohol and Perl!&lt;/p&gt;

&lt;p&gt;Kevin managed to feed all 300 of us dinner on Thursday night and on Friday a group of Perl Mongers and a few people from &lt;a href=&#34;http://www.valinux.com&#34;&gt;VA Linux Systems&lt;/a&gt; got together and had dinner. The dinner was great, the conversation was better. It was a nice contrast to have not only people who knew Perl, but others who were intimately involved with Linux, another Open Source entity. VA Linux Systems were kind enough to pick up the tab for dinner too, &lt;strong&gt;thanks guys!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1999_06_yapc/kevin_money2.jpg&#34; alt=&#34;Kevin with his hands full of cash.&#34; width=&#34;180&#34; height=&#34;239&#34; /&gt;By the end of the conference, Kevin found out that they had gone a little over the budget. Word quickly spread and people immediately started a collection. Within 10 minutes Kevin had $1000 in his hands and VA Linux Systems offered to pay any extra overruns. The Perl community amazes me by showing how quickly they can get things done. People never once whined about the overrun, they just immediately took it upon themselves to remedy the situation. &lt;em&gt;This is exactly why Open Source works so well&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Sure, there is going to be &amp;ldquo;Yet Another&amp;rdquo; YAPC next year, but there is no way that YAPC will ever be the same. This year, it was a gathering for those who truly love Perl. Word will spread and many others will come—which is great and we encourage it, but the true family of YAPC was there this year. I can see it now, in 20 years people will be claiming that they were at YAPC 99, just like all those who &lt;em&gt;claim&lt;/em&gt; they were at Woodstock.&lt;/p&gt;

&lt;p&gt;Kevin, you did an outstanding job this year with YAPC! You should be very proud because you organized something that will be talked about for a long time now. &lt;strong&gt;Thank you Kevin!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And for all of those who doubted that a &lt;em&gt;good&lt;/em&gt; conference could cost a measly $60, see you next year!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What the Heck is a Perl Monger?!</title>
      <link>http://localhost:1313/pub/1999/01/foy.html/</link>
      <pubDate>Wed, 13 Jan 1999 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1999/01/foy.html/</guid>
      <description>&lt;p&gt;&lt;em&gt;This an interview I did with brian d foy, the creator of The Perl Mongers. My goal here is to inform the thousands of Perl programmers who may not know what the Perl Mongers are and what their mission is.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Please note that brian prefers his name to lack any capitalization, it isn&amp;rsquo;t because of my poor typing&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the Perl Mongers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: Perl Mongers are &amp;ldquo;the Perl user group people&amp;rdquo;!&lt;/p&gt;

&lt;p&gt;Legally speaking, Perl Mongers, Inc., is a Type B not-for-profit corporation organized under the laws of the State of New York. Perl Mongers purpose is to start and assist Perl user groups.&lt;/p&gt;

&lt;p&gt;Perl Monger started as a play on PM. The initial New York user group was called NY.pm to make is look like a module, especially since &amp;ldquo;use NYpm&amp;rdquo; could be a phone number (although 212-use-NYpm) was taken. We figured P stood for Perl, but we couldn&amp;rsquo;t figure out M, so we made it a regular expression: &lt;code&gt;/M((o|u)ngers|aniacs)*/&lt;/code&gt;. Unfortunately, the State of New York wouldn&amp;rsquo;t accept a regex as a corporation name, and &amp;ldquo;Monger&amp;rdquo; seemed to fit the Bedouin motif that has grown up around Perl, so it became the part of the name of the corporation.&lt;/p&gt;

&lt;p&gt;The term &amp;ldquo;Perl monger&amp;rdquo; is also loosely used to described any Perl hacker, evangelist, or missionary. My dictionary describes a monger as &amp;ldquo;a dealer in a specific commodity&amp;rdquo;. That certainly seems like what we are.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why did you start Perl Mongers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: I couldn&amp;rsquo;t find any Perl user groups. I thought this was strange since Perl was about 9 years old at the time, and there were thousands of user groups for that younger, caffeinated language. The &lt;a href=&#34;http://ny.pm.org&#34;&gt;New York Perl Mongers&lt;/a&gt; were moving along quite well and I thought other groups could do as well with just a little encouragement. I got insanely positive feedback from Randal Schwartz, Jon Orwant, and Chip Salzenberg (all of whom are involved with the Perl Institute) about the idea of a central organization to provide services to user groups, so I created Perl Mongers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What services does Perl Mongers provide?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: Perl Mongers has grown quite a bit. Our initial strength was publicizing and promoting new Perl user groups. Now, thanks to our sponsors, we provide many services such as free web hosting and mailing lists to Perl user groups (we have a nice SparcStation20 on a T1 shared with &lt;a href=&#34;http://www.smithrenaud.com&#34;&gt;Smith Renaud, Inc.&lt;/a&gt;) We are working on an &lt;a href=&#34;http://www.pm.org/invite-a-guru.html&#34;&gt;Invite-A-Guru service&lt;/a&gt; that will help user groups invite speakers to their events. We also constantly working on more and better deals to offer user groups, so keep checking back to see what&amp;rsquo;s new!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Does it cost anything to join Perl Mongers and how are Perl Mongers financially supported?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: Perl Mongers is completely free, and we intend to keep it that way. Perl Mongers is supported by the blood and sweat of volunteers as well as the generosity of our corporate sponsors. Our main source of revenue comes from the sale of &lt;a href=&#34;http://www.pm.org/tshirts.html&#34;&gt;Perl Mongers t-shirts&lt;/a&gt; , but we won&amp;rsquo;t necessarily turn away large sums of money or other donations which we could funnel right back into the Perl user groups. Since we have no payroll, our expenses are actually quite low. Everything is done by volunteers, and we&amp;rsquo;re always looking for people to help us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How many Perl Mongers groups are there right now?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: The numbers are growing quickly, but right now we&amp;rsquo;re approaching over a hundred groups with about a third of those firmly established. Once a group is established, it&amp;rsquo;s listed on the &lt;a href=&#34;http://www.pm.org/groups.html&#34;&gt;Established Groups Page&lt;/a&gt;. Perhaps we should have a goal of 2000 by 2000. Did I just make a bold, kennedyesque promise? Oops. I guess I&amp;rsquo;ll have to deliver now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How many countries have Perl Mongers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: So far, Perl Mongers has assisted the formation of Perl user groups in several countries spread over four continents. We&amp;rsquo;re currently working on providing services in Europe and Australia which should make the process even easier for our friends overseas. We&amp;rsquo;re looking to get Antarctica.pm started as soon as a perl hacker gets down there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How many Perl Mongers are there currently and is there any way to track the numbers of members/groups of Perl Mongers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: So far we have avoided collecting demographic or statistical information about the groups that we serve. Our mandate is to serve user groups rather than users, which is more within the mandate of The Perl Institute. The list of groups can be seen on the &lt;a href=&#34;http://www.pm.org/groups.html&#34;&gt;Established Groups Page&lt;/a&gt;. It&amp;rsquo;s really difficult to cull numbers from the mailing lists since many people subscribe to lists from other groups as well. Ziggy Turoff is a charter member of NY.pm and a group leader of Philadelphia.pm, and I&amp;rsquo;m sure there&amp;rsquo;s even more cross pollination. Perhaps I should ask comp.lang.perl.misc how to pull out the unique elements of the lists.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why would people be interested in becoming Perl Mongers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: People would be interested in being part of a Perl user group because they would get to interact, in a social setting, with other Perl users. We&amp;rsquo;ve found that the majority of Perl users don&amp;rsquo;t know about other users in their area, although they may know hundreds online. After work discussions over beer and pizza can sometimes be very useful, if not just plain fun. Personally, I&amp;rsquo;ve found hackers that I&amp;rsquo;ve given contract work to because I knew them from NY.pm events.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do Perl Mongers benefit the Perl community?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: We build the community of Perl by bringing Perl hackers together. After that it&amp;rsquo;s up to the hackers to do the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the difference between the Perl Mongers and the Perl Institute?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: They are separate entities. Perl Mongers deal exclusively with Perl user groups, while The Perl Institute&amp;rsquo;s mandate is much broader and includes almost anything relating to the Perl community. Perl Mongers is &amp;ldquo;the Perl user group people&amp;rdquo;, while TPI &amp;ldquo;keeps Perl free, usable, and available&amp;rdquo;. We were very careful to talk to TPI before starting Perl Mongers to ensure that we wouldn&amp;rsquo;t be duplicating work or causing confusion in the Perl community, and we try to keep them up to date on what we&amp;rsquo;re doing so we don&amp;rsquo;t work at cross purposes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How can someone find out if there is a Perl Mongers group in their area?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: They can look at the Established Groups page, or ask someone at &lt;a href=&#34;mailto:groups@pm.org&#34;&gt;groups@pm.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there aren&amp;rsquo;t Perl Mongers nearby, how can someone start a new group?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;brian&lt;/strong&gt;: Perl Mongers can lead one through the process. Potential group leaders should see the information at the &lt;a href=&#34;http://www.pm.org&#34;&gt;web site&lt;/a&gt;. One then can request a new group through the &lt;a href=&#34;http://www.pm.org/new_group_request.html&#34;&gt;New Group Request Form&lt;/a&gt;. Once we get the request, we start the process including advertising, announcement, and other services, such as free web hosting and mailing lists. Should we find the time, we&amp;rsquo;ll automate this process as much as possible to make it even easier.&lt;/p&gt;

&lt;p&gt;Any volunteers?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks brian!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the site. See if there is a Perl Mongers group near you, if not - start one! It is not hard and doesn&amp;rsquo;t take much time at all, brian has made it as easy as possible so that you can get on with creating a new &amp;ldquo;Perl community&amp;rdquo; in your area.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perl Rescues a Major Corporation</title>
      <link>http://localhost:1313/pub/1998/10/brent.html/</link>
      <pubDate>Wed, 21 Oct 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/10/brent.html/</guid>
      <description>

&lt;p&gt;This article is about how a major corporation used Perl in a critical business application. The company I am writing about today is a major aerospace corporation who has chosen to remain anonymous. The names have been changed to protect the innocent - but the story and all events portrayed in here are all factual. For no compelling reason, I will call them &amp;ldquo;company B.&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;history&#34;&gt;History&lt;/h3&gt;

&lt;p&gt;Company B received a contract to develop a new piece of hardware. As part of this contract, they were to supply their documents online.&lt;/p&gt;

&lt;p&gt;First, company B looked into a Commercial, Off-The-Shelf (COTS) document management system. It seemed to meet all of their needs, until they found out that the cost was over $600,000. The price was way too high, in fact it was higher than the original budget for the &lt;em&gt;whole&lt;/em&gt; contract!&lt;/p&gt;

&lt;p&gt;Next, they decided to go with a proprietary document management system (DMS) that the company had an enterprise license for. This DMS was supposed to be the &amp;ldquo;do-all, end-all&amp;rdquo; DMS that would solve all of their problems. And since it was a commercial product and they had an enterprise license for it, the managers of the project assumed that there must be plenty of support available for it.&lt;/p&gt;

&lt;p&gt;Company B spent over 6 months installing, configuring, and tweaking this DMS system on the new hardware that they had to buy in order to run it. When they ran into trouble, they called the people within company B who were supposed to be experts on the system for help. These experts didn&amp;rsquo;t know the system any better than the group working on the project and support from the software company was either too pricey, or not much help. So much for the availability of support for this COTS product!&lt;/p&gt;

&lt;p&gt;After 6 months of frustration, they gave up on the company standard DMS and implemented a &amp;ldquo;solution&amp;rdquo; using File Manager. This solution provided no features of a DMS, was cumbersome and documents were hard to find.&lt;/p&gt;

&lt;h3 id=&#34;perl-to-the-rescue&#34;&gt;Perl to the Rescue&lt;/h3&gt;

&lt;p&gt;At this point I came along - and I was completely confident that I could solve their dilemma using a web-based solution with Perl. &lt;em&gt;What other language would I use?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I talked with the program managers and we discussed what the needs of the DMS were. Next, I gathered user input, which, in my opinion, is the &lt;em&gt;most&lt;/em&gt; important factor. When developing a system that is going to impact the way your users work on a system, it is important to understand their needs. After considering the needs of users and management, I proposed a Web-based DMS which management quickly approved. Now all I had to figure out was: &lt;em&gt;how am I going to pull this off?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I started to develop the new system and the pieces seemed to fall into place. Eight weeks later, when we rolled out the new Perl DMS system, I completely shut off the existing File Manager access so users had no choice but to use the new system. It was a rather brutal way to force them onto the new system, but one that I felt was necessary.&lt;/p&gt;

&lt;h3 id=&#34;the-new-system&#34;&gt;The New System&lt;/h3&gt;

&lt;p&gt;The new Perl DMS system has the following features (and more):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Completely web-based.&lt;/li&gt;
&lt;li&gt;Single logon, using Windows NT rights.&lt;/li&gt;
&lt;li&gt;Database back-end:

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;controls document status, stores users, etc.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Document check in/out based upon user rights.&lt;/li&gt;
&lt;li&gt;Page views based upon user rights:

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Users only see documents they have rights to.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Full-text search and keyword search capabilities.&lt;/li&gt;
&lt;li&gt;Users determine a files rights when they add a new document.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Figure 1&lt;/strong&gt; shows an example of the main screen that is the heart of the Perl DMS.
&lt;img src=&#34;http://localhost:1313/images/_pub_1998_10_brent/image1.gif&#34; alt=&#34;Perl Document Management System Screen Shot&#34; width=&#34;450&#34; height=&#34;337&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This screen shot shows that the DMS system is divided up into &lt;em&gt;categories&lt;/em&gt; and &lt;em&gt;subcategories.&lt;/em&gt; When a user clicks on a subcategory, they are taken to a screen that lists all of the documents that they have rights to. All of this is done dynamically by gathering the data from the NT system and the back-end database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Figure 2&lt;/strong&gt; shows an example of what the user sees when they click a subcategory.
&lt;img src=&#34;http://localhost:1313/images/_pub_1998_10_brent/image2.gif&#34; alt=&#34;Perl Document Management System Screen Shot 2&#34; width=&#34;450&#34; height=&#34;337&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The user only sees the documents that they have rights to see. The rights are gathered from the NT system rights and are based upon what groups the user is a member of. If you grant a user new rights, they simply have to reload the page and the new documents they have rights to are instantly available.&lt;/p&gt;

&lt;p&gt;In Figure 2, a document is checked out to Fred Flintstone. Notice that this document does not have a &lt;strong&gt;Check Out&lt;/strong&gt; link next to it (since it is already checked out). But, the username of the person who checked it out is linked to a database entry that stores the users name, phone number and e-mail address. If you need to check this document out, you can call the user who currently has it out and request that they check it in so that you can then check it out. If Fred Flintstone was the person viewing this page, there would be a &lt;strong&gt;Check In&lt;/strong&gt; link next to the document(s) that he had checked out.&lt;/p&gt;

&lt;p&gt;The Perl DMS also sends a weekly reminder email to all users who have documents checked out so they don&amp;rsquo;t forget to check the documents back in.&lt;/p&gt;

&lt;h3 id=&#34;benefits-of-the-perl-dms&#34;&gt;Benefits of the Perl DMS&lt;/h3&gt;

&lt;p&gt;The Perl DMS system has many benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is very easy to use.&lt;/li&gt;
&lt;li&gt;It is easy to find documents.

&lt;ul&gt;
&lt;li&gt;There are over 500 directories that make up the Perl DMS - and they are all hidden from the user.&lt;/li&gt;
&lt;li&gt;Over 1,500 documents are instantly available to users via simple searches.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Users don&amp;rsquo;t have to map drives or use other client software on their systems.&lt;/li&gt;
&lt;li&gt;It is very customizable.&lt;/li&gt;
&lt;li&gt;Easy to gather usage statistics.&lt;/li&gt;
&lt;li&gt;Includes many extras:

&lt;ul&gt;
&lt;li&gt;Calendaring.&lt;/li&gt;
&lt;li&gt;Teleconference information.&lt;/li&gt;
&lt;li&gt;Immediate access to information.&lt;/li&gt;
&lt;li&gt;Global information sharing.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The total cost of the new Perl DMS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Additional Hardware: $0&lt;/li&gt;
&lt;li&gt;Additional Software: $0&lt;/li&gt;
&lt;li&gt;Additional Licensing: $0&lt;/li&gt;
&lt;li&gt;Labor: 8 weeks of my time

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Not bad considering 6 months was spent trying to implement a system that was abandoned&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Once again, Perl gets the job done where other solutions fail. Perl is extremely cost-effective and is very well supported. Whenever I ran into problems, I hit the online resources and Usenet. I was able to solve &lt;strong&gt;all&lt;/strong&gt; of the problems that I encountered this way. I hate hearing people say that COTS programs are supported and Perl is not, it is a total misconception. Just because a corporation has an enterprise license or something is the company standard does not make it the right choice, keep an open mind.&lt;/p&gt;

&lt;p&gt;Perl is a viable solution in many situations. Perl won&amp;rsquo;t solve &lt;em&gt;every&lt;/em&gt; problem &amp;ndash; I am still trying to get Perl to unclog my drains &amp;ndash; but it is a powerful language that adapts very well to many situations. Also with Perl, you are able to use it on nearly any platform, and on &lt;strong&gt;all&lt;/strong&gt; major platforms &amp;ndash; making it an even more viable solution inside of enterprises.&lt;/p&gt;

&lt;p&gt;Perl is just as important, actually it is probably more important, than those new enterprise languages with &lt;em&gt;coffee&lt;/em&gt; names. While Perl may not be as &lt;em&gt;buzzword compliant&lt;/em&gt; as those other languages, Perl is much more platform independent AND more widely used than management realizes.&lt;/p&gt;

&lt;p&gt;The next time you have a major task to undertake, take a serious look at Perl, it could save you a lot of time, money and frustration!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Final Day at The Perl Conference</title>
      <link>http://localhost:1313/pub/1998/08/show/day4.html/</link>
      <pubDate>Fri, 21 Aug 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/08/show/day4.html/</guid>
      <description>

&lt;h4 id=&#34;free-software-goes-mainstream-by-netscape-http-www-netscape-com&#34;&gt;Free Software Goes Mainstream &lt;em&gt;by &lt;a href=&#34;http://www.netscape.com&#34;&gt;Netscape&lt;/a&gt;&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Open source is something that Perl programmers knew was a great idea years ago, too bad corporate America is just starting to open their eyes. In many cases they have been using open source software and just didn&amp;rsquo;t know it thanks to the people behind-the-scenes, namely &lt;strong&gt;us.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As we all know, or at least we do now, Netscape released the source code to their Navigator 5.0 browser back in January. Prior to its release, Netscape had been losing the market-share in the browser wars. Since Netscape released the source, their market-share has increased by about 10% according to Netscape&amp;rsquo;s measures.&lt;/p&gt;

&lt;p&gt;Netscape&amp;rsquo;s decision to release the source code of one of their premier products has had a profound effect on the computing world. IBM, Corel, Informix, and Oracle are now starting to experiment with open source. I said experiment because I haven&amp;rsquo;t seen any &lt;em&gt;major&lt;/em&gt; products source-code released from these companies yet.&lt;/p&gt;

&lt;p&gt;Netscape also spoke about PerLDAP. PerLDAP is a native Perl interface to LDAP. PerLDAP allows Perl developers to write directory enabled applications. Many major corporations are looking into LDAP solutions to solve many of the problems with having multiple directories in a company. With PerLDAP, Perl programmers can leverage these new LDAP directories and make incredibly powerful directory applications.&lt;/p&gt;

&lt;p&gt;Netscape closed with a challenge. Since the open source movement is increasing, largely because of developer support, they urged us to help other companies &lt;em&gt;&amp;ldquo;catch the wave&amp;rdquo;&lt;/em&gt; of open source software.&lt;/p&gt;

&lt;h4 id=&#34;perl-style-by-tom-christiansen&#34;&gt;Perl Style &lt;em&gt;by Tom Christiansen&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Tom put on another great presentation. Perl style presented us with several tips and tricks about how to write your Perl code. As Tom pointed out, these are not necessarily the &lt;em&gt;right&lt;/em&gt; way, and they are definitely not the &lt;em&gt;only&lt;/em&gt; way to do it. Remember, there is always more that one way to do it in Perl. Tom presented us with &lt;em&gt;his&lt;/em&gt; ways of programming Perl.&lt;/p&gt;

&lt;p&gt;Tom said the most profound statement that I had ever heard about programming. &lt;em&gt;Think, hack &amp;hellip; throw away.&lt;/em&gt; That&amp;rsquo;s right, create your program &amp;ndash; and then throw it away!&lt;/p&gt;

&lt;p&gt;Now, if you really think about this statement, it makes total sense. As Tom pointed out, from the time we started writing papers in school, we have been taught to write a rough draft first. The same can apply in programming too. I recall several programs where I think of better ways I could have written them, but I don&amp;rsquo;t fix them because they are &amp;ldquo;done&amp;rdquo; and they are doing their job. The most likely reason we don&amp;rsquo;t throw out our &lt;em&gt;rough drafts&lt;/em&gt; in programming is because time is money and we are paid to solve problems. If the code solved the problem, then we did it &lt;em&gt;good enough,&lt;/em&gt; although if we had taken what we learned from writing it once, and then rewrote it - we might have been able to do it &lt;strong&gt;better&lt;/strong&gt;. Writing it the first time allows us to get our creative juices flowing, writing it again allows us capitalize on those creative juices and do it better.&lt;/p&gt;

&lt;p&gt;Tom also said that if we &lt;em&gt;need&lt;/em&gt; comments in our code, then we didn&amp;rsquo;t write it properly. He wasn&amp;rsquo;t saying that we should never comment our code, rather if we write our code properly, any other Perl programmer &lt;em&gt;should&lt;/em&gt; be able to come behind us and read the code that we wrote. He did suggest that if we &lt;em&gt;are&lt;/em&gt; going to comment, try to limit the comments to &lt;em&gt;blocks&lt;/em&gt; and &lt;em&gt;data.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also, instead of writing your variables with leading caps for all of the words like this: &lt;code&gt;MyVariableForLoop&lt;/code&gt;. We should instead use the underscore and write it like this: &lt;code&gt;my_variable_for_loop&lt;/code&gt;. He gave several good reasons, including the fact that Perl is now a global language and it can be hard for those who speak English as a second language to read the variables. Also, we are used to having spaces in words so it makes it more readable for us too.&lt;/p&gt;

&lt;h4 id=&#34;winding-down&#34;&gt;Winding Down&lt;/h4&gt;

&lt;p&gt;Sadly, today was the final day of The Perl Conference. I had a fantastic time at the conference and I learned more about Perl in the past four days than I thought possible! Unfortunately, I was unable to stay the entire fourth day so I wasn&amp;rsquo;t able to talk about all of the events of the day, I am sure some other profound statements were made before the day was done.&lt;/p&gt;

&lt;p&gt;The Perl Conference allowed us to do many important things like to put faces with names. I saw many of these people on the Usenet, but I never met them in person. The Perl Conference let us come together and meet them in person. In many cases, the people I met were nothing like I imagined them. This was not a bad thing, it just shows that I have a bad imagination ;-).&lt;/p&gt;

&lt;p&gt;If you were able to make the conference, you know how much fun it was. If you were unable to make it, you missed hearing people like Randal Schwartz, Lincoln Stein, Tom Christiansen, Jeffrey Friedl and who could forget, Larry Wall.&lt;/p&gt;

&lt;p&gt;The amount of knowledge that proliferated the air over the past four days was remarkable. Even when we were out on the town and maybe even having a little &lt;strong&gt;too&lt;/strong&gt; much fun, the Perl discussions continued and knowledge was shared. Although at some points the discussions were a bit slurred ;-)&lt;/p&gt;

&lt;p&gt;The networking, &lt;em&gt;human networking - not computer networking&lt;/em&gt;, was also a great benefit of the conference. &lt;a href=&#34;http://www.pm.org&#34;&gt;The Perl Mongers&lt;/a&gt; more than doubled in size and &lt;a href=&#34;http://www.perl.org&#34;&gt;The Perl Institute&lt;/a&gt; was able to have a meeting, &lt;em&gt;in person,&lt;/em&gt; with many of its members &lt;em&gt;and&lt;/em&gt; the Perl community. These types of meetings are important to keep the organizations going.&lt;/p&gt;

&lt;p&gt;Perl is getting stronger and stronger every day and the momentum gained by this gathering of &amp;ldquo;Perl people&amp;rdquo; should be enough to keep many of us busy until the next Perl Conference.&lt;/p&gt;

&lt;p&gt;If you made it this year, I &lt;strong&gt;know&lt;/strong&gt; I&amp;rsquo;ll see you next year. If you didn&amp;rsquo;t make it this year, come next year! The value of the conference &lt;strong&gt;&lt;em&gt;far&lt;/em&gt;&lt;/strong&gt; exceeded my expectations. The conference also it gives &lt;em&gt;you&lt;/em&gt; the opportunity to make a difference in the Perl community. Let&amp;rsquo;s keep the momentum going. And remember, Perl is the &amp;ldquo;duct tape&amp;rdquo; of the internet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 3: Core Perl Developers at Work and Play</title>
      <link>http://localhost:1313/pub/1998/08/show/day3.html/</link>
      <pubDate>Thu, 20 Aug 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/08/show/day3.html/</guid>
      <description>

&lt;h3 id=&#34;state-of-the-onion-speech&#34;&gt;State of the Onion Speech&lt;/h3&gt;

&lt;p&gt;Day 3 of The Perl Conference started off with Larry Wall giving his &lt;em&gt;State of the Onion Speech.&lt;/em&gt; For those of you who don&amp;rsquo;t know, Larry is the creator of Perl. Larry is also known for his corny jokes, and there were plenty of them in his speech.&lt;/p&gt;

&lt;p&gt;Larry used many visual aids for his speech this year, last year he used many different sounds in his presentation - next year he said he was going to use smells, &lt;em&gt;he was joking at the time, but you never know with Larry.&lt;/em&gt; Larry used many circles as visual aids in this years speech, they were used to exemplify the new &amp;ldquo;open source&amp;rdquo; movement that has been going on recently. I think the best analogy he used was the pearl example. He said that a pearl starts out as an &lt;em&gt;irritant&lt;/em&gt;, and then keeps growing and growing until it is something beautiful. Larry called himself the irritant in the example, but without him, we&amp;rsquo;d probably all be using some heavily marketed, proprietary language right now. Larry&amp;rsquo;s analogy relates well to how Perl is now, the same goes for &lt;a href=&#34;http://www.apache.org&#34;&gt;Apache&lt;/a&gt; and now &lt;a href=&#34;http://www.netscape.com&#34;&gt;Netscape&lt;/a&gt; is hoping to jump into the &amp;ldquo;open source parade&amp;rdquo; too.&lt;/p&gt;

&lt;p&gt;Larry also made sure that we all remembered what three qualities make up a good Perl programmer, &lt;em&gt;laziness, impatience, and hubris.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;oo-in-perl-boom-or-bust&#34;&gt;OO in Perl, Boom or Bust?&lt;/h4&gt;

&lt;p&gt;The debate over whether OO should be used in Perl was a ton of fun! On the pro-OO side was Chip Salzenberg and Mike Stok while on the anti-OO side was Tom Christiansen and Jon Orwant.&lt;/p&gt;

&lt;p&gt;Chip started out for the pro side and had many good points, such as &lt;em&gt;&amp;ldquo;There is more than one way to do it&amp;rdquo;&lt;/em&gt; or &lt;em&gt;&amp;rdquo; If it helps some people develop code quicker, then leave it in.&amp;rdquo;&lt;/em&gt; These are some of the fundamentals that Perl is built around.&lt;/p&gt;

&lt;p&gt;Jon was next, his slides were titled &lt;em&gt;OOP Sucks&lt;/em&gt; and he had several points why OO programming is bad. Jon&amp;rsquo;s main point was that OO programming adds unnecessary complexity to the programs. He presented examples with benchmark timings, the OO side lost bad.&lt;/p&gt;

&lt;p&gt;Tom also took the microphone and was debating with Chip. The funniest part was when Tom said &lt;em&gt;&amp;ldquo;Would you argue with me?&amp;rdquo;&lt;/em&gt; to Chip because Chip had admitted to a few cases where Tom had good points. I think Tom&amp;rsquo;s rebuttal summed it all up when he said &lt;em&gt;&amp;ldquo;Remember what static actually means&amp;hellip; dead.&amp;rdquo;&lt;/em&gt; Tom got a round of applause for that one.&lt;/p&gt;

&lt;p&gt;When the debate ended, I got the feeling that OO lost because it added unneeded complexity to the programs and slowed them down by creating extra overhead.&lt;/p&gt;

&lt;h4 id=&#34;the-internet-quiz-show&#34;&gt;The Internet Quiz Show&lt;/h4&gt;

&lt;p&gt;The Internet Quiz Show was the highlight of the day. Jon Orwant hosted the competition in a &amp;ldquo;college bowl-style&amp;rdquo; format.&lt;/p&gt;

&lt;p&gt;The questions were very well written and &lt;em&gt;very&lt;/em&gt; challenging. Jon asked questions like &lt;em&gt;&amp;ldquo;If Microsoft were to sell everything and go into the kidney business, how many kidneys could they buy at fair-market value?&amp;rdquo;&lt;/em&gt; or &lt;em&gt;&amp;ldquo;Out of the following drinks, rank them in order of caffeine.&amp;rdquo;&lt;/em&gt; Some of the questions even related to Perl - actually, most related to Perl, but Jon had to have some fun writing them.&lt;/p&gt;

&lt;p&gt;The winning team ended up being Nick Ing-Simmons, Graham Barr, and Brand Hilton representing the Dallas/Fort-Worth Perl Mongers.&lt;/p&gt;

&lt;h4 id=&#34;the-perl-institute-http-www-perl-org&#34;&gt;&lt;a href=&#34;http://www.perl.org&#34;&gt;The Perl Institute&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;In a late evening session, Chip Salzenberg held a session to talk about the direction of &lt;em&gt;The Perl Institute (TPI)&lt;/em&gt;. TPI is going to work on getting some professionally designed marketing materials together to help promote Perl. &lt;strong&gt;&lt;em&gt;We&lt;/em&gt;&lt;/strong&gt; all know that Perl is doing much of the work in businesses but we are having a hard time selling Perl to the managers because it is &amp;ldquo;free&amp;rdquo;. Chip offered some suggestions on TPI direction and gathered volunteers to help maintain the organization.&lt;/p&gt;

&lt;h4 id=&#34;the-perl-night-life&#34;&gt;The Perl Night-Life&lt;/h4&gt;

&lt;p&gt;The evening ended with another large group of &amp;ldquo;Perl people&amp;rdquo; going out an doing some serious networking, code sharing and conceptualizing over some drinks &lt;em&gt;(sorry if I am typing too loud Randal)&lt;/em&gt;. The difference this evening is that we &lt;em&gt;had&lt;/em&gt; reservations at the pub so we didn&amp;rsquo;t have to walk around town looking for a pub that could accommodate us. It was really a great time spending the evening with some of the core Perl developers and code maintainers.&lt;/p&gt;

&lt;h4 id=&#34;winding-down&#34;&gt;Winding Down&lt;/h4&gt;

&lt;p&gt;Tomorrow marks the end of The Perl Conference. I&amp;rsquo;ll have one more update to fill you in on what happens and any other newsworthy items that come up. See you then!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 2: Perl Mongers at The Conference</title>
      <link>http://localhost:1313/pub/1998/08/show/day2.html/</link>
      <pubDate>Wed, 19 Aug 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/08/show/day2.html/</guid>
      <description>

&lt;h3 id=&#34;advanced-perl-fundamentals&#34;&gt;Advanced Perl Fundamentals&lt;/h3&gt;

&lt;p&gt;Day 2 of The Perl Conference was another exciting day! I spent the day in the &lt;em&gt;Advanced Perl Fundamentals&lt;/em&gt; tutorial given by Randal Schwartz and Tom Phoenix.&lt;/p&gt;

&lt;p&gt;Randal and Tom make an excellent team. Randal did most of the speaking and Tom did the technical work but any time he was needed, Tom was right there to answer any questions or fill in where Randal left off.&lt;/p&gt;

&lt;p&gt;The tutorial was actually one of the classes that Randal gives when he teaches for &lt;a href=&#34;http://www.stonehenge.com&#34;&gt;Stonehenge Consulting&lt;/a&gt;. Normally, this would be a three or four day class but Randal presented it in one very intense day. I wouldn&amp;rsquo;t recommend taking this course in a one day setting if you can help it! Randal did a great job answering the questions from the audience and was able to stay on topic, most of the time. Randal and Tom have a great sense of humor and they were able to keep us all interested by combining Perl instruction and jokes throughout the day.&lt;/p&gt;

&lt;p&gt;Randal covered many advanced Perl topics like regular expressions, the &lt;code&gt;map&lt;/code&gt; operator, the &lt;code&gt;eval&lt;/code&gt; operator, anonymous arrays and Object Oriented Perl - to name a few. One of the more interesting items Randal covered was the &lt;em&gt;Schwartzian Transformation&lt;/em&gt;. Simply put, the Schwartzian Transformation is a very efficient way to sort hashes. Here it is, in it&amp;rsquo;s entirety:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@sorted_files =
  map { $_-&amp;gt;[0] }
  sort { $a-&amp;gt;[1] &amp;lt;=&amp;gt; $b-&amp;gt;[1] }
  map { [ $_, -s $_ ] }
  &amp;lt;*&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This example sorts a directory by file size but Randal assured us it can be easily modified to fit just about any situation.&lt;/p&gt;

&lt;p&gt;Towards the end of the tutorial, Randal was talking about Object Oriented Perl. Randal summed it all up when someone asked whether OO Perl was better than non-OO Perl. Randal&amp;rsquo;s answer was simple &lt;em&gt;&amp;ldquo;Objects are good when they are good.&amp;rdquo;&lt;/em&gt; With those words of wisdom, we were let go to gather whatever brain cells we had left and prepare for the evening activities.&lt;/p&gt;

&lt;h4 id=&#34;the-perl-mongers-http-www-pm-org-bof-session&#34;&gt;The &lt;a href=&#34;http://www.pm.org&#34;&gt;Perl Mongers&lt;/a&gt; BOF Session&lt;/h4&gt;

&lt;p&gt;This was not a regular tutorial, but instead was part of the evening activities to keep the Perl developers busy. brian d foy &lt;em&gt;(No, I didn&amp;rsquo;t spell it wrong.)&lt;/em&gt; was on hand to talk about what the Perl Mongers are, and explain the concept behind the Perl Mongers group.&lt;/p&gt;

&lt;p&gt;brian started a non-profit organization called Perl Mongers and its purpose is to get Perl programmers together. The idea is that Perl Monger groups are formed in the different cities/areas of the world and the members meet and discuss Perl. This is very much like a user-group, but with the Perl Mongers, brian is trying to take a lot of the hassle out of starting the groups by doing the &lt;em&gt;grunt work&lt;/em&gt; himself. By &amp;ldquo;grunt work&amp;rdquo;, I mean brian is handling things like mailing lists, providing DNS names and taking care of the legal issues.&lt;/p&gt;

&lt;p&gt;There are already several Perl Monger groups around the globe and this meeting created even more interest in the idea. Good luck brian, Perl Mongers is a great idea.&lt;/p&gt;

&lt;h4 id=&#34;fireside-chat-with-jon-orwant&#34;&gt;Fireside Chat with Jon Orwant&lt;/h4&gt;

&lt;p&gt;To close out the evening, I attended the &lt;em&gt;Fireside Chat with Jon Orwant&lt;/em&gt;. Jon is the publisher of &lt;a href=&#34;http://www.tpj.com&#34;&gt;The Perl Journal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This was to be an evening of drinks and &amp;ldquo;talking Perl&amp;rdquo;, but the evening started out a bit differently than I had expected. There was a group of about 40 of us and the idea was to go to a local bar because it had a picture of a camel on it. Well, the bar was much too small so we proceeded to three of four other bars before we found one that could accommodate us! Try to imagine 40 Perl programmers walking the streets of San Jose at night, &lt;em&gt;it&amp;rsquo;s not a pretty picture&lt;/em&gt; ;-) Needless to say, we got many strange looks from the people we passed.&lt;/p&gt;

&lt;p&gt;We ended up singing &lt;em&gt;Happy Birthday&lt;/em&gt; to Jon and thoroughly embarrassing him, he tried to keep it a secret. Happy Birthday Jon!&lt;/p&gt;

&lt;p&gt;Tomorrow is Larry Wall&amp;rsquo;s &lt;em&gt;State of the Onion Address&lt;/em&gt;. I have been looking forward to this speech and I will bring you the details of Day 3 at The Perl Conference tomorrow!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 1 Highlights: Lincoln&#39;s Cool Tricks and Regexp</title>
      <link>http://localhost:1313/pub/1998/08/show/day1.html/</link>
      <pubDate>Tue, 18 Aug 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/08/show/day1.html/</guid>
      <description>

&lt;h3 id=&#34;monday-s-highlights&#34;&gt;Monday&amp;rsquo;s Highlights&lt;/h3&gt;

&lt;p&gt;The first day of The Perl Conference is behind us and the knowledge sharing is in high gear.&lt;/p&gt;

&lt;p&gt;Today I attended two excellent tutorials. The first was called &lt;em&gt;Cool Tricks with Perl and Apache&lt;/em&gt; by Lincoln Stein and the second was &lt;em&gt;Understanding Perl Regular Expressions&lt;/em&gt; by Jeffrey Friedl.&lt;/p&gt;

&lt;h4 id=&#34;cool-tricks-with-perl-and-apache&#34;&gt;Cool Tricks with Perl and Apache&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Cool Tricks with Perl and Apache&lt;/em&gt; was the ideal seminar for anyone running a web server. Yes, the seminar was geared toward the &lt;a href=&#34;http://www.apache.org&#34;&gt;Apache&lt;/a&gt; web server but the concepts and most of the code that Lincoln provided is useful for any webmaster/developer.&lt;/p&gt;

&lt;p&gt;Lincoln talked extensively about how to manage and process log files. This may seem like a trivial task on the surface, but managing an ever-growing file is not as easy as working with just any file. Lincoln provided useful tips and code to help.&lt;/p&gt;

&lt;p&gt;My favorite example that Lincoln talked about was how to set up an Apache web server to log to a mySQL database instead of the standard text files. By doing this, you are able to perform ad-hoc queries on the data on anything we choose. Since the log files are in a SQL database, to get at the data you simply use SQL to select and manipulate the data that you are looking for.&lt;/p&gt;

&lt;p&gt;A very humorous moment, although unintended, according to Lincoln, occurred when he was talking about using Perl to monitor a remote server. The script he was demonstrating connected to a site and used the LWP libraries &lt;em&gt;head&lt;/em&gt; command. The site Lincoln referred to was the White House. Since the latest White House scandal is still on everyone&amp;rsquo;s mind, this struck the crowd as very funny and several other funny comments followed (none of which I wish to discuss here). &lt;em&gt;See the kind of fun you miss if you don&amp;rsquo;t come to the conference?&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;understanding-regular-expressions&#34;&gt;Understanding Regular Expressions&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;Understanding Perl Regular Expressions&lt;/em&gt; was an excellent seminar by Jeffrey Friedl. Jeffrey did a wonderful job of explaining some of the details of how Perl handles regular expressions.&lt;/p&gt;

&lt;p&gt;Trying to explain regular expressions in a three-hour seminar is no easy task. Heck, trying to explain regular expressions in a fifty-hour seminar would be hard!&lt;/p&gt;

&lt;p&gt;Having been out of Jeffrey&amp;rsquo;s seminar for several hours now, still my head is spinning. If you think you have regular expressions under control, and can write them with your hands tied behind your back&amp;hellip; think again! Jeffery show several examples of simple regular expressions that looked harmful enough, but didn&amp;rsquo;t work anything like you would expect!&lt;/p&gt;

&lt;p&gt;One quick example: If you pass the string &lt;strong&gt;ab ab ab ab&lt;/strong&gt; into this regular expression: &lt;code&gt;/a*((ab)*|b*)/&lt;/code&gt; what would you expect it to match? Well, the &lt;code&gt;b*&lt;/code&gt; will &lt;strong&gt;never ever&lt;/strong&gt; be evaluated because the asterisks inside the parenthesis make it &lt;em&gt;always&lt;/em&gt; match. Also, since the &lt;strong&gt;a&lt;/strong&gt; matches and then we hit an asterisk, this regular expression really only matches the &lt;strong&gt;a&lt;/strong&gt; and then exits! Remember, the asterisk means &lt;em&gt;match zero or more times.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Jeffrey had many more examples that looked innocent enough, but were basically regular expression death-traps. The examples provided in the seminar are too detailed to explain here, but if/when I get the links to the seminar notes, I will post the URL where you can find them.&lt;/p&gt;

&lt;h4 id=&#34;suds&#34;&gt;Suds&lt;/h4&gt;

&lt;p&gt;After today&amp;rsquo;s conference, it was &lt;em&gt;buy-Randal-beer night.&lt;/em&gt; How do these guys get such great nights named after them? Anyway, several of us had an enjoyable evening at the Tied House Brewery and Cafe talking about Perl and visiting with Randal. &lt;em&gt;When is buy-Brent-beer night?&lt;/em&gt; ;-)&lt;/p&gt;

&lt;p&gt;Tuesday promises to be an exciting day also. I will be at the &lt;em&gt;Advanved Perl Fundamentals&lt;/em&gt; seminar by Randal Schwartz. It is an all-day seminar that promises to be an awesome learning experience! I will let you know about it tomorrow.&lt;/p&gt;

&lt;p&gt;It is not too late to get here and get a lot out of the conference! Larry Wall gives his &amp;ldquo;State of the Onion&amp;rdquo; address Wednesday morning.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How Perl Creates Orders For The Air Force</title>
      <link>http://localhost:1313/pub/1998/07/rwperl.html/</link>
      <pubDate>Wed, 22 Jul 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/07/rwperl.html/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is the first in a series that will provide examples of Perl solving real-world problems, particularly in an organization. If you have your own real-life story to tell, send it to &lt;a href=&#34;mailto:dale@songline.com&#34;&gt;Perl.com Editor&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;How many times have I been in a meeting where someone questions using Perl for a key business application? Someone says we shouldn&amp;rsquo;t use Perl because it is &lt;em&gt;freeware&lt;/em&gt;. Most programming languages, I argue, are not &lt;em&gt;owned&lt;/em&gt; by anyone. Are C and C++ any different from Perl in that regard? If I win that point, someone brings up yet another. I once had a webmaster tell me that we shouldn&amp;rsquo;t use Perl because of virus concerns.&lt;/p&gt;

&lt;p&gt;I just have to accept the fact that educating everyone about Perl is part of the price I pay to use Perl. Fortunately, most people are easily persuaded and when I start talking about Perl, it is hard to shut me up.&lt;/p&gt;

&lt;p&gt;While I was in the Air Force, I worked in the Base Network Control Center. It was our responsibility to handle all computer hardware and software purchases for the base.&lt;/p&gt;

&lt;p&gt;The process of ordering equipment was not simple. Many forms had to be filled out and then signed by the right people in all of the right places.&lt;/p&gt;

&lt;p&gt;We had created a database to track all of this for us but it was still a difficult process. A single order might have to be on 10 different forms and have 2 or 3 different documents generated. Also, there were 13 different times that the database entries had to be updated, from the start of an order until the equipment was received and picked up. This left too much room for human error. Updating the database was a bother and many times it just didn&amp;rsquo;t get done. Because of this, the integrity of the database was always in question. Even &lt;em&gt;if&lt;/em&gt; the database was religiously maintained, the ordering process itself was cumbersome. With nearly 1,000 orders per year, this was a lot of work!&lt;/p&gt;

&lt;p&gt;Since I was doing Web development for the base, I proposed a web-based solution written in Perl. In a meeting to discuss the project, I was candid. I said I wasn&amp;rsquo;t sure I could do it but I&amp;rsquo;d give it a try. There were other solutions proposed but my Web-based solution won out.&lt;/p&gt;

&lt;p&gt;We had a list of requirements for the application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web-based database&lt;/li&gt;
&lt;li&gt;Customer ability to check their order status&lt;/li&gt;
&lt;li&gt;Eliminate unnecessary database entries&lt;/li&gt;
&lt;li&gt;Automate as many necessary entries as possible&lt;/li&gt;
&lt;li&gt;Generate forms from a web-based interface&lt;/li&gt;
&lt;li&gt;Generate letters automatically when necessary&lt;/li&gt;
&lt;li&gt;Notify customers via e-mail when their equipment arrives&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The new Perl application was built around a database. It was actually a flat-file text database. There were two data files that we used; open and closed. The open database had around 1,000 records, and the closed database had around 6,000 records. Each record had 33 fields. (In retrospect, I might not do it with text files again. On a smaller project, text files are fine but something of this size should have been on a real database.) Overall, the speed wasn&amp;rsquo;t a problem since 95% of what we did was on the smaller, open database file.&lt;/p&gt;

&lt;p&gt;Our personnel were able to create and update database entries from their web browser. The application also created forms and other documents that they needed. For instance, we generated printable order forms compatible with the Delrina Form Flow software that was in place for creating equipment orders. We also stored the form data so that forms could be called up and changed or reprinted at a later time.&lt;/p&gt;

&lt;p&gt;We also handled other documents in Rich Text Format (RTF), which the Perl application could easily manipulate. We could modify the RTF files on the fly and send the results to the client for printing.&lt;/p&gt;

&lt;p&gt;Once the equipment arrived on site, our personnel used the Web interface to bring up the order number, check which items had come in and the database was updated. Perhaps the best feature was that the customers were automatically e-mailed a message that listed the items that had come in.&lt;/p&gt;

&lt;p&gt;This solution saved us an &lt;em&gt;official&lt;/em&gt; estimate of 900 man-hours per year. That is all that I could justify on paper. I personally think that this estimate was low. It simplified so many areas of the ordering process that I could safely say it saved well over 1,500 man-hours per year.&lt;/p&gt;

&lt;p&gt;Not only did it save time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our customers were able to check the status of their orders from their desktop&lt;/li&gt;
&lt;li&gt;Our customers got the most current information available&lt;/li&gt;
&lt;li&gt;The database integrity was greatly improved&lt;/li&gt;
&lt;li&gt;The manual database updates were cut down from 13 to 5&lt;/li&gt;
&lt;li&gt;Many database functions were masked behind the web interface&lt;/li&gt;
&lt;li&gt;Saved 20-30 phone calls per week because customers could check status on their own&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is just one example of how Perl can be used to create programs that simplify difficult processes and save time and money for any organization. Sure, there are many other languages and commercial applications that you can choose to develop in, but they too have pros and cons. I have had many of the more &lt;em&gt;seasoned&lt;/em&gt; web developers ask me &lt;em&gt;&amp;ldquo;why don&amp;rsquo;t I develop in Java?&amp;rdquo;&lt;/em&gt; I ask them back &amp;ldquo;&lt;em&gt;Why don&amp;rsquo;t you develop in Perl?&amp;rdquo;&lt;/em&gt; I have never been faced with a Web application that I could not do in Perl.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perl Builder IDE Debuts</title>
      <link>http://localhost:1313/pub/1998/07/review.html/</link>
      <pubDate>Wed, 22 Jul 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/07/review.html/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Overview:&lt;/strong&gt;
Perl Builder, by &lt;a href=&#34;http://www.solutionsoft.com&#34;&gt;Solutionsoft&lt;/a&gt;, is the first integrated development environment (IDE) for Perl. It allows you to develop and test Perl applications in a Windows 95/98/NT environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Equipment:&lt;/strong&gt;
I tested Perl Builder on a machine with a Cyrix 6x86/200MHz processor and 48Mb RAM using Windows 95 and then the same machine using Windows 98. Both of these test machines used the ActiveState Perl port. I also tested Perl Builder on a Pentium 166 with 96Mb RAM running Windows NT. This machine used the latest Gurusamy Sarathy port of Perl.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation:&lt;/strong&gt;
Installing Perl Builder took about 5 minutes. It was very simple and I had no installation problems. I was surprised by the nice, clean interface and yet the program was only around 750kb in size before installation! To me, this is remarkable in an age where IDE&amp;rsquo;s can easily take over 100Mb of space. Granted, Perl Builder is really just a text editor that integrates with Perl so there are no libraries or any Perl-related files included with the program.&lt;/p&gt;

&lt;p&gt;To use Perl Builder, you need to have Perl installed on your system. You can use either the ActiveState Perl port or the &amp;ldquo;Gurusamy Sarathy&amp;rdquo; port of Perl. Neither of which come with Perl Builder, but Solutionsoft does provide links so that you can easily download them. I recommend the &amp;ldquo;Gurusamy Sarathy&amp;rdquo; version.&lt;/p&gt;

&lt;p&gt;Once installed, my first task was to run through the tutorial provided. The tutorial walks you through creating a &amp;ldquo;mailto&amp;rdquo; form using an HTML form that they provide. It worked as advertised and was an easy-to-follow tutorial that provides you with a good overview of the IDE.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Programming Environment&lt;/strong&gt;
Perl Builder is basically a text editor that has been written specifically for writing Perl scripts. Perl Builder provides a simple programming environment that is easy to get comfortable with. The different windows in the IDE are &amp;ldquo;tabbed&amp;rdquo; for easy access. The normal tabs are &lt;em&gt;Main Script, Input Values,&lt;/em&gt; and &lt;em&gt;Output: HTML/Text&lt;/em&gt;. Other tabs, like &lt;em&gt;errors,&lt;/em&gt; are added as needed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_07_review/perlbuilder.gif&#34; alt=&#34;The Perl Builder Window&#34; width=&#34;450&#34; height=&#34;327&#34; /&gt;
&lt;strong&gt;Figure 1: Perl Builder&amp;rsquo;s visual editor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Main Script&lt;/em&gt; tab is the area where you actually write the script. The code that you write is automatically color-coded by Perl Builder and the colors are user-customizeable Having color-coded Perl code makes viewing the code much easier. I found that once you get accustomed to the colors, you can quickly scan the code for what you are looking for.&lt;/p&gt;

&lt;p&gt;The *Input Values*tab allows you to specify either the values that you would have sent from an HTML form if you are writing a CGI script. Or, from STDIN if you are writing a non-CGI script.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Output&lt;/em&gt; tab shows you what output your Perl application produced. If you are writing a CGI script, there is a button on this tab that allows you to view the code in a web browser. Perl Builder actually takes the output from your script, and produces a local HTML file for the browser view.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Errors&lt;/em&gt; tab does exactly what you would expect it to do, it shows you any errors that were generated by your script. The feature I liked here is that you can double-click on the error, and you are taken right to that line of code on the &lt;em&gt;Main Script&lt;/em&gt; tab.&lt;/p&gt;

&lt;p&gt;When a CGI script generates one or more e-mail messages, Perl Builder also provides a tab that shows you what the e-mail(s) would look like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debugging&lt;/strong&gt;
Perl Builder includes some great features for debugging your code. You can set breakpoints, watches, step through your code or do just about anything that an IDE debugger should do. You can also run with &amp;ldquo;strict&amp;rdquo; or evaluate your code with the -w flag.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nice Features&lt;/strong&gt;
Perl Builder has many nice features. My favorites were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;*Editor-scripts
*The &lt;em&gt;Editor-scripts&lt;/em&gt; menu item, my favorite tool, allows you to write Perl scripts that will be performed on your code. Solutionsoft includes a few like block-comment and block-uncomment. I wrote a quick one that allows me to add line-numbers to my code and replace all of the &amp;lt; and &amp;gt;&amp;rsquo;s in my code with their HTML equivalents. This saves me a great deal of time when I write code for articles. Now I just highlight the code, and let Perl Builder do everything for me.&lt;/p&gt;

&lt;p&gt;To use the editor scripts, all you do is highlight the code you want to perform the action on, and choose the appropriate item from the menu. The code is executed only on the part of your script that you highlighted. Plus, you don&amp;rsquo;t have to learn any new &amp;ldquo;scripting languages&amp;rdquo;, it is all customized with Perl code.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;*Regular Expression Search/Replace&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This feature allows you to use the power of Perl and create complex search/replace regular expressions that are executed on your script.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;*CGI Wizard&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The CGI Wizard in Perl Builder allows even non-programmers to write CGI scripts that can accept HTML form data, validate the entries, e-mail multiple messages to multiple recipients and generate response pages on-the-fly. The CGI Wizard steps you through the process and does 99% of the work for you. All you have to do is choose an HTML form, the wizard imports the variables and then steps you through the rest of the process.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Weaknesses&lt;/strong&gt;
Perl Builder is a great product, but there were a few items that I&amp;rsquo;d like to see addressed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The menu bar at the top of the IDE did not have a &lt;em&gt;print&lt;/em&gt; button. I like to print my code out and draw all over it, while this is just a minor detail, I&amp;rsquo;d like to see it added.&lt;/li&gt;
&lt;li&gt;When generating forms on-the-fly, Perl Builder only allows you to create and test the first form. You cannot test scripts on code that was dynamically generated. The ability to test the dynamically generated forms would add to the complexity of the program, but it is needed to fully test CGI scripts. I write many scripts that dynamically generate HTML forms and call themselves with these new forms.&lt;/li&gt;
&lt;li&gt;When using the watch portion of the debugger, I found that when I closed the watch window I began getting errors from Perl even though none of the code had changed. I found that if I closed Perl Builder and restarted it, all was well again.&lt;/li&gt;
&lt;li&gt;I also ran into a few graphic glitches while using the program. The graphic problems were much better than in the beta that I had tested previously but they were still annoying. I am confident that as this program evolves, this is still version 1.0 of the program, these glitches will be worked out.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Wrapping It Up&lt;/strong&gt;
Overall, Perl Builder is a great program and is something that should have been developed a long time ago. It is a great tool for both beginning Perl programmers, and experienced Perl programmers. Perl Builder&amp;rsquo;s clean interface and powerful features take much of the unnecessary work out of Perl programming.&lt;/p&gt;

&lt;p&gt;While it is not perfect, and can&amp;rsquo;t handle some of the more complex Perl programs, it is a great environment for developing most of your CGI scripts. The ability to easily test your scripts locally is something that makes CGI programming much easier.&lt;/p&gt;

&lt;p&gt;The price for Perl Builder is $149. Although I think that the price is reasonable, I think it would do better if the price was around the $99 range. Perl developers have become accustomed to free software and I think that they may have a hard time spending almost $150 for a &amp;ldquo;helper&amp;rdquo; program.&lt;/p&gt;

&lt;p&gt;Overall, I give Perl Builder a 4.5 out of 5 camel rating.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Author&amp;rsquo;s note: I was contacted by Solutionsoft and told that a version 1.0a would be released sometime this week. Version 1.0a is supposed to fix many of the bugs that we found in version 1.0. An update to this article will be added when I have had a chance to evaluate the new version.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

