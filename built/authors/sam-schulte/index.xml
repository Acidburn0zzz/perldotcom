<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sam Schulte on Perl.com - programming news, code and culture</title>
    <link>http://localhost:1313/authors/sam-schulte/</link>
    <description>Recent content in Sam Schulte on Perl.com - programming news, code and culture</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Nov 1998 00:00:00 -0800</lastBuildDate>
    <atom:link href="/authors/sam-schulte/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A Zero Cost Solution</title>
      <link>http://localhost:1313/pub/1998/11/article.html/</link>
      <pubDate>Tue, 17 Nov 1998 00:00:00 -0800</pubDate>
      
      <guid>http://localhost:1313/pub/1998/11/article.html/</guid>
      <description>&lt;p&gt;Creating a Task Tracking System For $0 in Licensing Fees, Hardware, and Software Costs&lt;/p&gt;

&lt;p&gt;CONEXANT (formerly Rockwell Semiconductor Systems) Supply Chain Management Planning and Execution Systems needed a way to keep track of in-house tasks. When associate departments requested something be done for them, a centralized repository of their requests needed to be created for tracking and management purposes, and the ability to assign tasks to programmer/analysts needed to be integrated into this repository of data.&lt;/p&gt;

&lt;p&gt;We looked for a simple software solution to meet our needs with no luck. There were many solutions found that did LOTS more than we needed them to do, with steep learning curves for users due to the products&amp;rsquo; complexities, and more often than not, enormous pricetags accompanied most of these products. We needed a system that could accomodate as many as 200 users down the road, and licensing fees for this quantity of users were outrageous.&lt;/p&gt;

&lt;p&gt;So I decided to build one in-house. I had a couple of criteria: 1) The system had to be able to run on both an Alpha-powered Digital Unix server, and on a Microsoft NT 4.0 server. 2) The system needed to be developed fast. Our tasks were piling up and the system was needed to keep track of them in a way that all concerned could get at the data, search it, assign tasks from it, modify it, etc.&lt;/p&gt;

&lt;p&gt;Enter Perl. I&amp;rsquo;d been using it for basic CGI for a little over 6 months, mainly to dynamically generate web pages from text files FTP&amp;rsquo;d to me by Oracle database queries. Open a filehandle, read in the text file, process a few loops, and print some HTML. I looked around the web for a simple text database management system, found a couple, but didn&amp;rsquo;t understand how the programmers had come up with the code I saw. I&amp;rsquo;m still learning the basics of Perl, and figured I could try to code a solution that would do the job we needed done, and I could learn a lot in the process!&lt;/p&gt;

&lt;p&gt;Perl amazed me. I was able to logically think of what I wanted to do, and the language allowed me to stumble and fall gracefully as the solution quickly came together. It was actually very fun to do! I worked with &lt;em&gt;Learning Perl&lt;/em&gt;, &lt;em&gt;Programming Perl&lt;/em&gt;, and &lt;em&gt;Effective Perl Programming&lt;/em&gt; close at hand, and only needed one trip to the Perl newsgroup to ask a silly question, which was very promptly and courteously answered.&lt;/p&gt;

&lt;p&gt;I got the majority of the basic add, delete, modify, search and assign (email) process written in about a week, and from start to completely finished product, it took me only 4 weeks. I must thank Matt Wright for his &lt;a href=&#34;http://www.worldwidemart.com/scripts/&#34;&gt;FormMail&lt;/a&gt; Perl script that I use on the Alpha for form to email processing in the &amp;ldquo;assign task&amp;rdquo; code.&lt;/p&gt;

&lt;p&gt;The Home screen greets the user, and lets them know they can use any browser they wish to use the system, and a few other minor tidbits.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/home.gif&#34; alt=&#34;Home Screen&#34; width=&#34;330&#34; height=&#34;226&#34; /&gt;
&lt;strong&gt;Home screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Add screen is where a new task is added to the database. The database is an ASCII text delimited file, and I provide a link to it on the Home screen so that users can download it and play in Access or Excel or whatever. Drop down menus were built with as much information as possible to make data entry easier on the users throughout the system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/add.gif&#34; alt=&#34;Add Screen&#34; width=&#34;449&#34; height=&#34;279&#34; /&gt;
&lt;strong&gt;Add screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Delete screen is presented when the delete menu item is selected. A radio button allows the user to select which task record is to be deleted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/delete.gif&#34; alt=&#34;Delete Screen&#34; width=&#34;450&#34; height=&#34;338&#34; /&gt;
&lt;strong&gt;Delete screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first Modify screen is similiar to the Delete screen&amp;hellip;a radio button selects the task record for modification.&lt;/p&gt;

&lt;p&gt;The second Modification screen brings the record back to textboxes, where the user can modify fields and the information is written back to the database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/modify.gif&#34; alt=&#34;The second modify screen&#34; width=&#34;418&#34; height=&#34;278&#34; /&gt;
&lt;strong&gt;Second modify screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first Assign screen is similiar to the Delete screen&amp;hellip;a radio button selects the task record for assignment.&lt;/p&gt;

&lt;p&gt;The second Assign screen brings the record back to the user, where after review the user selects the task recipient from a drop down menu, and identifys themself from another drop down menu. When the &amp;ldquo;Assign Task&amp;rdquo; button is pressed, the record data is passed to the sendmail daemon on the Alpha through Matt Wright&amp;rsquo;s FormMail script.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/assign.gif&#34; alt=&#34;Second assignment screen&#34; width=&#34;449&#34; height=&#34;246&#34; /&gt;
&lt;strong&gt;Second assign screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Search screen facilitates entry of data for search on a single field in the database. (As I learn more Perl, I&amp;rsquo;ll add the ability to search on more than one field at a time, but this works for now!)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/search.gif&#34; alt=&#34;Search screen&#34; width=&#34;316&#34; height=&#34;262&#34; /&gt;
&lt;strong&gt;Search screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And finally there is a Show All function, returning all records.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/_pub_1998_11_article/showall.gif&#34; alt=&#34;Show all screen&#34; width=&#34;450&#34; height=&#34;338&#34; /&gt;
&lt;strong&gt;Show All screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The program is currently running on Gurusamy Sarathy&amp;rsquo;s 5.004_02 Win32 binary distribution on a NT 4.0 server, and works great! It was fun to write, and I suspect I&amp;rsquo;ll be fiddling with it, adding capabilties as the users request them, for some time to come. Big thanks to all the Perl community for helping to develop such a great tool for rapid application development, a tool easily learned, and very forgiving to us Perl newbies!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

